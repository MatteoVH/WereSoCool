{ f: 310, l: 1, g: 1, p: 0 }

major = List [Tm 1, Tm 9/8, Tm 5/4, Tm 4/3, Tm 3/2, Tm 5/3, Tm 15/8]
major.apply_to_normal_form() => Seq [Tm 1, Tm 9/8, Tm 5/4, Tm 4/3, Tm 3/2, Tm 5/3, Tm 15/8]

melody = List major[3, 2, 1, 7, 5, 1]
melody.apply_to_normal_form() => Seq [Tm 5/4, Tm 9/8, Tm 1, Tm 15/8, Tm 3/2, Tm 1]

et12 = ET(12)

[x] list = { 
    List [Tm 1, Tm 2]
}

[x] named_list = { 
    melody
}

[x] indexed_list = { 
    List [Tm 1, Tm 2] @ [0, 1, 0]
}

[x] indexed_named_list = { 
    list_def @ [0, 1, 0]
}

[x] op_composed_with_list = { 
    Tm 9/8 | melody
}

[x] indexed_named_list = { 
    list_def @ [0, 1, 0]
}

[x] list_fit_length = { 
    List [Tm 1, Tm 9/8] @ [0, 1, 0] > FitLength other_list
    List [Tm 1, Tm 9/8] > FitLength other_list
    list > FitLength other_list
}

et = { 
    ET(12) @ [0, 5, 11, 23, -4, -10, 3]
}

random = {
    ET(12)[Random(9)]
}

limit = {
    Limit(5)[1, 2, 3, 4]
}

indexed_transposed_list = { 
    et12[0, /11, /10, /7, /4, 5, 3, 2, /11, 7, \2]
}


Lop =
  List(Vec<Term>)
| IndexedList(List, Indicies: Vec<Index>)
| ET(Int)

Index =
  Int
| IntWithTerm(Int, Term)
| Random(Int)

ET(d: Int) => { 
    result = List[]
    for i in 0..d {
        result.push(
            Op::TransposeM( m: 2 ** i/d )
        )
    }
}


list = { 
    List [Tm 1, Tm 9/8]
}
.normalize()
=> Lop(ListOp(Vec<Op>))
.normalize()
=> Lop(ListNf(Vec<NormalForm>)
.normalize()

















