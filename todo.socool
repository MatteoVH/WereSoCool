{ f: 310, l: 1, g: 1, p: 0 }

major = List[Tm 1, Tm 9/8, Tm 5/4, Tm 4/3, Tm 3/2, Tm 5/3, Tm 15/8]
major.apply_to_normal_form() => Seq [Tm 1, Tm 9/8, Tm 5/4, Tm 4/3, Tm 3/2, Tm 5/3, Tm 15/8]

melody = major[3, 2, 1, 7, 5, 1]
melody.apply_to_normal_form() => Seq [Tm 5/4, Tm 9/8, Tm 1, Tm 15/8, Tm 3/2, Tm 1]

et12 = ET(12)

thing2 = { 
    Seq [melody, Tm 9/8]
}

thing1 = { 
    Seq [major[2, 4, 3, 3, 4, 1], Tm 9/8]
}

thing3 = { 
    et12[0, 5, 11, 23, -4, -10, 3]
}


thing4 = { 
    et12[0, /11, /10, /7, /4, 5, 3, 2, /11, 7, \2]
}

Lop =
  List
| IndexInto(List, Vec<Index>)
| ET(Int)

Index =
| Int
| IntWithOp(Int, Op)

ET(d: Int) => { 
    result = List[]
    for i in 0..d {
        result.push(
            Op::TransposeM( m: 2 ** i/d )
        )
    }
}

