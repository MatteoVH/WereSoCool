{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9","program":"/Users/danny/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","fixedbitset","/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=b8db0b40b719ac55","-C","extra-filename=-b8db0b40b719ac55","--out-dir","/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps","-L","dependency=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/danny/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/libfixedbitset-b8db0b40b719ac55.rmeta"},"prelude":{"crate_id":{"name":"fixedbitset","disambiguator":[12809543366760121614,11581573310287303441]},"crate_root":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src","external_crates":[{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15786589783347927115,14932276094748675792]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10298575208133357036,8040858178392247411]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12346914022686079705,4940267238012603511]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18114786932049689441,12972308710781110595]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3450676385096259377,17670937522874515785]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17577124700929205618,18199936732272738370]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12559880231068804868,15252340553816167694]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1187771448540952860,5203397268813630476]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[18283159763238190815,6626693072124271590]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[13458662043719537980,9570942752289014475]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11980204761434995587,1127255387257643439]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8467147480215253010,13194617755467267743]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8463084087322079994,16053869174229632260]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16926090732921528503,7551031884587596916]}}],"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":0,"byte_end":25558,"line_start":1,"line_end":988,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":9},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":247,"byte_end":257,"line_start":9,"line_end":9,"column_start":16,"column_end":26},"alias_span":null,"name":"IndexRange","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":0,"byte_end":25558,"line_start":1,"line_end":988,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":25},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":130},{"krate":0,"index":157},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":140},{"krate":0,"index":138},{"krate":0,"index":135},{"krate":0,"index":133},{"krate":0,"index":41},{"krate":0,"index":67},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":90},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":107},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":126}],"decl_id":null,"docs":" `FixedBitSet` is a simple fixed size set of bits.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":25845,"byte_end":25855,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"name":"IndexRange","qualname":"::range::IndexRange","value":"IndexRange<T = usize>","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12}],"decl_id":null,"docs":" **IndexRange** is implemented by Rust's built-in range types, produced\n by range syntax like `..`, `a..`, `..b` or `c..d`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":25920,"byte_end":25925,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"start","qualname":"::range::IndexRange::start","value":"fn (&self) -> Option<T>","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" Start index (inclusive)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":25871,"byte_end":25880,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26006,"byte_end":26009,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"end","qualname":"::range::IndexRange::end","value":"fn (&self) -> Option<T>","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" End index (exclusive)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":25959,"byte_end":25968,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":130},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":766,"byte_end":777,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"FixedBitSet","qualname":"::FixedBitSet","value":"FixedBitSet {  }","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"decl_id":null,"docs":" `FixedBitSet` is a simple fixed size set of bits that each can\n be enabled (1 / **true**) or disabled (0 / **false**).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":975,"byte_end":988,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FixedBitSet>::with_capacity","value":"fn (bits: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **FixedBitSet** with a specific number of bits,\n all initially clear.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1290,"byte_end":1294,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"grow","qualname":"<FixedBitSet>::grow","value":"fn (&mut self, bits: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Grow capacity to **bits**, all new bits initialized to zero\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1615,"byte_end":1618,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"len","qualname":"<FixedBitSet>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the `FixedBitSet` in bits.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1594,"byte_end":1603,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1916,"byte_end":1924,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"contains","qualname":"<FixedBitSet>::contains","value":"fn (&self, bit: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return **true** if the bit is enabled in the **FixedBitSet**,\n **false** otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1895,"byte_end":1904,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2177,"byte_end":2182,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"clear","qualname":"<FixedBitSet>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all bits.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2156,"byte_end":2165,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2381,"byte_end":2387,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"insert","qualname":"<FixedBitSet>::insert","value":"fn (&mut self, bit: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Enable `bit`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2360,"byte_end":2369,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2725,"byte_end":2728,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"put","qualname":"<FixedBitSet>::put","value":"fn (&mut self, bit: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable `bit`, and return its previous value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2704,"byte_end":2713,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":3105,"byte_end":3108,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"set","qualname":"<FixedBitSet>::set","value":"fn (&mut self, bit: usize, enabled: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" **Panics** if **bit** is out of bounds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":3084,"byte_end":3093,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":3603,"byte_end":3611,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"copy_bit","qualname":"<FixedBitSet>::copy_bit","value":"fn (&mut self, from: usize, to: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copies boolean value from specified bit to the specified bit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":3582,"byte_end":3591,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4238,"byte_end":4248,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"count_ones","qualname":"<FixedBitSet>::count_ones","value":"fn <T> (&self, range: T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Count the number of set bits in the given bit range.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4217,"byte_end":4226,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4759,"byte_end":4768,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"set_range","qualname":"<FixedBitSet>::set_range","value":"fn <T> (&mut self, range: T, enabled: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets every bit in the given range to the given state (`enabled`)","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4738,"byte_end":4747,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5346,"byte_end":5358,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"insert_range","qualname":"<FixedBitSet>::insert_range","value":"fn <T> (&mut self, range: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Enables every bit in the given range.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5325,"byte_end":5334,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5521,"byte_end":5529,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FixedBitSet>::as_slice","value":"fn (&self) -> &[u32]","parent":null,"children":[],"decl_id":null,"docs":" View the bitset as a slice of `u32` blocks\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5500,"byte_end":5509,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5802,"byte_end":5814,"line_start":208,"line_end":208,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FixedBitSet>::as_mut_slice","value":"fn (&mut self) -> &mut [u32]","parent":null,"children":[],"decl_id":null,"docs":" View the bitset as a mutable slice of `u32` blocks. Writing past the bitlength in the last\n will cause `contains` to return potentially incorrect results for bits past the bitlength.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5781,"byte_end":5790,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":6017,"byte_end":6021,"line_start":217,"line_end":217,"column_start":12,"column_end":16},"name":"ones","qualname":"<FixedBitSet>::ones","value":"fn (&self) -> Ones","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all enabled bits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5996,"byte_end":6005,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":6686,"byte_end":6698,"line_start":239,"line_end":239,"column_start":12,"column_end":24},"name":"intersection","qualname":"<FixedBitSet>::intersection","value":"fn <'a> (&'a self, other: &'a FixedBitSet) -> Intersection<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the intersection of two `FixedBitSet`s\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":6941,"byte_end":6946,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"union","qualname":"<FixedBitSet>::union","value":"fn <'a> (&'a self, other: &'a FixedBitSet) -> Union<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the union of two `FixedBitSet`s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7267,"byte_end":7277,"line_start":257,"line_end":257,"column_start":12,"column_end":22},"name":"difference","qualname":"<FixedBitSet>::difference","value":"fn <'a> (&'a self, other: &'a FixedBitSet) -> Difference<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the difference of two `FixedBitSet`s. The difference of `a`\n and `b` is the elements of `a` which are not in `b`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":67},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7588,"byte_end":7598,"line_start":269,"line_end":269,"column_start":12,"column_end":22},"name":"Difference","qualname":"::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" An iterator producing elements in the difference of two sets.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":75},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8108,"byte_end":8120,"line_start":292,"line_end":292,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" An iterator producing elements in the intersection of two sets.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8647,"byte_end":8652,"line_start":314,"line_end":314,"column_start":12,"column_end":17},"name":"Union","qualname":"::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":85}],"decl_id":null,"docs":" An iterator producing elements in the union of two sets.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":101},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":10591,"byte_end":10595,"line_start":385,"line_end":385,"column_start":12,"column_end":16},"name":"Ones","qualname":"::Ones","value":"Ones {  }","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"decl_id":null,"docs":" An  iterator producing the indices of the set bit in a set.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26069,"byte_end":26078,"line_start":22,"line_end":22,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26115,"byte_end":26124,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26233,"byte_end":26240,"line_start":29,"line_end":29,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26345,"byte_end":26350,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":852,"byte_end":863,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7678,"byte_end":7688,"line_start":274,"line_end":274,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8200,"byte_end":8212,"line_start":297,"line_end":297,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8727,"byte_end":8732,"line_start":318,"line_end":318,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8974,"byte_end":8979,"line_start":335,"line_end":335,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":9693,"byte_end":9698,"line_start":355,"line_end":355,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":10745,"byte_end":10749,"line_start":392,"line_end":392,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":11959,"byte_end":11970,"line_start":432,"line_end":432,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":12352,"byte_end":12363,"line_start":449,"line_end":449,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":12666,"byte_end":12677,"line_start":465,"line_end":465,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":13089,"byte_end":13100,"line_start":480,"line_end":480,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26069,"byte_end":26078,"line_start":22,"line_end":22,"column_start":27,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":26845},"to":{"krate":0,"index":9}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26115,"byte_end":26124,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":26881},"to":{"krate":0,"index":9}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26233,"byte_end":26240,"line_start":29,"line_end":29,"column_start":33,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":26902},"to":{"krate":0,"index":9}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26345,"byte_end":26350,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":2,"index":26859},"to":{"krate":0,"index":9}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":852,"byte_end":863,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7678,"byte_end":7688,"line_start":274,"line_end":274,"column_start":23,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8200,"byte_end":8212,"line_start":297,"line_end":297,"column_start":23,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8727,"byte_end":8732,"line_start":318,"line_end":318,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8974,"byte_end":8979,"line_start":335,"line_end":335,"column_start":6,"column_end":11},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":9693,"byte_end":9698,"line_start":355,"line_end":355,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":90},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":10745,"byte_end":10749,"line_start":392,"line_end":392,"column_start":23,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":11959,"byte_end":11970,"line_start":432,"line_end":432,"column_start":16,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":12352,"byte_end":12363,"line_start":449,"line_end":449,"column_start":23,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":12666,"byte_end":12677,"line_start":465,"line_end":465,"column_start":24,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":3960}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":13089,"byte_end":13100,"line_start":480,"line_end":480,"column_start":30,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":3947}}]}