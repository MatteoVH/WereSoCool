{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0","program":"/Users/danny/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","portaudio","/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","rlib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=27ecb216fb96657b","-C","extra-filename=-27ecb216fb96657b","--out-dir","/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps","-L","dependency=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps","--extern","bitflags=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/libbitflags-15f77948d7a9e5f0.rmeta","--extern","libc=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/liblibc-f39be172cceedb69.rmeta","--extern","num=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/libnum-f21771797028add3.rmeta","--cap-lints","allow","-L","native=/usr/local/Cellar/portaudio/19.6.0/lib","-l","portaudio","-l","framework=CoreAudio","-l","framework=AudioToolbox","-l","framework=AudioUnit","-l","framework=Carbon","--error-format=json","--sysroot","/Users/danny/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/libportaudio-27ecb216fb96657b.rmeta"},"prelude":{"crate_id":{"name":"portaudio","disambiguator":[11468284409907752544,15499775220398017400]},"crate_root":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src","external_crates":[{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15786589783347927115,14932276094748675792]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10298575208133357036,8040858178392247411]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12346914022686079705,4940267238012603511]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18114786932049689441,12972308710781110595]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3450676385096259377,17670937522874515785]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17577124700929205618,18199936732272738370]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12559880231068804868,15252340553816167694]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1187771448540952860,5203397268813630476]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[18283159763238190815,6626693072124271590]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[13458662043719537980,9570942752289014475]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11980204761434995587,1127255387257643439]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8467147480215253010,13194617755467267743]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8463084087322079994,16053869174229632260]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16926090732921528503,7551031884587596916]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":15,"id":{"name":"bitflags","disambiguator":[3607454624723058574,18038426350474688419]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":16,"id":{"name":"libc","disambiguator":[13213541924299030972,7723605278740081694]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":17,"id":{"name":"num","disambiguator":[9195522677391506126,10706761040904417298]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":18,"id":{"name":"num_traits","disambiguator":[14363403866198358880,2979208306283802329]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":19,"id":{"name":"num_integer","disambiguator":[14647044969495903966,202152753721352913]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","num":20,"id":{"name":"num_iter","disambiguator":[7060294936176083253,15886898960536008780]}}],"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":1159,"byte_end":32395,"line_start":22,"line_end":804,"column_start":1,"column_end":22}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2523,"byte_end":2528,"line_start":59,"line_end":59,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":946},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2552,"byte_end":2561,"line_start":61,"line_end":61,"column_start":5,"column_end":14},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2565,"byte_end":2580,"line_start":61,"line_end":61,"column_start":18,"column_end":33},"name":"StreamAvailable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":196},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2586,"byte_end":2594,"line_start":62,"line_end":62,"column_start":5,"column_end":13},"alias_span":null,"name":"Blocking","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":290},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2600,"byte_end":2614,"line_start":63,"line_end":63,"column_start":5,"column_end":19},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2618,"byte_end":2639,"line_start":63,"line_end":63,"column_start":23,"column_end":44},"name":"stream_callback_flags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":969},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2645,"byte_end":2658,"line_start":64,"line_end":64,"column_start":5,"column_end":18},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2662,"byte_end":2681,"line_start":64,"line_end":64,"column_start":22,"column_end":41},"name":"StreamCallbackFlags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1074},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2687,"byte_end":2701,"line_start":65,"line_end":65,"column_start":5,"column_end":19},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2705,"byte_end":2725,"line_start":65,"line_end":65,"column_start":23,"column_end":43},"name":"StreamCallbackResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1089},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2731,"byte_end":2747,"line_start":66,"line_end":66,"column_start":5,"column_end":21},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2751,"byte_end":2773,"line_start":66,"line_end":66,"column_start":25,"column_end":47},"name":"StreamCallbackTimeInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2779,"byte_end":2785,"line_start":67,"line_end":67,"column_start":5,"column_end":11},"alias_span":null,"name":"Duplex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":808},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2791,"byte_end":2805,"line_start":68,"line_end":68,"column_start":5,"column_end":19},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2809,"byte_end":2829,"line_start":68,"line_end":68,"column_start":23,"column_end":43},"name":"DuplexStreamSettings","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":735},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2835,"byte_end":2853,"line_start":69,"line_end":69,"column_start":5,"column_end":23},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2857,"byte_end":2881,"line_start":69,"line_end":69,"column_start":27,"column_end":51},"name":"DuplexStreamCallbackArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2887,"byte_end":2892,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2896,"byte_end":2908,"line_start":70,"line_end":70,"column_start":14,"column_end":26},"name":"stream_flags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":841},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2914,"byte_end":2919,"line_start":71,"line_end":71,"column_start":5,"column_end":10},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2923,"byte_end":2934,"line_start":71,"line_end":71,"column_start":14,"column_end":25},"name":"StreamFlags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2940,"byte_end":2944,"line_start":72,"line_end":72,"column_start":5,"column_end":9},"alias_span":null,"name":"Flow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1098},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2950,"byte_end":2954,"line_start":73,"line_end":73,"column_start":5,"column_end":9},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2958,"byte_end":2968,"line_start":73,"line_end":73,"column_start":13,"column_end":23},"name":"StreamInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":208},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2974,"byte_end":2979,"line_start":74,"line_end":74,"column_start":5,"column_end":10},"alias_span":null,"name":"Input","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":780},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2985,"byte_end":2998,"line_start":75,"line_end":75,"column_start":5,"column_end":18},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3002,"byte_end":3021,"line_start":75,"line_end":75,"column_start":22,"column_end":41},"name":"InputStreamSettings","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":690},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3027,"byte_end":3044,"line_start":76,"line_end":76,"column_start":5,"column_end":22},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3048,"byte_end":3071,"line_start":76,"line_end":76,"column_start":26,"column_end":49},"name":"InputStreamCallbackArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":199},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3077,"byte_end":3088,"line_start":77,"line_end":77,"column_start":5,"column_end":16},"alias_span":null,"name":"NonBlocking","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3094,"byte_end":3100,"line_start":78,"line_end":78,"column_start":5,"column_end":11},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":794},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3106,"byte_end":3120,"line_start":79,"line_end":79,"column_start":5,"column_end":19},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3124,"byte_end":3144,"line_start":79,"line_end":79,"column_start":23,"column_end":43},"name":"OutputStreamSettings","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3150,"byte_end":3168,"line_start":80,"line_end":80,"column_start":5,"column_end":23},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3172,"byte_end":3196,"line_start":80,"line_end":80,"column_start":27,"column_end":51},"name":"OutputStreamCallbackArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":759},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3202,"byte_end":3212,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3216,"byte_end":3232,"line_start":81,"line_end":81,"column_start":19,"column_end":35},"name":"StreamParameters","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3238,"byte_end":3246,"line_start":82,"line_end":82,"column_start":5,"column_end":13},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3250,"byte_end":3264,"line_start":82,"line_end":82,"column_start":17,"column_end":31},"name":"StreamSettings","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":201},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3270,"byte_end":3276,"line_start":83,"line_end":83,"column_start":5,"column_end":11},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1075},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3319,"byte_end":3327,"line_start":86,"line_end":86,"column_start":5,"column_end":13},"alias_span":null,"name":"Continue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1078},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3333,"byte_end":3341,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"alias_span":null,"name":"Complete","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1081},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3347,"byte_end":3352,"line_start":88,"line_end":88,"column_start":5,"column_end":10},"alias_span":null,"name":"Abort","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3378,"byte_end":3389,"line_start":91,"line_end":91,"column_start":5,"column_end":16},"alias_span":null,"name":"DeviceIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1420},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3395,"byte_end":3405,"line_start":92,"line_end":92,"column_start":5,"column_end":15},"alias_span":null,"name":"DeviceInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3411,"byte_end":3417,"line_start":93,"line_end":93,"column_start":5,"column_end":11},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":391},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3423,"byte_end":3435,"line_start":94,"line_end":94,"column_start":5,"column_end":17},"alias_span":null,"name":"HostApiIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1373},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3441,"byte_end":3452,"line_start":95,"line_end":95,"column_start":5,"column_end":16},"alias_span":null,"name":"HostApiInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1320},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3458,"byte_end":3471,"line_start":96,"line_end":96,"column_start":5,"column_end":18},"alias_span":null,"name":"HostApiTypeId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3477,"byte_end":3490,"line_start":97,"line_end":97,"column_start":5,"column_end":18},"alias_span":null,"name":"HostErrorInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1171},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3496,"byte_end":3508,"line_start":98,"line_end":98,"column_start":5,"column_end":17},"alias_span":null,"name":"SampleFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":392},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3514,"byte_end":3518,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3524,"byte_end":3553,"line_start":100,"line_end":100,"column_start":5,"column_end":34},"alias_span":null,"name":"FRAMES_PER_BUFFER_UNSPECIFIED","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":969},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":50526,"byte_end":50539,"line_start":22,"line_end":22,"column_start":31,"column_end":44},"alias_span":null,"name":"CallbackFlags","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":841},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":50562,"byte_end":50567,"line_start":23,"line_end":23,"column_start":22,"column_end":27},"alias_span":null,"name":"Flags","value":"","parent":{"krate":0,"index":156}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":1159,"byte_end":32395,"line_start":22,"line_end":804,"column_start":1,"column_end":22},"name":"","qualname":"::","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":31},{"krate":0,"index":35},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":156},{"krate":0,"index":381},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":426},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":1495},{"krate":0,"index":1503},{"krate":0,"index":1500},{"krate":0,"index":484},{"krate":0,"index":489},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"decl_id":null,"docs":" # rust-portaudio\n \n __PortAudio__ bindings for Rust\n \n PortAudio provides a uniform application programming interface (API) across all\n supported platforms.  You can think of the PortAudio library as a wrapper that\n converts calls to the PortAudio API into calls to platform-specific native audio\n APIs. Operating systems often offer more than one native audio API and some APIs\n (such as JACK) may be available on multiple target operating systems.\n PortAudio supports all the major native audio APIs on each supported platform.\n \n # Installation\n \n rust-portaudio's build script will check to see if you have already installed\n PortAudio on your system. If not, it will attempt to automatically download and\n install it for you. If this fails, please let us know by posting an issue at [our\n github repository] (https://github.com/jeremyletang/rust-portaudio).\n \n If you'd prefer to install it manually, you can download it directly from the website:\n [PortAudio](http://www.portaudio.com/download.html).\n \n # Usage\n \n Add rust-portaudio to your project by adding the dependency to your Cargo.toml as follows:\n \n ```toml\n [dependencies]\n portaudio = \"*\"\n ```\n","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":2409,"byte_end":2431,"line_start":52,"line_end":52,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":50},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":598},{"krate":0,"index":596},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":591},{"krate":0,"index":589},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55}],"decl_id":null,"docs":"\n A module for implementing the Portaudio Error type and\n implementing the std Error trait.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":527},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":32654,"byte_end":32661,"line_start":11,"line_end":11,"column_start":5,"column_end":12},"name":"NoError","qualname":"::error::Error::NoError","value":"Error::NoError","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" No Error\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":530},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":32705,"byte_end":32719,"line_start":13,"line_end":13,"column_start":5,"column_end":19},"name":"NotInitialized","qualname":"::error::Error::NotInitialized","value":"Error::NotInitialized","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Portaudio not initialized\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":533},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":32776,"byte_end":32798,"line_start":15,"line_end":15,"column_start":5,"column_end":27},"name":"UnanticipatedHostError","qualname":"::error::Error::UnanticipatedHostError","value":"Error::UnanticipatedHostError","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Unanticipated error from the host\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":535},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":32834,"byte_end":32853,"line_start":17,"line_end":17,"column_start":5,"column_end":24},"name":"InvalidChannelCount","qualname":"::error::Error::InvalidChannelCount","value":"Error::InvalidChannelCount","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Invalid channel count\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":537},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":32887,"byte_end":32904,"line_start":19,"line_end":19,"column_start":5,"column_end":22},"name":"InvalidSampleRate","qualname":"::error::Error::InvalidSampleRate","value":"Error::InvalidSampleRate","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Invalid sample rate\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":539},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":32933,"byte_end":32946,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"InvalidDevice","qualname":"::error::Error::InvalidDevice","value":"Error::InvalidDevice","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Invalid Device\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":541},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":32973,"byte_end":32984,"line_start":23,"line_end":23,"column_start":5,"column_end":16},"name":"InvalidFlag","qualname":"::error::Error::InvalidFlag","value":"Error::InvalidFlag","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Invalid Flag\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":543},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33033,"byte_end":33057,"line_start":25,"line_end":25,"column_start":5,"column_end":29},"name":"SampleFormatNotSupported","qualname":"::error::Error::SampleFormatNotSupported","value":"Error::SampleFormatNotSupported","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" The Sample format is not supported\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":545},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33118,"byte_end":33140,"line_start":27,"line_end":27,"column_start":5,"column_end":27},"name":"BadIODeviceCombination","qualname":"::error::Error::BadIODeviceCombination","value":"Error::BadIODeviceCombination","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Input device not compatible with output device\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":547},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33174,"byte_end":33192,"line_start":29,"line_end":29,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::error::Error::InsufficientMemory","value":"Error::InsufficientMemory","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Memory insufficient\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":549},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33228,"byte_end":33240,"line_start":31,"line_end":31,"column_start":5,"column_end":17},"name":"BufferTooBig","qualname":"::error::Error::BufferTooBig","value":"Error::BufferTooBig","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" The buffer is too big\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":551},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33278,"byte_end":33292,"line_start":33,"line_end":33,"column_start":5,"column_end":19},"name":"BufferTooSmall","qualname":"::error::Error::BufferTooSmall","value":"Error::BufferTooSmall","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" The buffer is too small\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":553},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33323,"byte_end":33335,"line_start":35,"line_end":35,"column_start":5,"column_end":17},"name":"NullCallback","qualname":"::error::Error::NullCallback","value":"Error::NullCallback","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Invalid callback\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":555},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33364,"byte_end":33376,"line_start":37,"line_end":37,"column_start":5,"column_end":17},"name":"BadStreamPtr","qualname":"::error::Error::BadStreamPtr","value":"Error::BadStreamPtr","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Invalid Stream\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":557},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33399,"byte_end":33407,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"name":"TimedOut","qualname":"::error::Error::TimedOut","value":"Error::TimedOut","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Time out\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33446,"byte_end":33459,"line_start":41,"line_end":41,"column_start":5,"column_end":18},"name":"InternalError","qualname":"::error::Error::InternalError","value":"Error::InternalError","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Portaudio internal error\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33492,"byte_end":33509,"line_start":43,"line_end":43,"column_start":5,"column_end":22},"name":"DeviceUnavailable","qualname":"::error::Error::DeviceUnavailable","value":"Error::DeviceUnavailable","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Device unavailable\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33564,"byte_end":33601,"line_start":45,"line_end":45,"column_start":5,"column_end":42},"name":"IncompatibleHostApiSpecificStreamInfo","qualname":"::error::Error::IncompatibleHostApiSpecificStreamInfo","value":"Error::IncompatibleHostApiSpecificStreamInfo","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Stream info not compatible with the host\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":565},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33637,"byte_end":33652,"line_start":47,"line_end":47,"column_start":5,"column_end":20},"name":"StreamIsStopped","qualname":"::error::Error::StreamIsStopped","value":"Error::StreamIsStopped","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" The stream is stopped\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":567},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33692,"byte_end":33710,"line_start":49,"line_end":49,"column_start":5,"column_end":23},"name":"StreamIsNotStopped","qualname":"::error::Error::StreamIsNotStopped","value":"Error::StreamIsNotStopped","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" The stream is not stopped\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":569},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33756,"byte_end":33771,"line_start":51,"line_end":51,"column_start":5,"column_end":20},"name":"InputOverflowed","qualname":"::error::Error::InputOverflowed","value":"Error::InputOverflowed","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" The input stream has overflowed\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":571},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33812,"byte_end":33829,"line_start":53,"line_end":53,"column_start":5,"column_end":22},"name":"OutputUnderflowed","qualname":"::error::Error::OutputUnderflowed","value":"Error::OutputUnderflowed","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" The output has underflowed\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33882,"byte_end":33897,"line_start":55,"line_end":55,"column_start":5,"column_end":20},"name":"HostApiNotFound","qualname":"::error::Error::HostApiNotFound","value":"Error::HostApiNotFound","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" The host API is not found by Portaudio\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":33935,"byte_end":33949,"line_start":57,"line_end":57,"column_start":5,"column_end":19},"name":"InvalidHostApi","qualname":"::error::Error::InvalidHostApi","value":"Error::InvalidHostApi","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" The host API is invalid\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":34010,"byte_end":34039,"line_start":59,"line_end":59,"column_start":5,"column_end":34},"name":"CanNotReadFromACallbackStream","qualname":"::error::Error::CanNotReadFromACallbackStream","value":"Error::CanNotReadFromACallbackStream","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Portaudio cannot read from the callback stream\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":34099,"byte_end":34127,"line_start":61,"line_end":61,"column_start":5,"column_end":33},"name":"CanNotWriteToACallbackStream","qualname":"::error::Error::CanNotWriteToACallbackStream","value":"Error::CanNotWriteToACallbackStream","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Portaudio cannot write to the callback stream\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":581},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":34190,"byte_end":34222,"line_start":63,"line_end":63,"column_start":5,"column_end":37},"name":"CanNotReadFromAnOutputOnlyStream","qualname":"::error::Error::CanNotReadFromAnOutputOnlyStream","value":"Error::CanNotReadFromAnOutputOnlyStream","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Portaudio cannot read from an output only stream\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":583},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":34283,"byte_end":34313,"line_start":65,"line_end":65,"column_start":5,"column_end":35},"name":"CanNotWriteToAnInputOnlyStream","qualname":"::error::Error::CanNotWriteToAnInputOnlyStream","value":"Error::CanNotWriteToAnInputOnlyStream","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Portaudio cannot write to an input only stream\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":585},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":34374,"byte_end":34399,"line_start":67,"line_end":67,"column_start":5,"column_end":30},"name":"IncompatibleStreamHostApi","qualname":"::error::Error::IncompatibleStreamHostApi","value":"Error::IncompatibleStreamHostApi","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" The stream is not compatible with the host API\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":587},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":34428,"byte_end":34440,"line_start":69,"line_end":69,"column_start":5,"column_end":17},"name":"BadBufferPtr","qualname":"::error::Error::BadBufferPtr","value":"Error::BadBufferPtr","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Invalid buffer\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":526},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":32625,"byte_end":32630,"line_start":9,"line_end":9,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{NoError, NotInitialized, UnanticipatedHostError, InvalidChannelCount, InvalidSampleRate, InvalidDevice, InvalidFlag, SampleFormatNotSupported, BadIODeviceCombination, InsufficientMemory, BufferTooBig, BufferTooSmall, NullCallback, BadStreamPtr, TimedOut, InternalError, DeviceUnavailable, IncompatibleHostApiSpecificStreamInfo, StreamIsStopped, StreamIsNotStopped, InputOverflowed, OutputUnderflowed, HostApiNotFound, InvalidHostApi, CanNotReadFromACallbackStream, CanNotWriteToACallbackStream, CanNotReadFromAnOutputOnlyStream, CanNotWriteToAnInputOnlyStream, IncompatibleStreamHostApi, BadBufferPtr}","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587}],"decl_id":null,"docs":" Error codes returned by PortAudio functions.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":32605,"byte_end":32615,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":58},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ext/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ext/mod.rs","parent":null,"children":[],"decl_id":null,"docs":" Portaudio platform specific extensions.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":599},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":43684,"byte_end":43710,"line_start":84,"line_end":84,"column_start":12,"column_end":38},"name":"C_PaStreamCallbackTimeInfo","qualname":"::ffi::C_PaStreamCallbackTimeInfo","value":"C_PaStreamCallbackTimeInfo { input_buffer_adc_time, current_time, output_buffer_dac_time }","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":43662,"byte_end":43672,"line_start":83,"line_end":83,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":600},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":43721,"byte_end":43742,"line_start":85,"line_end":85,"column_start":9,"column_end":30},"name":"input_buffer_adc_time","qualname":"::ffi::C_PaStreamCallbackTimeInfo::input_buffer_adc_time","value":"f64","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":601},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":43758,"byte_end":43770,"line_start":86,"line_end":86,"column_start":9,"column_end":21},"name":"current_time","qualname":"::ffi::C_PaStreamCallbackTimeInfo::current_time","value":"f64","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":602},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":43786,"byte_end":43808,"line_start":87,"line_end":87,"column_start":9,"column_end":31},"name":"output_buffer_dac_time","qualname":"::ffi::C_PaStreamCallbackTimeInfo::output_buffer_dac_time","value":"f64","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":608},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":43895,"byte_end":43915,"line_start":95,"line_end":95,"column_start":12,"column_end":32},"name":"C_PaStreamParameters","qualname":"::ffi::C_PaStreamParameters","value":"C_PaStreamParameters { device, channel_count, sample_format, suggested_latency, host_api_specific_stream_info }","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":43873,"byte_end":43883,"line_start":94,"line_end":94,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":609},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":43926,"byte_end":43932,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"device","qualname":"::ffi::C_PaStreamParameters::device","value":"i32","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":610},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":43956,"byte_end":43969,"line_start":97,"line_end":97,"column_start":9,"column_end":22},"name":"channel_count","qualname":"::ffi::C_PaStreamParameters::channel_count","value":"i32","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":611},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":43985,"byte_end":43998,"line_start":98,"line_end":98,"column_start":9,"column_end":22},"name":"sample_format","qualname":"::ffi::C_PaStreamParameters::sample_format","value":"u64","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":612},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44023,"byte_end":44040,"line_start":99,"line_end":99,"column_start":9,"column_end":26},"name":"suggested_latency","qualname":"::ffi::C_PaStreamParameters::suggested_latency","value":"f64","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":613},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44057,"byte_end":44086,"line_start":100,"line_end":100,"column_start":9,"column_end":38},"name":"host_api_specific_stream_info","qualname":"::ffi::C_PaStreamParameters::host_api_specific_stream_info","value":"*mut libc::c_void","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":617},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44156,"byte_end":44170,"line_start":105,"line_end":105,"column_start":12,"column_end":26},"name":"C_PaDeviceInfo","qualname":"::ffi::C_PaDeviceInfo","value":"C_PaDeviceInfo { struct_version, name, host_api, max_input_channels, max_output_channels, default_low_input_latency, default_low_output_latency, default_high_input_latency, default_high_output_latency, default_sample_rate }","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44134,"byte_end":44144,"line_start":104,"line_end":104,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":618},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44181,"byte_end":44195,"line_start":106,"line_end":106,"column_start":9,"column_end":23},"name":"struct_version","qualname":"::ffi::C_PaDeviceInfo::struct_version","value":"i32","parent":{"krate":0,"index":617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":619},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44210,"byte_end":44214,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"name":"name","qualname":"::ffi::C_PaDeviceInfo::name","value":"*const i8","parent":{"krate":0,"index":617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":620},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44239,"byte_end":44247,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"name":"host_api","qualname":"::ffi::C_PaDeviceInfo::host_api","value":"i32","parent":{"krate":0,"index":617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":621},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44271,"byte_end":44289,"line_start":109,"line_end":109,"column_start":9,"column_end":27},"name":"max_input_channels","qualname":"::ffi::C_PaDeviceInfo::max_input_channels","value":"i32","parent":{"krate":0,"index":617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":622},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44304,"byte_end":44323,"line_start":110,"line_end":110,"column_start":9,"column_end":28},"name":"max_output_channels","qualname":"::ffi::C_PaDeviceInfo::max_output_channels","value":"i32","parent":{"krate":0,"index":617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":623},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44338,"byte_end":44363,"line_start":111,"line_end":111,"column_start":9,"column_end":34},"name":"default_low_input_latency","qualname":"::ffi::C_PaDeviceInfo::default_low_input_latency","value":"f64","parent":{"krate":0,"index":617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":624},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44379,"byte_end":44405,"line_start":112,"line_end":112,"column_start":9,"column_end":35},"name":"default_low_output_latency","qualname":"::ffi::C_PaDeviceInfo::default_low_output_latency","value":"f64","parent":{"krate":0,"index":617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":625},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44421,"byte_end":44447,"line_start":113,"line_end":113,"column_start":9,"column_end":35},"name":"default_high_input_latency","qualname":"::ffi::C_PaDeviceInfo::default_high_input_latency","value":"f64","parent":{"krate":0,"index":617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":626},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44463,"byte_end":44490,"line_start":114,"line_end":114,"column_start":9,"column_end":36},"name":"default_high_output_latency","qualname":"::ffi::C_PaDeviceInfo::default_high_output_latency","value":"f64","parent":{"krate":0,"index":617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":627},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44506,"byte_end":44525,"line_start":115,"line_end":115,"column_start":9,"column_end":28},"name":"default_sample_rate","qualname":"::ffi::C_PaDeviceInfo::default_sample_rate","value":"f64","parent":{"krate":0,"index":617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":633},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44591,"byte_end":44608,"line_start":120,"line_end":120,"column_start":12,"column_end":29},"name":"C_PaHostErrorInfo","qualname":"::ffi::C_PaHostErrorInfo","value":"C_PaHostErrorInfo { error_code, error_text }","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44569,"byte_end":44579,"line_start":119,"line_end":119,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":634},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44619,"byte_end":44629,"line_start":121,"line_end":121,"column_start":9,"column_end":19},"name":"error_code","qualname":"::ffi::C_PaHostErrorInfo::error_code","value":"u32","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":635},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44644,"byte_end":44654,"line_start":122,"line_end":122,"column_start":9,"column_end":19},"name":"error_text","qualname":"::ffi::C_PaHostErrorInfo::error_text","value":"*const i8","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":641},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44725,"byte_end":44740,"line_start":127,"line_end":127,"column_start":12,"column_end":27},"name":"C_PaHostApiInfo","qualname":"::ffi::C_PaHostApiInfo","value":"C_PaHostApiInfo { struct_version, host_type, name, device_count, default_input_device, default_output_device }","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44703,"byte_end":44713,"line_start":126,"line_end":126,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":642},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44751,"byte_end":44765,"line_start":128,"line_end":128,"column_start":9,"column_end":23},"name":"struct_version","qualname":"::ffi::C_PaHostApiInfo::struct_version","value":"i32","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":643},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44780,"byte_end":44789,"line_start":129,"line_end":129,"column_start":9,"column_end":18},"name":"host_type","qualname":"::ffi::C_PaHostApiInfo::host_type","value":"i32","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":644},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44804,"byte_end":44808,"line_start":130,"line_end":130,"column_start":9,"column_end":13},"name":"name","qualname":"::ffi::C_PaHostApiInfo::name","value":"*const i8","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":645},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44833,"byte_end":44845,"line_start":131,"line_end":131,"column_start":9,"column_end":21},"name":"device_count","qualname":"::ffi::C_PaHostApiInfo::device_count","value":"i32","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":646},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44860,"byte_end":44880,"line_start":132,"line_end":132,"column_start":9,"column_end":29},"name":"default_input_device","qualname":"::ffi::C_PaHostApiInfo::default_input_device","value":"i32","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":647},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/ffi.rs","byte_start":44895,"byte_end":44916,"line_start":133,"line_end":133,"column_start":9,"column_end":30},"name":"default_output_device","qualname":"::ffi::C_PaHostApiInfo::default_output_device","value":"i32","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":156},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":653},{"krate":0,"index":664},{"krate":0,"index":662},{"krate":0,"index":660},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":665},{"krate":0,"index":676},{"krate":0,"index":674},{"krate":0,"index":672},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":677},{"krate":0,"index":689},{"krate":0,"index":687},{"krate":0,"index":685},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":690},{"krate":0,"index":713},{"krate":0,"index":709},{"krate":0,"index":705},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":716},{"krate":0,"index":731},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":735},{"krate":0,"index":754},{"krate":0,"index":744},{"krate":0,"index":748},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":759},{"krate":0,"index":778},{"krate":0,"index":775},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":766},{"krate":0,"index":780},{"krate":0,"index":792},{"krate":0,"index":789},{"krate":0,"index":786},{"krate":0,"index":794},{"krate":0,"index":806},{"krate":0,"index":803},{"krate":0,"index":800},{"krate":0,"index":808},{"krate":0,"index":824},{"krate":0,"index":820},{"krate":0,"index":816},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":228},{"krate":0,"index":827},{"krate":0,"index":831},{"krate":0,"index":229},{"krate":0,"index":234},{"krate":0,"index":243},{"krate":0,"index":252},{"krate":0,"index":262},{"krate":0,"index":267},{"krate":0,"index":273},{"krate":0,"index":278},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":946},{"krate":0,"index":962},{"krate":0,"index":960},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":954},{"krate":0,"index":290},{"krate":0,"index":1074},{"krate":0,"index":1088},{"krate":0,"index":1086},{"krate":0,"index":1084},{"krate":0,"index":1089},{"krate":0,"index":1096},{"krate":0,"index":1095},{"krate":0,"index":1093},{"krate":0,"index":1098},{"krate":0,"index":1129},{"krate":0,"index":1127},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1105},{"krate":0,"index":1103},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":316},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":332},{"krate":0,"index":337},{"krate":0,"index":350},{"krate":0,"index":355},{"krate":0,"index":360},{"krate":0,"index":366},{"krate":0,"index":376},{"krate":0,"index":380}],"decl_id":null,"docs":" This module aims to provide a user-friendly rust-esque wrapper around the portaudio Stream\n types.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":174},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":50728,"byte_end":50732,"line_start":28,"line_end":28,"column_start":11,"column_end":15},"name":"Mode","qualname":"::stream::Mode","value":"Mode","parent":null,"children":[],"decl_id":null,"docs":" There are two **Mode**s with which a **Stream** can be set: [**Blocking**](./struct.Blocking)\n and [**NonBlocking**](./struct.NonBlocking).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":175},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":51004,"byte_end":51012,"line_start":34,"line_end":34,"column_start":11,"column_end":19},"name":"Settings","qualname":"::stream::Settings","value":"Settings","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":" Types used to open a **Stream** via the\n [**PortAudio::open_blocking_stream**](../struct.PortAudio.html#method.open_blocking_stream) and\n [**PortAudio::open_non_blocking_stream**](../struct.PortAudio.html#method.open_blocking_stream)\n methods.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":176},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":51102,"byte_end":51106,"line_start":36,"line_end":36,"column_start":10,"column_end":14},"name":"Flow","qualname":"::stream::Settings::Flow","value":"type Flow;","parent":{"krate":0,"index":175},"children":[],"decl_id":null,"docs":" The **Flow** of the **Stream** (**Input**, **Output** or **Duplex**).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":51195,"byte_end":51217,"line_start":38,"line_end":38,"column_start":8,"column_end":30},"name":"into_flow_and_settings","qualname":"::stream::Settings::into_flow_and_settings","value":"fn (self) -> (Self::Flow, f64, u32, Flags)","parent":{"krate":0,"index":175},"children":[],"decl_id":null,"docs":" Construct the **Stream**'s **Flow** alongside the rest of its settings.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":51433,"byte_end":51437,"line_start":43,"line_end":43,"column_start":11,"column_end":15},"name":"Flow","qualname":"::stream::Flow","value":"Flow","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":" There are three possible **Flow**s available for a **Stream**: [**Input**](./struct.Input),\n [**Out**](./struct.Output) and [**Duplex**](./struct.Duplex).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":179},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":51534,"byte_end":51540,"line_start":45,"line_end":45,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::stream::Flow::Buffer","value":"type Buffer;","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" The type of buffer(s) necessary for transferring audio in a Blocking stream.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":180},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":51617,"byte_end":51629,"line_start":47,"line_end":47,"column_start":10,"column_end":22},"name":"CallbackArgs","qualname":"::stream::Flow::CallbackArgs","value":"type CallbackArgs;","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" The arguments passed to the non-blocking stream callback.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":181},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":51713,"byte_end":51729,"line_start":49,"line_end":49,"column_start":10,"column_end":26},"name":"CallbackTimeInfo","qualname":"::stream::Flow::CallbackTimeInfo","value":"type CallbackTimeInfo;","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Timing information for the buffer passed to the stream callback.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":51780,"byte_end":51790,"line_start":51,"line_end":51,"column_start":8,"column_end":18},"name":"new_buffer","qualname":"::stream::Flow::new_buffer","value":"fn (&self, frames_per_buffer: u32) -> Self::Buffer","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Construct a new **Self::Buffer**.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":51931,"byte_end":51953,"line_start":53,"line_end":53,"column_start":8,"column_end":30},"name":"params_both_directions","qualname":"::stream::Flow::params_both_directions","value":"fn (&self) -> (Option<ffi::C_PaStreamParameters>, Option<ffi::C_PaStreamParameters>)","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Necessary for dynamically acquiring bi-directional params for Pa_OpenStream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":52201,"byte_end":52218,"line_start":57,"line_end":57,"column_start":8,"column_end":25},"name":"new_callback_args","qualname":"::stream::Flow::new_callback_args","value":"fn (input: *const libc::c_void, output: *mut libc::c_void, frame_count: libc::c_ulong, time_info: *const ffi::C_PaStreamCallbackTimeInfo, flags: ffi::StreamCallbackFlags, in_channels: i32, out_channels: i32) -> Self::CallbackArgs","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Constructs the **Flow**'s associated **CallbackArgs** from the non-blocking C API stream\n parameters.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":52655,"byte_end":52661,"line_start":67,"line_end":67,"column_start":11,"column_end":17},"name":"Reader","qualname":"::stream::Reader","value":"Reader: Flow","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" **Streams** that can be read by the user.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":186},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":52730,"byte_end":52736,"line_start":69,"line_end":69,"column_start":10,"column_end":16},"name":"Sample","qualname":"::stream::Reader::Sample","value":"type Sample;","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" The sample format for the readable buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":52785,"byte_end":52800,"line_start":71,"line_end":71,"column_start":8,"column_end":23},"name":"readable_buffer","qualname":"::stream::Reader::readable_buffer","value":"fn (blocking: &Blocking<Self::Buffer>) -> &Buffer","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Borrow the readable **Buffer**.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":52914,"byte_end":52927,"line_start":73,"line_end":73,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::stream::Reader::channel_count","value":"fn (&self) -> i32","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" The number of channels in the readable **Buffer**.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":189},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":53031,"byte_end":53037,"line_start":77,"line_end":77,"column_start":11,"column_end":17},"name":"Writer","qualname":"::stream::Writer","value":"Writer: Flow","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"decl_id":null,"docs":" **Streams** that can be written to by the user for output to some DAC.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":190},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":53106,"byte_end":53112,"line_start":79,"line_end":79,"column_start":10,"column_end":16},"name":"Sample","qualname":"::stream::Writer::Sample","value":"type Sample;","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The sample format for the writable buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":53173,"byte_end":53188,"line_start":81,"line_end":81,"column_start":8,"column_end":23},"name":"writable_buffer","qualname":"::stream::Writer::writable_buffer","value":"fn (blocking: &mut Blocking<Self::Buffer>) -> &mut Buffer","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Mutably borrow the the writable **Buffer**.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":53310,"byte_end":53323,"line_start":83,"line_end":83,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::stream::Writer::channel_count","value":"fn (&self) -> i32","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The number of channels in the writable **Buffer**.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":54063,"byte_end":54084,"line_start":105,"line_end":105,"column_start":12,"column_end":33},"name":"InputCallbackTimeInfo","qualname":"::stream::InputCallbackTimeInfo","value":"InputCallbackTimeInfo { current, buffer_adc }","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"decl_id":null,"docs":" Timing information for the buffer passed to the input stream callback.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":654},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":54150,"byte_end":54157,"line_start":107,"line_end":107,"column_start":9,"column_end":16},"name":"current","qualname":"::stream::InputCallbackTimeInfo::current","value":"f64","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" The time when the stream callback was invoked.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":655},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":54263,"byte_end":54273,"line_start":109,"line_end":109,"column_start":9,"column_end":19},"name":"buffer_adc","qualname":"::stream::InputCallbackTimeInfo::buffer_adc","value":"f64","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" The time when the first sample of the input buffer was captured at the ADC input.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":665},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":54558,"byte_end":54580,"line_start":117,"line_end":117,"column_start":12,"column_end":34},"name":"OutputCallbackTimeInfo","qualname":"::stream::OutputCallbackTimeInfo","value":"OutputCallbackTimeInfo { current, buffer_dac }","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667}],"decl_id":null,"docs":" Timing information for the buffer passed to the output stream callback.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":666},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":54646,"byte_end":54653,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"current","qualname":"::stream::OutputCallbackTimeInfo::current","value":"f64","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":" The time when the stream callback was invoked.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":667},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":54750,"byte_end":54760,"line_start":121,"line_end":121,"column_start":9,"column_end":19},"name":"buffer_dac","qualname":"::stream::OutputCallbackTimeInfo::buffer_dac","value":"f64","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":" The time when the first sample of the output buffer will output the DAC.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":677},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":55039,"byte_end":55061,"line_start":129,"line_end":129,"column_start":12,"column_end":34},"name":"DuplexCallbackTimeInfo","qualname":"::stream::DuplexCallbackTimeInfo","value":"DuplexCallbackTimeInfo { current, in_buffer_adc, out_buffer_dac }","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680}],"decl_id":null,"docs":" Timing information for the buffers passed to the stream callback.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":678},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":55127,"byte_end":55134,"line_start":131,"line_end":131,"column_start":9,"column_end":16},"name":"current","qualname":"::stream::DuplexCallbackTimeInfo::current","value":"f64","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" The time when the stream callback was invoked.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":679},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":55240,"byte_end":55253,"line_start":133,"line_end":133,"column_start":9,"column_end":22},"name":"in_buffer_adc","qualname":"::stream::DuplexCallbackTimeInfo::in_buffer_adc","value":"f64","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" The time when the first sample of the input buffer was captured at the ADC input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":680},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":55350,"byte_end":55364,"line_start":135,"line_end":135,"column_start":9,"column_end":23},"name":"out_buffer_dac","qualname":"::stream::DuplexCallbackTimeInfo::out_buffer_dac","value":"f64","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" The time when the first sample of the output buffer will output the DAC.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":690},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":55508,"byte_end":55525,"line_start":141,"line_end":141,"column_start":12,"column_end":29},"name":"InputCallbackArgs","qualname":"::stream::InputCallbackArgs","value":"InputCallbackArgs { buffer, frames, flags, time }","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696}],"decl_id":null,"docs":" Arguments given to a **NonBlocking** **Input** **Stream**'s **CallbackFn**.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":693},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":55631,"byte_end":55637,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"name":"buffer","qualname":"::stream::InputCallbackArgs::buffer","value":"&'a [I]","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" The buffer of interleaved samples read from the **Input** **Stream**'s ADC.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":694},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":55727,"byte_end":55733,"line_start":145,"line_end":145,"column_start":9,"column_end":15},"name":"frames","qualname":"::stream::InputCallbackArgs::frames","value":"usize","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" The number of frames of audio data stored within the `buffer`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":695},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":55872,"byte_end":55877,"line_start":148,"line_end":148,"column_start":9,"column_end":14},"name":"flags","qualname":"::stream::InputCallbackArgs::flags","value":"stream::callback_flags::CallbackFlags","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" Flags indicating the current state of the stream and whether or not any special edge cases\n have occurred.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":696},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":55955,"byte_end":55959,"line_start":150,"line_end":150,"column_start":9,"column_end":13},"name":"time","qualname":"::stream::InputCallbackArgs::time","value":"stream::InputCallbackTimeInfo","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" Timing information relevant to the callback.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":56106,"byte_end":56124,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"name":"OutputCallbackArgs","qualname":"::stream::OutputCallbackArgs","value":"OutputCallbackArgs { buffer, frames, flags, time }","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"decl_id":null,"docs":" Arguments given to a **NonBlocking** **Input** **Stream**'s **CallbackFn**.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":719},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":56241,"byte_end":56247,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"name":"buffer","qualname":"::stream::OutputCallbackArgs::buffer","value":"&'a mut [O]","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" The **Output** **Stream**'s buffer, to which we will write our interleaved audio data.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":720},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":56341,"byte_end":56347,"line_start":159,"line_end":159,"column_start":9,"column_end":15},"name":"frames","qualname":"::stream::OutputCallbackArgs::frames","value":"usize","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" The number of frames of audio data stored within the `buffer`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":721},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":56486,"byte_end":56491,"line_start":162,"line_end":162,"column_start":9,"column_end":14},"name":"flags","qualname":"::stream::OutputCallbackArgs::flags","value":"stream::callback_flags::CallbackFlags","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Flags indicating the current state of the stream and whether or not any special edge cases\n have occurred.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":722},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":56569,"byte_end":56573,"line_start":164,"line_end":164,"column_start":9,"column_end":13},"name":"time","qualname":"::stream::OutputCallbackArgs::time","value":"stream::OutputCallbackTimeInfo","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Timing information relevant to the callback.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":735},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":56721,"byte_end":56739,"line_start":169,"line_end":169,"column_start":12,"column_end":30},"name":"DuplexCallbackArgs","qualname":"::stream::DuplexCallbackArgs","value":"DuplexCallbackArgs { in_buffer, out_buffer, frames, flags, time }","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" Arguments given to a **NonBlocking** **Input** **Stream**'s **CallbackFn**.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":739},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":56842,"byte_end":56851,"line_start":171,"line_end":171,"column_start":9,"column_end":18},"name":"in_buffer","qualname":"::stream::DuplexCallbackArgs::in_buffer","value":"&'a [I]","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" The buffer of interleaved samples read from the **Stream**'s ADC.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":740},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":56957,"byte_end":56967,"line_start":173,"line_end":173,"column_start":9,"column_end":19},"name":"out_buffer","qualname":"::stream::DuplexCallbackArgs::out_buffer","value":"&'a mut [O]","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" The **Stream**'s output buffer, to which we will write interleaved audio data.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":741},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":57061,"byte_end":57067,"line_start":175,"line_end":175,"column_start":9,"column_end":15},"name":"frames","qualname":"::stream::DuplexCallbackArgs::frames","value":"usize","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" The number of frames of audio data stored within the `buffer`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":742},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":57206,"byte_end":57211,"line_start":178,"line_end":178,"column_start":9,"column_end":14},"name":"flags","qualname":"::stream::DuplexCallbackArgs::flags","value":"stream::callback_flags::CallbackFlags","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Flags indicating the current state of the stream and whether or not any special edge cases\n have occurred.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":743},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":57289,"byte_end":57293,"line_start":180,"line_end":180,"column_start":9,"column_end":13},"name":"time","qualname":"::stream::DuplexCallbackArgs::time","value":"stream::DuplexCallbackTimeInfo","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Timing information relevant to the callback.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":196},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":57533,"byte_end":57541,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"Blocking","qualname":"::stream::Blocking","value":"Blocking {  }","parent":null,"children":[{"krate":0,"index":198}],"decl_id":null,"docs":" A **Stream** **Mode** representing a blocking stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":199},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":57638,"byte_end":57649,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"NonBlocking","qualname":"::stream::NonBlocking","value":"NonBlocking {  }","parent":null,"children":[{"krate":0,"index":200}],"decl_id":null,"docs":" A **Stream** **Mode** representing a non-blocking stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":201},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":60548,"byte_end":60554,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::Stream","value":"Stream {  }","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"decl_id":null,"docs":" A type-safe PortAudio PaStream wrapper.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":60517,"byte_end":60536,"line_start":253,"line_end":253,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":759},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":60796,"byte_end":60806,"line_start":264,"line_end":264,"column_start":12,"column_end":22},"name":"Parameters","qualname":"::stream::Parameters","value":"Parameters { device, channel_count, suggested_latency, is_interleaved }","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765}],"decl_id":null,"docs":" Parameters for one direction (input or output) of a stream.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":761},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":60914,"byte_end":60920,"line_start":266,"line_end":266,"column_start":9,"column_end":15},"name":"device","qualname":"::stream::Parameters::device","value":"types::DeviceKind","parent":{"krate":0,"index":759},"children":[],"decl_id":null,"docs":" Index of the device to be used, or a variant indicating to use the host-specific API.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":762},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":60989,"byte_end":61002,"line_start":268,"line_end":268,"column_start":9,"column_end":22},"name":"channel_count","qualname":"::stream::Parameters::channel_count","value":"i32","parent":{"krate":0,"index":759},"children":[],"decl_id":null,"docs":" The number of channels for this device\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":763},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":61063,"byte_end":61080,"line_start":270,"line_end":270,"column_start":9,"column_end":26},"name":"suggested_latency","qualname":"::stream::Parameters::suggested_latency","value":"f64","parent":{"krate":0,"index":759},"children":[],"decl_id":null,"docs":" The suggested latency for this device\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":764},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":61375,"byte_end":61389,"line_start":277,"line_end":277,"column_start":9,"column_end":23},"name":"is_interleaved","qualname":"::stream::Parameters::is_interleaved","value":"bool","parent":{"krate":0,"index":759},"children":[],"decl_id":null,"docs":" Indicates the format of the audio buffer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":780},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":61613,"byte_end":61626,"line_start":285,"line_end":285,"column_start":12,"column_end":25},"name":"InputSettings","qualname":"::stream::InputSettings","value":"InputSettings { params, sample_rate, frames_per_buffer, flags }","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785}],"decl_id":null,"docs":" Settings used to construct an **Input** **Stream**.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":782},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":61713,"byte_end":61719,"line_start":287,"line_end":287,"column_start":9,"column_end":15},"name":"params","qualname":"::stream::InputSettings::params","value":"stream::Parameters<I>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" The set of Parameters necessary for constructing the **Stream**.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":783},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":61796,"byte_end":61807,"line_start":289,"line_end":289,"column_start":9,"column_end":20},"name":"sample_rate","qualname":"::stream::InputSettings::sample_rate","value":"f64","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" The number of audio frames read per second.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":784},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":61883,"byte_end":61900,"line_start":291,"line_end":291,"column_start":9,"column_end":26},"name":"frames_per_buffer","qualname":"::stream::InputSettings::frames_per_buffer","value":"u32","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" The number of audio frames that are read per buffer.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":785},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":61992,"byte_end":61997,"line_start":293,"line_end":293,"column_start":9,"column_end":14},"name":"flags","qualname":"::stream::InputSettings::flags","value":"stream::flags::Flags","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Any special **Stream** behaviour we require given as a set of flags.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":794},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":62104,"byte_end":62118,"line_start":298,"line_end":298,"column_start":12,"column_end":26},"name":"OutputSettings","qualname":"::stream::OutputSettings","value":"OutputSettings { params, sample_rate, frames_per_buffer, flags }","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799}],"decl_id":null,"docs":" Settings used to construct an **Out** **Stream**.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":796},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":62205,"byte_end":62211,"line_start":300,"line_end":300,"column_start":9,"column_end":15},"name":"params","qualname":"::stream::OutputSettings::params","value":"stream::Parameters<O>","parent":{"krate":0,"index":794},"children":[],"decl_id":null,"docs":" The set of Parameters necessary for constructing the **Stream**.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":797},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":62291,"byte_end":62302,"line_start":302,"line_end":302,"column_start":9,"column_end":20},"name":"sample_rate","qualname":"::stream::OutputSettings::sample_rate","value":"f64","parent":{"krate":0,"index":794},"children":[],"decl_id":null,"docs":" The number of audio frames written per second.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":798},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":62374,"byte_end":62391,"line_start":304,"line_end":304,"column_start":9,"column_end":26},"name":"frames_per_buffer","qualname":"::stream::OutputSettings::frames_per_buffer","value":"u32","parent":{"krate":0,"index":794},"children":[],"decl_id":null,"docs":" The number of audio frames requested per buffer.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":799},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":62483,"byte_end":62488,"line_start":306,"line_end":306,"column_start":9,"column_end":14},"name":"flags","qualname":"::stream::OutputSettings::flags","value":"stream::flags::Flags","parent":{"krate":0,"index":794},"children":[],"decl_id":null,"docs":" Any special **Stream** behaviour we require given as a set of flags.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":808},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":62597,"byte_end":62611,"line_start":311,"line_end":311,"column_start":12,"column_end":26},"name":"DuplexSettings","qualname":"::stream::DuplexSettings","value":"DuplexSettings { in_params, out_params, sample_rate, frames_per_buffer, flags }","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"decl_id":null,"docs":" Settings used to construct a **Duplex** **Stream**.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":811},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":62707,"byte_end":62716,"line_start":313,"line_end":313,"column_start":9,"column_end":18},"name":"in_params","qualname":"::stream::DuplexSettings::in_params","value":"stream::Parameters<I>","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" The set of Parameters necessary for constructing the input **Stream**.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":812},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":62821,"byte_end":62831,"line_start":315,"line_end":315,"column_start":9,"column_end":19},"name":"out_params","qualname":"::stream::DuplexSettings::out_params","value":"stream::Parameters<O>","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" The set of Parameters necessary for constructing the output **Stream**.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":813},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":62911,"byte_end":62922,"line_start":317,"line_end":317,"column_start":9,"column_end":20},"name":"sample_rate","qualname":"::stream::DuplexSettings::sample_rate","value":"f64","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" The number of audio frames written per second.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":814},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":62994,"byte_end":63011,"line_start":319,"line_end":319,"column_start":9,"column_end":26},"name":"frames_per_buffer","qualname":"::stream::DuplexSettings::frames_per_buffer","value":"u32","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" The number of audio frames requested per buffer.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":815},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":63103,"byte_end":63108,"line_start":321,"line_end":321,"column_start":9,"column_end":14},"name":"flags","qualname":"::stream::DuplexSettings::flags","value":"stream::flags::Flags","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" Any special **Stream** behaviour we require given as a set of flags.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":208},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":63196,"byte_end":63201,"line_start":326,"line_end":326,"column_start":12,"column_end":17},"name":"Input","qualname":"::stream::Input","value":"Input {  }","parent":null,"children":[{"krate":0,"index":210}],"decl_id":null,"docs":" A type of **Flow** that describes an input-only **Stream**.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":211},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":63313,"byte_end":63319,"line_start":331,"line_end":331,"column_start":12,"column_end":18},"name":"Output","qualname":"::stream::Output","value":"Output {  }","parent":null,"children":[{"krate":0,"index":213}],"decl_id":null,"docs":" A type of **Flow** that describes an output-only **Stream**.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":214},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":63454,"byte_end":63460,"line_start":336,"line_end":336,"column_start":12,"column_end":18},"name":"Duplex","qualname":"::stream::Duplex","value":"Duplex {  }","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" A type of **Flow** that describes a bi-directional (input *and* output) **Stream**.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":63714,"byte_end":63717,"line_start":349,"line_end":349,"column_start":12,"column_end":15},"name":"new","qualname":"<Parameters<S>>::new","value":"fn (device: DeviceIndex, channel_count: i32, is_interleaved: bool, suggested_latency: Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new **Parameters**.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":64171,"byte_end":64195,"line_start":361,"line_end":361,"column_start":12,"column_end":36},"name":"host_api_specific_device","qualname":"<Parameters<S>>::host_api_specific_device","value":"fn (channel_count: i32, is_interleaved: bool, suggested_latency: Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The same as **Parameters::new**, but the device(s) to be used are specified in the host\n api specific stream info structure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":66359,"byte_end":66362,"line_start":423,"line_end":423,"column_start":12,"column_end":15},"name":"new","qualname":"<DuplexSettings<I, O>>::new","value":"fn (in_params: Parameters<I>, out_params: Parameters<O>, sample_rate: f64, frames_per_buffer: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the settings from the given `params`, `sample_rate` and\n `frames_per_buffer` with an empty set of **StreamFlags**.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":66757,"byte_end":66767,"line_start":433,"line_end":433,"column_start":12,"column_end":22},"name":"with_flags","qualname":"<DuplexSettings<I, O>>::with_flags","value":"fn (in_params: Parameters<I>, out_params: Parameters<O>, sample_rate: f64, frames_per_buffer: u32, flags: Flags) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the settings with the given **Parameters**, `sample_rate`,\n `frames_per_buffer` and **StreamFlags**.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":284},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":74991,"byte_end":74997,"line_start":665,"line_end":665,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::stream::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":285}],"decl_id":null,"docs":" The buffer used to transfer audio data between the input and output streams.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":286},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":75040,"byte_end":75045,"line_start":669,"line_end":669,"column_start":9,"column_end":14},"name":"flags","qualname":"::stream::flags","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":841},{"krate":0,"index":863},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":854},{"krate":0,"index":848},{"krate":0,"index":846},{"krate":0,"index":843},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":864},{"krate":0,"index":885},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":288}],"decl_id":null,"docs":" A type safe wrapper around PortAudio's stream flags.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":841},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":75501,"byte_end":75506,"line_start":678,"line_end":678,"column_start":19,"column_end":24},"name":"Flags","qualname":"::stream::flags::Flags","value":"Flags {  }","parent":null,"children":[{"krate":0,"index":842}],"decl_id":null,"docs":" Flags used to control the behaviour of a stream. They are passed as parameters to\n Stream::open or Stream::open_default. Multiple flags may be used together.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":835},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":75558,"byte_end":75565,"line_start":680,"line_end":680,"column_start":19,"column_end":26},"name":"NO_FLAG","qualname":"::stream::flags::NO_FLAG","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" No flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":836},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":75707,"byte_end":75715,"line_start":682,"line_end":682,"column_start":19,"column_end":27},"name":"CLIP_OFF","qualname":"::stream::flags::CLIP_OFF","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Disable default clipping of out of range samples.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":837},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":75834,"byte_end":75844,"line_start":684,"line_end":684,"column_start":19,"column_end":29},"name":"DITHER_OFF","qualname":"::stream::flags::DITHER_OFF","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Disable default dithering.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":838},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":76086,"byte_end":76102,"line_start":687,"line_end":687,"column_start":19,"column_end":35},"name":"NEVER_DROP_INPUT","qualname":"::stream::flags::NEVER_DROP_INPUT","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Flag requests that where possible a full duplex stream will not discard overflowed\n input samples without calling the stream callback.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":839},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":76344,"byte_end":76389,"line_start":690,"line_end":690,"column_start":19,"column_end":64},"name":"PA_PRIME_OUTPUT_BUFFERS_USING_STREAM_CALLBACK","qualname":"::stream::flags::PA_PRIME_OUTPUT_BUFFERS_USING_STREAM_CALLBACK","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Call the stream callback to fill initial output buffers, rather than the default\n behavior of priming the buffers with zeros (silence)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":840},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":76524,"byte_end":76550,"line_start":692,"line_end":692,"column_start":19,"column_end":45},"name":"PA_PLATFORM_SPECIFIC_FLAGS","qualname":"::stream::flags::PA_PLATFORM_SPECIFIC_FLAGS","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" A mask specifying the platform specific bits.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":947},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":77698,"byte_end":77704,"line_start":716,"line_end":716,"column_start":5,"column_end":11},"name":"Frames","qualname":"::stream::Available::Frames","value":"Available::Frames(i64)","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" The number of frames available for reading.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":950},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":77756,"byte_end":77771,"line_start":718,"line_end":718,"column_start":5,"column_end":20},"name":"InputOverflowed","qualname":"::stream::Available::InputOverflowed","value":"Available::InputOverflowed","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" The input stream has overflowed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":952},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":77820,"byte_end":77837,"line_start":720,"line_end":720,"column_start":5,"column_end":22},"name":"OutputUnderflowed","qualname":"::stream::Available::OutputUnderflowed","value":"Available::OutputUnderflowed","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" The output stream has underflowed.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":946},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":77630,"byte_end":77639,"line_start":714,"line_end":714,"column_start":10,"column_end":19},"name":"Available","qualname":"::stream::Available","value":"Available::{Frames, InputOverflowed, OutputUnderflowed}","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":952}],"decl_id":null,"docs":" Describes stream availability and the number for frames available for reading/writing if there\n is any.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":290},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":77850,"byte_end":77864,"line_start":723,"line_end":723,"column_start":9,"column_end":23},"name":"callback_flags","qualname":"::stream::callback_flags","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":969},{"krate":0,"index":991},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":982},{"krate":0,"index":976},{"krate":0,"index":974},{"krate":0,"index":971},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":992},{"krate":0,"index":1013},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":292}],"decl_id":null,"docs":" A type safe wrapper around PortAudio's stream callback flags.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":969},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":78078,"byte_end":78091,"line_start":728,"line_end":728,"column_start":19,"column_end":32},"name":"CallbackFlags","qualname":"::stream::callback_flags::CallbackFlags","value":"CallbackFlags {  }","parent":null,"children":[{"krate":0,"index":970}],"decl_id":null,"docs":" Flag bit constants for the status flags passed to the stream's callback function.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":963},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":78143,"byte_end":78150,"line_start":730,"line_end":730,"column_start":19,"column_end":26},"name":"NO_FLAG","qualname":"::stream::callback_flags::NO_FLAG","value":"CallbackFlags","parent":null,"children":[],"decl_id":null,"docs":" No flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":964},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":78578,"byte_end":78593,"line_start":735,"line_end":735,"column_start":19,"column_end":34},"name":"INPUT_UNDERFLOW","qualname":"::stream::callback_flags::INPUT_UNDERFLOW","value":"CallbackFlags","parent":null,"children":[],"decl_id":null,"docs":" In a stream opened with paFramesPerBufferUnspecified, indicates that input data is\n all silence (zeros) because no real data is available. In a stream opened without\n `FramesPerBufferUnspecified`, it indicates that one or more zero samples have been\n inserted into the input buffer to compensate for an input underflow.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":965},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":79014,"byte_end":79028,"line_start":740,"line_end":740,"column_start":19,"column_end":33},"name":"INPUT_OVERFLOW","qualname":"::stream::callback_flags::INPUT_OVERFLOW","value":"CallbackFlags","parent":null,"children":[],"decl_id":null,"docs":" In a stream opened with paFramesPerBufferUnspecified, indicates that data prior to\n the first sample of the input buffer was discarded due to an overflow, possibly\n because the stream callback is using too much CPU time. Otherwise indicates that\n data prior to one or more samples in the input buffer was discarded.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":966},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":79221,"byte_end":79237,"line_start":743,"line_end":743,"column_start":19,"column_end":35},"name":"OUTPUT_UNDERFLOW","qualname":"::stream::callback_flags::OUTPUT_UNDERFLOW","value":"CallbackFlags","parent":null,"children":[],"decl_id":null,"docs":" Indicates that output data (or a gap) was inserted, possibly because the stream\n callback is using too much CPU time.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":967},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":79372,"byte_end":79387,"line_start":745,"line_end":745,"column_start":19,"column_end":34},"name":"OUTPUT_OVERFLOW","qualname":"::stream::callback_flags::OUTPUT_OVERFLOW","value":"CallbackFlags","parent":null,"children":[],"decl_id":null,"docs":" Indicates that output data will be discarded because no room is available.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":968},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":79552,"byte_end":79566,"line_start":748,"line_end":748,"column_start":19,"column_end":33},"name":"PRIMING_OUTPUT","qualname":"::stream::callback_flags::PRIMING_OUTPUT","value":"CallbackFlags","parent":null,"children":[],"decl_id":null,"docs":" Some of all of the output data will be used to prime the stream, input data may be\n zero.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":80384,"byte_end":80392,"line_start":773,"line_end":773,"column_start":5,"column_end":13},"name":"Continue","qualname":"::stream::CallbackResult::Continue","value":"CallbackResult::Continue","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Continue the stream.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":80436,"byte_end":80444,"line_start":775,"line_end":775,"column_start":5,"column_end":13},"name":"Complete","qualname":"::stream::CallbackResult::Complete","value":"CallbackResult::Complete","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" The stream has completed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":80480,"byte_end":80485,"line_start":777,"line_end":777,"column_start":5,"column_end":10},"name":"Abort","qualname":"::stream::CallbackResult::Abort","value":"CallbackResult::Abort","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Abort the stream.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":80334,"byte_end":80348,"line_start":771,"line_end":771,"column_start":10,"column_end":24},"name":"CallbackResult","qualname":"::stream::CallbackResult","value":"CallbackResult::{Continue, Complete, Abort}","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1081}],"decl_id":null,"docs":" The result of the StreamCallbackFn.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":80314,"byte_end":80324,"line_start":770,"line_end":770,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":80776,"byte_end":80792,"line_start":787,"line_end":787,"column_start":12,"column_end":28},"name":"CallbackTimeInfo","qualname":"::stream::CallbackTimeInfo","value":"CallbackTimeInfo { input_buffer_adc_time, current_time, output_buffer_dac_time }","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092}],"decl_id":null,"docs":" Timing information for the buffers passed to the stream callback.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":80754,"byte_end":80764,"line_start":786,"line_end":786,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":80882,"byte_end":80903,"line_start":789,"line_end":789,"column_start":9,"column_end":30},"name":"input_buffer_adc_time","qualname":"::stream::CallbackTimeInfo::input_buffer_adc_time","value":"f64","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":" The time when the first sample of the input buffer was captured by the\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":80973,"byte_end":80985,"line_start":791,"line_end":791,"column_start":9,"column_end":21},"name":"current_time","qualname":"::stream::CallbackTimeInfo::current_time","value":"f64","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":" The time when the tream callback was invoked.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81001,"byte_end":81023,"line_start":792,"line_end":792,"column_start":9,"column_end":31},"name":"output_buffer_dac_time","qualname":"::stream::CallbackTimeInfo::output_buffer_dac_time","value":"f64","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81180,"byte_end":81184,"line_start":798,"line_end":798,"column_start":12,"column_end":16},"name":"Info","qualname":"::stream::Info","value":"Info { struct_version, input_latency, output_latency, sample_rate }","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102}],"decl_id":null,"docs":" A structure containing unchanging information about an open stream.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81158,"byte_end":81168,"line_start":797,"line_end":797,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81218,"byte_end":81232,"line_start":800,"line_end":800,"column_start":9,"column_end":23},"name":"struct_version","qualname":"::stream::Info::struct_version","value":"i32","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Struct version\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81295,"byte_end":81308,"line_start":802,"line_end":802,"column_start":9,"column_end":22},"name":"input_latency","qualname":"::stream::Info::input_latency","value":"f64","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" The input latency for this open stream\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81373,"byte_end":81387,"line_start":804,"line_end":804,"column_start":9,"column_end":23},"name":"output_latency","qualname":"::stream::Info::output_latency","value":"f64","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" The output latency for this open stream\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81449,"byte_end":81460,"line_start":806,"line_end":806,"column_start":9,"column_end":20},"name":"sample_rate","qualname":"::stream::Info::sample_rate","value":"f64","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" The sample rate for this open stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81908,"byte_end":81921,"line_start":822,"line_end":822,"column_start":12,"column_end":25},"name":"from_c_params","qualname":"<Parameters<S>>::from_c_params","value":"fn (c_params: ffi::C_PaStreamParameters) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Converts the given `C_PaStreamParameters` into their respective **Parameters**.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":90639,"byte_end":90644,"line_start":1034,"line_end":1034,"column_start":12,"column_end":17},"name":"close","qualname":"<Stream<M, F>>::close","value":"fn (&mut self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Closes an audio stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":90893,"byte_end":90898,"line_start":1044,"line_end":1044,"column_start":12,"column_end":17},"name":"start","qualname":"<Stream<M, F>>::start","value":"fn (&mut self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Commences audio processing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":91249,"byte_end":91253,"line_start":1054,"line_end":1054,"column_start":12,"column_end":16},"name":"stop","qualname":"<Stream<M, F>>::stop","value":"fn (&mut self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Terminates audio processing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":91570,"byte_end":91575,"line_start":1062,"line_end":1062,"column_start":12,"column_end":17},"name":"abort","qualname":"<Stream<M, F>>::abort","value":"fn (&mut self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Terminates audio processing immediately without waiting for pending buffers to complete.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":92378,"byte_end":92388,"line_start":1084,"line_end":1084,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<Stream<M, F>>::is_stopped","value":"fn (&self) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Determine whether the stream is stopped.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":93332,"byte_end":93341,"line_start":1106,"line_end":1106,"column_start":12,"column_end":21},"name":"is_active","qualname":"<Stream<M, F>>::is_active","value":"fn (&self) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Determine whether the stream is active.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":94201,"byte_end":94205,"line_start":1127,"line_end":1127,"column_start":12,"column_end":16},"name":"time","qualname":"<Stream<M, F>>::time","value":"fn (&self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Returns the current time in seconds for a stream according to the same clock used to\n generate callback CallbackTimeInfo timestamps.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":94393,"byte_end":94397,"line_start":1134,"line_end":1134,"column_start":12,"column_end":16},"name":"info","qualname":"<Stream<M, F>>::info","value":"fn (&self) -> Info","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a Info structure containing information about the stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":94653,"byte_end":94669,"line_start":1142,"line_end":1142,"column_start":12,"column_end":28},"name":"unsafe_pa_stream","qualname":"<Stream<M, F>>::unsafe_pa_stream","value":"fn (&self) -> *mut ffi::C_PaStream","parent":null,"children":[],"decl_id":null,"docs":" This function is solely for use within the extension modules for interacting with PortAudio\n platform-specific extension APIs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":94890,"byte_end":94894,"line_start":1154,"line_end":1154,"column_start":12,"column_end":16},"name":"open","qualname":"<Stream<Blocking<F::Buffer>, F>>::open","value":"fn <S> (life: std::sync::Arc<super::Life>, settings: S) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Open a new **Blocking** **Stream** with the given **Flow** and settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":96232,"byte_end":96246,"line_start":1185,"line_end":1185,"column_start":12,"column_end":26},"name":"read_available","qualname":"<Stream<Blocking<F::Buffer>, F>>::read_available","value":"fn (&self) -> Result<Available, Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the number of frames that can be read from the stream without waiting.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":97282,"byte_end":97286,"line_start":1210,"line_end":1210,"column_start":12,"column_end":16},"name":"read","qualname":"<Stream<Blocking<F::Buffer>, F>>::read","value":"fn <'b> (&'b self, frames: u32) -> Result<&'b [F::Sample], Error>","parent":null,"children":[],"decl_id":null,"docs":" Read samples from an input stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":98453,"byte_end":98468,"line_start":1240,"line_end":1240,"column_start":12,"column_end":27},"name":"write_available","qualname":"<Stream<Blocking<F::Buffer>, F>>::write_available","value":"fn (&self) -> Result<Available, Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the number of frames that can be written to the stream without waiting.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":99465,"byte_end":99470,"line_start":1263,"line_end":1263,"column_start":12,"column_end":17},"name":"write","qualname":"<Stream<Blocking<F::Buffer>, F>>::write","value":"fn <WF> (&mut self, frames: u32, write_fn: WF) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Write samples to an output stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":100377,"byte_end":100381,"line_start":1290,"line_end":1290,"column_start":12,"column_end":16},"name":"open","qualname":"<Stream<NonBlocking, F>>::open","value":"fn <S, C> (life: std::sync::Arc<super::Life>, settings: S, mut callback: C) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Open a new **NonBlocking** **Stream** with the given **Flow** and settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":102750,"byte_end":102758,"line_start":1337,"line_end":1337,"column_start":12,"column_end":20},"name":"cpu_load","qualname":"<Stream<NonBlocking, F>>::cpu_load","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Retrieve CPU usage information for the specified stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":105206,"byte_end":105217,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"DeviceIndex","qualname":"::types::DeviceIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" The type used to refer to audio devices.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":105445,"byte_end":105450,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Index","qualname":"::types::DeviceKind::Index","value":"DeviceKind::Index(DeviceIndex)","parent":{"krate":0,"index":1153},"children":[],"decl_id":null,"docs":" An index to some Device.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":105587,"byte_end":105624,"line_start":46,"line_end":46,"column_start":5,"column_end":42},"name":"UseHostApiSpecificDeviceSpecification","qualname":"::types::DeviceKind::UseHostApiSpecificDeviceSpecification","value":"DeviceKind::UseHostApiSpecificDeviceSpecification","parent":{"krate":0,"index":1153},"children":[],"decl_id":null,"docs":" Indicates that the device(s) to be used are specified in the host api specific stream info\n structure.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":105395,"byte_end":105405,"line_start":41,"line_end":41,"column_start":10,"column_end":20},"name":"DeviceKind","qualname":"::types::DeviceKind","value":"DeviceKind::{Index, UseHostApiSpecificDeviceSpecification}","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1157}],"decl_id":null,"docs":" The device to be used by some stream.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":390},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":106403,"byte_end":106432,"line_start":76,"line_end":76,"column_start":11,"column_end":40},"name":"FRAMES_PER_BUFFER_UNSPECIFIED","qualname":"::types::FRAMES_PER_BUFFER_UNSPECIFIED","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The special value may be used to request that the stream callback will receive an optimal (and\n possibly varying) number of frames based on host requirements and the requested latency\n settings.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":391},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":106579,"byte_end":106591,"line_start":80,"line_end":80,"column_start":10,"column_end":22},"name":"HostApiIndex","qualname":"::types::HostApiIndex","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The type used to enumerate to host APIs at runtime.\n Values of this type range from 0 to (pa::get_host_api_count()-1).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":392},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":106667,"byte_end":106671,"line_start":83,"line_end":83,"column_start":10,"column_end":14},"name":"Time","qualname":"::types::Time","value":"f64","parent":null,"children":[],"decl_id":null,"docs":" The type used to represent monotonic time in seconds.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":393},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":106751,"byte_end":106757,"line_start":86,"line_end":86,"column_start":10,"column_end":16},"name":"Frames","qualname":"::types::Frames","value":"i64","parent":null,"children":[],"decl_id":null,"docs":" An type alias used to represent a given number of frames.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":107042,"byte_end":107045,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"F32","qualname":"::types::SampleFormat::F32","value":"SampleFormat::F32","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" Uses -1.0 and +1.0 as the minimum and maximum respectively.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":107104,"byte_end":107107,"line_start":95,"line_end":95,"column_start":5,"column_end":8},"name":"I32","qualname":"::types::SampleFormat::I32","value":"SampleFormat::I32","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" 32-bit signed integer sample representation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":107234,"byte_end":107237,"line_start":99,"line_end":99,"column_start":5,"column_end":8},"name":"I24","qualname":"::types::SampleFormat::I24","value":"SampleFormat::I24","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" 24-bit signed integer sample representation.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":107296,"byte_end":107299,"line_start":101,"line_end":101,"column_start":5,"column_end":8},"name":"I16","qualname":"::types::SampleFormat::I16","value":"SampleFormat::I16","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" 16-bit signed integer sample representation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":107357,"byte_end":107359,"line_start":103,"line_end":103,"column_start":5,"column_end":7},"name":"I8","qualname":"::types::SampleFormat::I8","value":"SampleFormat::I8","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" 8-bit signed integer sample representation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":107431,"byte_end":107433,"line_start":105,"line_end":105,"column_start":5,"column_end":7},"name":"U8","qualname":"::types::SampleFormat::U8","value":"SampleFormat::U8","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" An unsigned 8 bit format where 128 is considered \"ground\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":108564,"byte_end":108570,"line_start":122,"line_end":122,"column_start":5,"column_end":11},"name":"Custom","qualname":"::types::SampleFormat::Custom","value":"SampleFormat::Custom","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" Some custom sample format.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":108748,"byte_end":108755,"line_start":125,"line_end":125,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::types::SampleFormat::Unknown","value":"SampleFormat::Unknown","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" This variant is used when none of the above variants can be inferred from a given\n set of **SampleFormatFlags** via the `SampleFormat::from_flags` function.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":106955,"byte_end":106967,"line_start":91,"line_end":91,"column_start":10,"column_end":22},"name":"SampleFormat","qualname":"::types::SampleFormat","value":"SampleFormat::{F32, I32, I24, I16, I8, U8, Custom, Unknown}","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186}],"decl_id":null,"docs":" A type used to dynamically represent the various standard sample formats (usually) supported by\n all PortAudio implementations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":108996,"byte_end":109006,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"from_flags","qualname":"<SampleFormat>::from_flags","value":"fn (flags: SampleFormatFlags) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inspects the given **SampleFormatFlags** for the format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":109849,"byte_end":109854,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"flags","qualname":"<SampleFormat>::flags","value":"fn (self) -> SampleFormatFlags","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into the respective **SampleFormatFlags**.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":110582,"byte_end":110595,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"size_in_bytes","qualname":"<SampleFormat>::size_in_bytes","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the **SampleFormat** in bytes.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":111947,"byte_end":111964,"line_start":203,"line_end":203,"column_start":19,"column_end":36},"name":"SampleFormatFlags","qualname":"::types::sample_format_flags::SampleFormatFlags","value":"SampleFormatFlags {  }","parent":null,"children":[{"krate":0,"index":1208}],"decl_id":null,"docs":" A type used to specify one or more sample formats. Each value indicates a possible\n format for sound data passed to and from the stream callback, Pa_ReadStream and\n Pa_WriteStream.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":113800,"byte_end":113813,"line_start":254,"line_end":254,"column_start":5,"column_end":18},"name":"InDevelopment","qualname":"::types::HostApiTypeId::InDevelopment","value":"HostApiTypeId::InDevelopment","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" In development host\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":113867,"byte_end":113878,"line_start":256,"line_end":256,"column_start":5,"column_end":16},"name":"DirectSound","qualname":"::types::HostApiTypeId::DirectSound","value":"HostApiTypeId::DirectSound","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Direct sound\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":113927,"byte_end":113930,"line_start":258,"line_end":258,"column_start":5,"column_end":8},"name":"MME","qualname":"::types::HostApiTypeId::MME","value":"HostApiTypeId::MME","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" MMe API\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":113979,"byte_end":113983,"line_start":260,"line_end":260,"column_start":5,"column_end":9},"name":"ASIO","qualname":"::types::HostApiTypeId::ASIO","value":"HostApiTypeId::ASIO","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" ASIO API\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":114041,"byte_end":114053,"line_start":262,"line_end":262,"column_start":5,"column_end":17},"name":"SoundManager","qualname":"::types::HostApiTypeId::SoundManager","value":"HostApiTypeId::SoundManager","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Sound manager API\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":114109,"byte_end":114118,"line_start":264,"line_end":264,"column_start":5,"column_end":14},"name":"CoreAudio","qualname":"::types::HostApiTypeId::CoreAudio","value":"HostApiTypeId::CoreAudio","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Core Audio API\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":114167,"byte_end":114170,"line_start":266,"line_end":266,"column_start":5,"column_end":8},"name":"OSS","qualname":"::types::HostApiTypeId::OSS","value":"HostApiTypeId::OSS","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" OSS API\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":114219,"byte_end":114223,"line_start":268,"line_end":268,"column_start":5,"column_end":9},"name":"ALSA","qualname":"::types::HostApiTypeId::ALSA","value":"HostApiTypeId::ALSA","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Alsa API\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":114270,"byte_end":114272,"line_start":270,"line_end":270,"column_start":5,"column_end":7},"name":"AL","qualname":"::types::HostApiTypeId::AL","value":"HostApiTypeId::AL","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" AL API\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":114321,"byte_end":114325,"line_start":272,"line_end":272,"column_start":5,"column_end":9},"name":"BeOS","qualname":"::types::HostApiTypeId::BeOS","value":"HostApiTypeId::BeOS","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" BeOS API\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":114372,"byte_end":114377,"line_start":274,"line_end":274,"column_start":5,"column_end":10},"name":"WDMKS","qualname":"::types::HostApiTypeId::WDMKS","value":"HostApiTypeId::WDMKS","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" WDMKS\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":114426,"byte_end":114430,"line_start":276,"line_end":276,"column_start":5,"column_end":9},"name":"JACK","qualname":"::types::HostApiTypeId::JACK","value":"HostApiTypeId::JACK","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Jack API\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":114477,"byte_end":114483,"line_start":278,"line_end":278,"column_start":5,"column_end":11},"name":"WASAPI","qualname":"::types::HostApiTypeId::WASAPI","value":"HostApiTypeId::WASAPI","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" WASAPI\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":114541,"byte_end":114556,"line_start":280,"line_end":280,"column_start":5,"column_end":20},"name":"AudioScienceHPI","qualname":"::types::HostApiTypeId::AudioScienceHPI","value":"HostApiTypeId::AudioScienceHPI","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Audio Science HPI\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":113752,"byte_end":113765,"line_start":252,"line_end":252,"column_start":10,"column_end":23},"name":"HostApiTypeId","qualname":"::types::HostApiTypeId","value":"HostApiTypeId::{InDevelopment, DirectSound, MME, ASIO, SoundManager, CoreAudio, OSS, ALSA, AL, BeOS, WDMKS, JACK, WASAPI, AudioScienceHPI}","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1324},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1339},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1357},{"krate":0,"index":1360}],"decl_id":null,"docs":" Unchanging unique identifiers for each supported host API\n","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":113677,"byte_end":113689,"line_start":250,"line_end":250,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":114685,"byte_end":114694,"line_start":285,"line_end":285,"column_start":12,"column_end":21},"name":"from_c_id","qualname":"<HostApiTypeId>::from_c_id","value":"fn (c_id: ffi::HostApiTypeId) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert the given ffi::HostApiTypeId to a HostApiTypeId.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":115526,"byte_end":115537,"line_start":309,"line_end":309,"column_start":12,"column_end":23},"name":"HostApiInfo","qualname":"::types::HostApiInfo","value":"HostApiInfo { struct_version, host_type, name, device_count, default_input_device, default_output_device }","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380}],"decl_id":null,"docs":" A structure containing information about a particular host API.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":115586,"byte_end":115600,"line_start":311,"line_end":311,"column_start":9,"column_end":23},"name":"struct_version","qualname":"::types::HostApiInfo::struct_version","value":"i32","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" The version of the struct\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":115652,"byte_end":115661,"line_start":313,"line_end":313,"column_start":9,"column_end":18},"name":"host_type","qualname":"::types::HostApiInfo::host_type","value":"types::HostApiTypeId","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" The type of the current host\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":115715,"byte_end":115719,"line_start":315,"line_end":315,"column_start":9,"column_end":13},"name":"name","qualname":"::types::HostApiInfo::name","value":"&'a str","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" The name of the host\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":115784,"byte_end":115796,"line_start":317,"line_end":317,"column_start":9,"column_end":21},"name":"device_count","qualname":"::types::HostApiInfo::device_count","value":"u32","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" The total count of device in the host\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":115897,"byte_end":115917,"line_start":319,"line_end":319,"column_start":9,"column_end":29},"name":"default_input_device","qualname":"::types::HostApiInfo::default_input_device","value":"std::option::Option<types::DeviceIndex>","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" The index to the default input device or None if no input device is available\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":116036,"byte_end":116057,"line_start":321,"line_end":321,"column_start":9,"column_end":30},"name":"default_output_device","qualname":"::types::HostApiInfo::default_output_device","value":"std::option::Option<types::DeviceIndex>","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" The index to the default output device or None if no output device is available\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":116407,"byte_end":116418,"line_start":332,"line_end":332,"column_start":12,"column_end":23},"name":"from_c_info","qualname":"<HostApiInfo>::from_c_info","value":"fn (c_info: ffi::C_PaHostApiInfo) -> Option<HostApiInfo<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Construct the HostApiInfo from the equivalent C struct.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":118497,"byte_end":118510,"line_start":387,"line_end":387,"column_start":12,"column_end":25},"name":"HostErrorInfo","qualname":"::types::HostErrorInfo","value":"HostErrorInfo { code, text }","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1396}],"decl_id":null,"docs":" Structure used to return information about a host error condition.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":118555,"byte_end":118559,"line_start":389,"line_end":389,"column_start":9,"column_end":13},"name":"code","qualname":"::types::HostErrorInfo::code","value":"u32","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" The code of the error\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":118617,"byte_end":118621,"line_start":391,"line_end":391,"column_start":9,"column_end":13},"name":"text","qualname":"::types::HostErrorInfo::text","value":"&'a str","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" The string which explain the error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":118739,"byte_end":118756,"line_start":396,"line_end":396,"column_start":12,"column_end":29},"name":"from_c_error_info","qualname":"<HostErrorInfo>::from_c_error_info","value":"fn (c_error: ffi::C_PaHostErrorInfo) -> HostErrorInfo<'a>","parent":null,"children":[],"decl_id":null,"docs":" Construct a HostErrorInfo from the equivalent C struct.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":119470,"byte_end":119480,"line_start":418,"line_end":418,"column_start":12,"column_end":22},"name":"DeviceInfo","qualname":"::types::DeviceInfo","value":"DeviceInfo { struct_version, name, host_api, max_input_channels, max_output_channels, default_low_input_latency, default_low_output_latency, default_high_input_latency, default_high_output_latency, default_sample_rate }","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431}],"decl_id":null,"docs":" A structure providing information and capabilities of PortAudio devices.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":119529,"byte_end":119543,"line_start":420,"line_end":420,"column_start":9,"column_end":23},"name":"struct_version","qualname":"::types::DeviceInfo::struct_version","value":"i32","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" The version of the struct\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":119589,"byte_end":119593,"line_start":422,"line_end":422,"column_start":9,"column_end":13},"name":"name","qualname":"::types::DeviceInfo::name","value":"&'a str","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" The name of the device\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":119640,"byte_end":119648,"line_start":424,"line_end":424,"column_start":9,"column_end":17},"name":"host_api","qualname":"::types::DeviceInfo::host_api","value":"u16","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Host API identifier\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":119729,"byte_end":119747,"line_start":426,"line_end":426,"column_start":9,"column_end":27},"name":"max_input_channels","qualname":"::types::DeviceInfo::max_input_channels","value":"i32","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Maximal number of input channels for this device\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":119819,"byte_end":119838,"line_start":428,"line_end":428,"column_start":9,"column_end":28},"name":"max_output_channels","qualname":"::types::DeviceInfo::max_output_channels","value":"i32","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" maximal number of output channel for this device\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":119912,"byte_end":119937,"line_start":430,"line_end":430,"column_start":9,"column_end":34},"name":"default_low_input_latency","qualname":"::types::DeviceInfo::default_low_input_latency","value":"f64","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" The default low latency for input with this device\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":120013,"byte_end":120039,"line_start":432,"line_end":432,"column_start":9,"column_end":35},"name":"default_low_output_latency","qualname":"::types::DeviceInfo::default_low_output_latency","value":"f64","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" The default low latency for output with this device\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":120115,"byte_end":120141,"line_start":434,"line_end":434,"column_start":9,"column_end":35},"name":"default_high_input_latency","qualname":"::types::DeviceInfo::default_high_input_latency","value":"f64","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" The default high latency for input with this device\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":120218,"byte_end":120245,"line_start":436,"line_end":436,"column_start":9,"column_end":36},"name":"default_high_output_latency","qualname":"::types::DeviceInfo::default_high_output_latency","value":"f64","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" The default high latency for output with this device\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":120309,"byte_end":120328,"line_start":438,"line_end":438,"column_start":9,"column_end":28},"name":"default_sample_rate","qualname":"::types::DeviceInfo::default_sample_rate","value":"f64","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" The default sample rate for this device\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":120440,"byte_end":120451,"line_start":444,"line_end":444,"column_start":12,"column_end":23},"name":"from_c_info","qualname":"<DeviceInfo>::from_c_info","value":"fn (c_info: ffi::C_PaDeviceInfo) -> DeviceInfo<'a>","parent":null,"children":[],"decl_id":null,"docs":" Construct a **DeviceInfo** from the equivalent C struct.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":4046,"byte_end":4055,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"PortAudio","qualname":"::PortAudio","value":"PortAudio {  }","parent":null,"children":[{"krate":0,"index":1488}],"decl_id":null,"docs":" A type-safe wrapper around the PortAudio API.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":4375,"byte_end":4379,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"Life","qualname":"::Life","value":"Life {  }","parent":null,"children":[{"krate":0,"index":1492}],"decl_id":null,"docs":" The lifetime of the `PortAudio` instance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":5200,"byte_end":5203,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"new","qualname":"<PortAudio>::new","value":"fn () -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Construct a **PortAudio** instance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":6101,"byte_end":6110,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"terminate","qualname":"<PortAudio>::terminate","value":"fn (self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of `self` and terminates the PortAudio API using `Pa_Terminate`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":6313,"byte_end":6320,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"version","qualname":"<PortAudio>::version","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the release number of the currently running PortAudio build.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":6545,"byte_end":6557,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"version_text","qualname":"<PortAudio>::version_text","value":"fn (&self) -> Result<&'static str, ::std::str::Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a textual description of the current PortAudio build.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":6782,"byte_end":6789,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"devices","qualname":"<PortAudio>::devices","value":"fn (&self) -> Result<Devices, Error>","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator yielding the **DeviceIndex** for each device along with their\n respective **DeviceInfo**s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":7390,"byte_end":7402,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"device_count","qualname":"<PortAudio>::device_count","value":"fn (&self) -> Result<u32, Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the number of available devices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":8340,"byte_end":8360,"line_start":232,"line_end":232,"column_start":12,"column_end":32},"name":"default_input_device","qualname":"<PortAudio>::default_input_device","value":"fn (&self) -> Result<DeviceIndex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the index of the default input device. The result can be used in the\n **InSettings** used to open an **In** **Stream**.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":9051,"byte_end":9072,"line_start":247,"line_end":247,"column_start":12,"column_end":33},"name":"default_output_device","qualname":"<PortAudio>::default_output_device","value":"fn (&self) -> Result<DeviceIndex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the index of the default output device. The result can be used in the\n **OutSettings** used to open an **Out** **Stream**.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":9699,"byte_end":9710,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"device_info","qualname":"<PortAudio>::device_info","value":"fn (&self, device: DeviceIndex) -> Result<DeviceInfo, Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a **DeviceInfo** structure containing information about the specified device.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":10156,"byte_end":10165,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"host_apis","qualname":"<PortAudio>::host_apis","value":"fn (&self) -> HostApis","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator yielding the **HostApiIndex** of each available API along with their\n respective **HostApiInfo**s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":10709,"byte_end":10723,"line_start":291,"line_end":291,"column_start":12,"column_end":26},"name":"host_api_count","qualname":"<PortAudio>::host_api_count","value":"fn (&self) -> Result<HostApiIndex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the number of available host APIs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":11363,"byte_end":11379,"line_start":306,"line_end":306,"column_start":12,"column_end":28},"name":"default_host_api","qualname":"<PortAudio>::default_host_api","value":"fn (&self) -> Result<HostApiIndex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the index of the default host API.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":11928,"byte_end":11941,"line_start":321,"line_end":321,"column_start":12,"column_end":25},"name":"host_api_info","qualname":"<PortAudio>::host_api_info","value":"fn <'a> (&'a self, host_api: HostApiIndex) -> Option<HostApiInfo<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a pointer to a structure containing information about a specific host Api.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":12713,"byte_end":12747,"line_start":340,"line_end":340,"column_start":12,"column_end":46},"name":"host_api_type_id_to_host_api_index","qualname":"<PortAudio>::host_api_type_id_to_host_api_index","value":"fn (&self, type_id: HostApiTypeId) -> Result<HostApiIndex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Convert a static host API unique identifier, into a runtime host API index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":13712,"byte_end":13744,"line_start":363,"line_end":363,"column_start":12,"column_end":44},"name":"api_device_index_to_device_index","qualname":"<PortAudio>::api_device_index_to_device_index","value":"fn (&self, host_api: HostApiIndex, host_api_device_index: i32) -> Result<DeviceIndex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Convert a host-API-specific device index to standard PortAudio device index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":14628,"byte_end":14653,"line_start":384,"line_end":384,"column_start":12,"column_end":37},"name":"is_input_format_supported","qualname":"<PortAudio>::is_input_format_supported","value":"fn <I> (&self, params: StreamParameters<I>, sample_rate: f64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Determine whether it would be possible to open an input-only stream with the specified\n parameters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":15200,"byte_end":15226,"line_start":398,"line_end":398,"column_start":12,"column_end":38},"name":"is_output_format_supported","qualname":"<PortAudio>::is_output_format_supported","value":"fn <O> (&self, params: StreamParameters<O>, sample_rate: f64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Determine whether it would be possible to open an output-only stream with the specified\n parameters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":15767,"byte_end":15793,"line_start":412,"line_end":412,"column_start":12,"column_end":38},"name":"is_duplex_format_supported","qualname":"<PortAudio>::is_duplex_format_supported","value":"fn <I, O> (&self, in_params: StreamParameters<I>, out_params: StreamParameters<O>, sample_rate: f64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Determine whether it would be possible to open a duplex stream with the specified\n parameters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":16873,"byte_end":16893,"line_start":434,"line_end":434,"column_start":12,"column_end":32},"name":"open_blocking_stream","qualname":"<PortAudio>::open_blocking_stream","value":"fn <S> (&self, settings: S) -> Result<Stream<Blocking<<S::Flow as Flow>::Buffer>, S::Flow>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Open a new blocking [**Stream**](./stream/struct.Stream.html) with the given settings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":19815,"byte_end":19839,"line_start":476,"line_end":476,"column_start":12,"column_end":36},"name":"open_non_blocking_stream","qualname":"<PortAudio>::open_non_blocking_stream","value":"fn <S, C> (&self, settings: S, callback: C) -> Result<Stream<NonBlocking, S::Flow>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Open a new non-blocking [**Stream**](./stream/struct.Stream.html) with the given settings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":20453,"byte_end":20480,"line_start":490,"line_end":490,"column_start":12,"column_end":39},"name":"default_input_stream_params","qualname":"<PortAudio>::default_input_stream_params","value":"fn <I> (&self, channels: i32) -> Result<StreamParameters<I>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Produce the default **StreamParameters** for an **Input** **Stream**.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":21086,"byte_end":21114,"line_start":504,"line_end":504,"column_start":12,"column_end":40},"name":"default_output_stream_params","qualname":"<PortAudio>::default_output_stream_params","value":"fn <O> (&self, channels: i32) -> Result<StreamParameters<O>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Produce the default **StreamParameters** for an **Output** **Stream**.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":21766,"byte_end":21795,"line_start":519,"line_end":519,"column_start":12,"column_end":41},"name":"default_input_stream_settings","qualname":"<PortAudio>::default_input_stream_settings","value":"fn <I> (&self, channels: i32, sample_rate: f64, frames_per_buffer: u32) -> Result<InputStreamSettings<I>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Produce the default **InputStreamSettings** with the given number of channels, sample_rate\n and frames per buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":22558,"byte_end":22588,"line_start":535,"line_end":535,"column_start":12,"column_end":42},"name":"default_output_stream_settings","qualname":"<PortAudio>::default_output_stream_settings","value":"fn <O> (&self, channels: i32, sample_rate: f64, frames_per_buffer: u32) -> Result<OutputStreamSettings<O>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Produce the default **OutputStreamSettings** with the given number of channels, sample_rate\n and frames per buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":23370,"byte_end":23400,"line_start":551,"line_end":551,"column_start":12,"column_end":42},"name":"default_duplex_stream_settings","qualname":"<PortAudio>::default_duplex_stream_settings","value":"fn <I, O> (&self, in_channels: i32, out_channels: i32, sample_rate: f64, frames_per_buffer: u32) -> Result<DuplexStreamSettings<I, O>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Produce the default **DuplexStreamSettings** with the given number of channels, sample_rate\n and frames per buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":24518,"byte_end":24523,"line_start":571,"line_end":571,"column_start":12,"column_end":17},"name":"sleep","qualname":"<PortAudio>::sleep","value":"fn (&self, m_sec: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Put the caller to sleep for at least 'msec' milliseconds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":25352,"byte_end":25372,"line_start":589,"line_end":589,"column_start":12,"column_end":32},"name":"last_host_error_info","qualname":"<PortAudio>::last_host_error_info","value":"fn <'a> (&'a self) -> HostErrorInfo<'a>","parent":null,"children":[],"decl_id":null,"docs":" Return information about the last host error encountered.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":473},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":25775,"byte_end":25782,"line_start":607,"line_end":607,"column_start":8,"column_end":15},"name":"version","qualname":"::version","value":"fn () -> i32","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the release number of the currently running PortAudio build.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":474},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":25987,"byte_end":25999,"line_start":616,"line_end":616,"column_start":8,"column_end":20},"name":"version_text","qualname":"::version_text","value":"fn () -> Result<&'static str, ::std::str::Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a textual description of the current PortAudio build.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":29141,"byte_end":29148,"line_start":690,"line_end":690,"column_start":12,"column_end":19},"name":"Devices","qualname":"::Devices","value":"Devices {  }","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"decl_id":null,"docs":" An iterator yielding the **DeviceIndex** for each available device along with their respective\n **DeviceInfo**s.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":29375,"byte_end":29383,"line_start":700,"line_end":700,"column_start":12,"column_end":20},"name":"HostApis","qualname":"::HostApis","value":"HostApis {  }","parent":null,"children":[{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499}],"decl_id":null,"docs":" An iterator yielding the **HostApiIndex** for each available API along with their respective\n **HostApiInfo**s.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":494},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":30663,"byte_end":30678,"line_start":747,"line_end":747,"column_start":8,"column_end":23},"name":"get_sample_size","qualname":"::get_sample_size","value":"fn (format: SampleFormat) -> Result<u8, Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the size of a given sample format in bytes.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":505},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":31127,"byte_end":31140,"line_start":763,"line_end":763,"column_start":15,"column_end":28},"name":"SamplePrivate","qualname":"::private::SamplePrivate","value":"SamplePrivate: ::std::default::Default + Copy + Clone + ::std::fmt::Debug + ToPrimitive +\nFromPrimitive + Add + Sub + Mul + Div","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":508}],"decl_id":null,"docs":" internal private trait for Sample format management\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":31344,"byte_end":31348,"line_start":766,"line_end":766,"column_start":12,"column_end":16},"name":"size","qualname":"::private::SamplePrivate::size","value":"fn <S> () -> usize","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" return the size of a sample format\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":31474,"byte_end":31490,"line_start":770,"line_end":770,"column_start":12,"column_end":28},"name":"to_sample_format","qualname":"::private::SamplePrivate::to_sample_format","value":"fn () -> SampleFormat","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" get the sample format\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":519},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":32111,"byte_end":32117,"line_start":795,"line_end":795,"column_start":11,"column_end":17},"name":"Sample","qualname":"::Sample","value":"Sample: private::SamplePrivate","parent":null,"children":[{"krate":0,"index":520}],"decl_id":null,"docs":" public trait to constraint pa::Stream for specific types\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":32219,"byte_end":32232,"line_start":797,"line_end":797,"column_start":8,"column_end":21},"name":"sample_format","qualname":"::Sample::sample_format","value":"fn () -> SampleFormat","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Retrieve the SampleFormat variant associated with the type.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":34474,"byte_end":34479,"line_start":72,"line_end":72,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":34636,"byte_end":34641,"line_start":78,"line_end":78,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":36915,"byte_end":36920,"line_start":115,"line_end":115,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":63555,"byte_end":63566,"line_start":342,"line_end":342,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":63597,"byte_end":63603,"line_start":343,"line_end":343,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":63646,"byte_end":63656,"line_start":346,"line_end":346,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":66184,"byte_end":66198,"line_start":419,"line_end":419,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":67226,"byte_end":67231,"line_start":451,"line_end":451,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":69156,"byte_end":69162,"line_start":501,"line_end":501,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":71103,"byte_end":71109,"line_start":551,"line_end":551,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":73684,"byte_end":73689,"line_start":613,"line_end":613,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":73965,"byte_end":73971,"line_start":625,"line_end":625,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":74287,"byte_end":74293,"line_start":638,"line_end":638,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":74582,"byte_end":74588,"line_start":650,"line_end":650,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":76655,"byte_end":76660,"line_start":696,"line_end":696,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":79642,"byte_end":79655,"line_start":752,"line_end":752,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81488,"byte_end":81496,"line_start":810,"line_end":810,"column_start":18,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81517,"byte_end":81528,"line_start":811,"line_end":811,"column_start":15,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81550,"byte_end":81560,"line_start":814,"line_end":814,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":82871,"byte_end":82891,"line_start":845,"line_end":845,"column_start":46,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":83666,"byte_end":83679,"line_start":865,"line_end":865,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":83995,"byte_end":84009,"line_start":874,"line_end":874,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":84331,"byte_end":84345,"line_start":883,"line_end":883,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":84733,"byte_end":84739,"line_start":896,"line_end":896,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":86351,"byte_end":86357,"line_start":929,"line_end":929,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":90217,"byte_end":90223,"line_start":1019,"line_end":1019,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":94745,"byte_end":94751,"line_start":1149,"line_end":1149,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":95576,"byte_end":95582,"line_start":1171,"line_end":1171,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":97795,"byte_end":97801,"line_start":1226,"line_end":1226,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":100256,"byte_end":100262,"line_start":1287,"line_end":1287,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":102886,"byte_end":102892,"line_start":1346,"line_end":1346,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":105662,"byte_end":105673,"line_start":50,"line_end":50,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":105832,"byte_end":105842,"line_start":57,"line_end":57,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":105962,"byte_end":105973,"line_start":63,"line_end":63,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":108765,"byte_end":108777,"line_start":128,"line_end":128,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":112755,"byte_end":112772,"line_start":223,"line_end":223,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":112990,"byte_end":113007,"line_start":230,"line_end":230,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":114593,"byte_end":114606,"line_start":283,"line_end":283,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":116092,"byte_end":116103,"line_start":324,"line_end":324,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":117627,"byte_end":117642,"line_start":364,"line_end":364,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":118644,"byte_end":118657,"line_start":394,"line_end":394,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":119057,"byte_end":119074,"line_start":405,"line_end":405,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":120346,"byte_end":120356,"line_start":441,"line_end":441,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":121272,"byte_end":121286,"line_start":462,"line_end":462,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":4622,"byte_end":4631,"line_start":143,"line_end":143,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":25562,"byte_end":25566,"line_start":597,"line_end":597,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":29496,"byte_end":29503,"line_start":707,"line_end":707,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":29867,"byte_end":29875,"line_start":720,"line_end":720,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3758,"byte_end":3763,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":50}},{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3773,"byte_end":3776,"line_start":114,"line_end":114,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":58}},{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":3795,"byte_end":3801,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":156}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":34474,"byte_end":34479,"line_start":72,"line_end":72,"column_start":30,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":526},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":34636,"byte_end":34641,"line_start":78,"line_end":78,"column_start":30,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":526},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/error.rs","byte_start":36915,"byte_end":36920,"line_start":115,"line_end":115,"column_start":31,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":526},"to":{"krate":18,"index":145}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":52663,"byte_end":52667,"line_start":67,"line_end":67,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":178},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":53039,"byte_end":53043,"line_start":77,"line_end":77,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":178},"to":{"krate":0,"index":189}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":63555,"byte_end":63566,"line_start":342,"line_end":342,"column_start":22,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":199},"to":{"krate":2,"index":1533}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":63597,"byte_end":63603,"line_start":343,"line_end":343,"column_start":28,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":201},"to":{"krate":2,"index":1533}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":63646,"byte_end":63656,"line_start":346,"line_end":346,"column_start":9,"column_end":19},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":66184,"byte_end":66198,"line_start":419,"line_end":419,"column_start":12,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":67226,"byte_end":67231,"line_start":451,"line_end":451,"column_start":18,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":208},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":69156,"byte_end":69162,"line_start":501,"line_end":501,"column_start":18,"column_end":24},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":211},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":71103,"byte_end":71109,"line_start":551,"line_end":551,"column_start":21,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":214},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":73684,"byte_end":73689,"line_start":613,"line_end":613,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":208},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":73965,"byte_end":73971,"line_start":625,"line_end":625,"column_start":23,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":214},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":74287,"byte_end":74293,"line_start":638,"line_end":638,"column_start":20,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":211},"to":{"krate":0,"index":189}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":74582,"byte_end":74588,"line_start":650,"line_end":650,"column_start":23,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":214},"to":{"krate":0,"index":189}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":76655,"byte_end":76660,"line_start":696,"line_end":696,"column_start":34,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":79642,"byte_end":79655,"line_start":752,"line_end":752,"column_start":34,"column_end":47},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":969},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81488,"byte_end":81496,"line_start":810,"line_end":810,"column_start":18,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":196},"to":{"krate":0,"index":174}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81517,"byte_end":81528,"line_start":811,"line_end":811,"column_start":15,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":199},"to":{"krate":0,"index":174}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":81550,"byte_end":81560,"line_start":814,"line_end":814,"column_start":17,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":82871,"byte_end":82891,"line_start":845,"line_end":845,"column_start":46,"column_end":66},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":608},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":83666,"byte_end":83679,"line_start":865,"line_end":865,"column_start":22,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":780},"to":{"krate":0,"index":175}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":83995,"byte_end":84009,"line_start":874,"line_end":874,"column_start":22,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":794},"to":{"krate":0,"index":175}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":84331,"byte_end":84345,"line_start":883,"line_end":883,"column_start":25,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":808},"to":{"krate":0,"index":175}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":84733,"byte_end":84739,"line_start":896,"line_end":896,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":86351,"byte_end":86357,"line_start":929,"line_end":929,"column_start":15,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":284},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":90217,"byte_end":90223,"line_start":1019,"line_end":1019,"column_start":12,"column_end":18},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":94745,"byte_end":94751,"line_start":1149,"line_end":1149,"column_start":9,"column_end":15},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":95576,"byte_end":95582,"line_start":1171,"line_end":1171,"column_start":9,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":97795,"byte_end":97801,"line_start":1226,"line_end":1226,"column_start":9,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":100256,"byte_end":100262,"line_start":1287,"line_end":1287,"column_start":9,"column_end":15},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/stream.rs","byte_start":102886,"byte_end":102892,"line_start":1346,"line_end":1346,"column_start":21,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":201},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":105662,"byte_end":105673,"line_start":50,"line_end":50,"column_start":33,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":105832,"byte_end":105842,"line_start":57,"line_end":57,"column_start":28,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":105962,"byte_end":105973,"line_start":63,"line_end":63,"column_start":32,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":108765,"byte_end":108777,"line_start":128,"line_end":128,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":112755,"byte_end":112772,"line_start":223,"line_end":223,"column_start":38,"column_end":55},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1207},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":112990,"byte_end":113007,"line_start":230,"line_end":230,"column_start":34,"column_end":51},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1207},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":114593,"byte_end":114606,"line_start":283,"line_end":283,"column_start":6,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":116092,"byte_end":116103,"line_start":324,"line_end":324,"column_start":10,"column_end":21},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":117627,"byte_end":117642,"line_start":364,"line_end":364,"column_start":41,"column_end":56},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":118644,"byte_end":118657,"line_start":394,"line_end":394,"column_start":10,"column_end":23},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":119057,"byte_end":119074,"line_start":405,"line_end":405,"column_start":43,"column_end":60},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":120346,"byte_end":120356,"line_start":441,"line_end":441,"column_start":10,"column_end":20},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/types.rs","byte_start":121272,"byte_end":121286,"line_start":462,"line_end":462,"column_start":40,"column_end":54},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":4622,"byte_end":4631,"line_start":143,"line_end":143,"column_start":6,"column_end":15},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":25562,"byte_end":25566,"line_start":597,"line_end":597,"column_start":15,"column_end":19},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1491},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":29496,"byte_end":29503,"line_start":707,"line_end":707,"column_start":23,"column_end":30},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":29867,"byte_end":29875,"line_start":720,"line_end":720,"column_start":23,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1495},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":31158,"byte_end":31165,"line_start":763,"line_end":763,"column_start":46,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":2206},"to":{"krate":0,"index":505}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":31168,"byte_end":31172,"line_start":763,"line_end":763,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":505}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":31175,"byte_end":31180,"line_start":763,"line_end":763,"column_start":63,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":505}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":31195,"byte_end":31200,"line_start":763,"line_end":763,"column_start":83,"column_end":88},"kind":"SuperTrait","from":{"krate":2,"index":7636},"to":{"krate":0,"index":505}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":31232,"byte_end":31243,"line_start":764,"line_end":764,"column_start":32,"column_end":43},"kind":"SuperTrait","from":{"krate":18,"index":120},"to":{"krate":0,"index":505}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":31246,"byte_end":31259,"line_start":764,"line_end":764,"column_start":46,"column_end":59},"kind":"SuperTrait","from":{"krate":18,"index":145},"to":{"krate":0,"index":505}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":31262,"byte_end":31265,"line_start":764,"line_end":764,"column_start":62,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":1596},"to":{"krate":0,"index":505}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":31268,"byte_end":31271,"line_start":764,"line_end":764,"column_start":68,"column_end":71},"kind":"SuperTrait","from":{"krate":2,"index":1601},"to":{"krate":0,"index":505}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":31274,"byte_end":31277,"line_start":764,"line_end":764,"column_start":74,"column_end":77},"kind":"SuperTrait","from":{"krate":2,"index":1606},"to":{"krate":0,"index":505}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":31280,"byte_end":31283,"line_start":764,"line_end":764,"column_start":80,"column_end":83},"kind":"SuperTrait","from":{"krate":2,"index":1611},"to":{"krate":0,"index":505}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/portaudio-0.7.0/src/lib.rs","byte_start":32128,"byte_end":32141,"line_start":795,"line_end":795,"column_start":28,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":505},"to":{"krate":0,"index":519}}]}