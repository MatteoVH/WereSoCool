{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13","program":"/Users/danny/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","petgraph","/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"graphmap\"","--cfg","feature=\"ordermap\"","--cfg","feature=\"stable_graph\"","-C","metadata=a3224fa2474fcab9","-C","extra-filename=-a3224fa2474fcab9","--out-dir","/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps","-L","dependency=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps","--extern","fixedbitset=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/libfixedbitset-b8db0b40b719ac55.rmeta","--extern","ordermap=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/libordermap-bd3aba7cd523f8fd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/danny/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/libpetgraph-a3224fa2474fcab9.rmeta"},"prelude":{"crate_id":{"name":"petgraph","disambiguator":[4253033508656269788,9601543421411815921]},"crate_root":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src","external_crates":[{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15786589783347927115,14932276094748675792]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10298575208133357036,8040858178392247411]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12346914022686079705,4940267238012603511]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18114786932049689441,12972308710781110595]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3450676385096259377,17670937522874515785]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17577124700929205618,18199936732272738370]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12559880231068804868,15252340553816167694]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1187771448540952860,5203397268813630476]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[18283159763238190815,6626693072124271590]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[13458662043719537980,9570942752289014475]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11980204761434995587,1127255387257643439]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8467147480215253010,13194617755467267743]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8463084087322079994,16053869174229632260]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16926090732921528503,7551031884587596916]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":15,"id":{"name":"fixedbitset","disambiguator":[12809543366760121614,11581573310287303441]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":16,"id":{"name":"ordermap","disambiguator":[13784030297862274924,5993692251054135313]}}],"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1,"byte_end":5007,"line_start":2,"line_end":227,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1452},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1029,"byte_end":1034,"line_start":34,"line_end":34,"column_start":16,"column_end":21},"alias_span":null,"name":"Graph","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4013},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1057,"byte_end":1065,"line_start":36,"line_end":36,"column_start":21,"column_end":29},"alias_span":null,"name":"Outgoing","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4016},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1067,"byte_end":1075,"line_start":36,"line_end":36,"column_start":31,"column_end":39},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8376,"byte_end":8377,"line_start":42,"line_end":42,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":28}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8376,"byte_end":8377,"line_start":42,"line_end":42,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Reversed","parent":{"krate":0,"index":28}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8376,"byte_end":8377,"line_start":42,"line_end":42,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"DfsEvent, depth_first_search","parent":{"krate":0,"index":28}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8376,"byte_end":8377,"line_start":42,"line_end":42,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Walker, DfsPostOrder, Dfs, Bfs","parent":{"krate":0,"index":28}},{"kind":"Use","ref_id":{"krate":0,"index":2852},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76079,"byte_end":76092,"line_start":43,"line_end":43,"column_start":5,"column_end":18},"alias_span":null,"name":"is_isomorphic","value":"","parent":{"krate":0,"index":859}},{"kind":"Use","ref_id":{"krate":0,"index":2857},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76098,"byte_end":76120,"line_start":44,"line_end":44,"column_start":5,"column_end":27},"alias_span":null,"name":"is_isomorphic_matching","value":"","parent":{"krate":0,"index":859}},{"kind":"Use","ref_id":{"krate":0,"index":2491},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76150,"byte_end":76158,"line_start":46,"line_end":46,"column_start":26,"column_end":34},"alias_span":null,"name":"dijkstra","value":"","parent":{"krate":0,"index":859}},{"kind":"Use","ref_id":{"krate":0,"index":2511},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76182,"byte_end":76187,"line_start":47,"line_end":47,"column_start":23,"column_end":28},"alias_span":null,"name":"astar","value":"","parent":{"krate":0,"index":859}},{"kind":"Use","ref_id":{"krate":0,"index":3632},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193210,"byte_end":193219,"line_start":53,"line_end":53,"column_start":5,"column_end":14},"alias_span":null,"name":"NodeIndex","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":3669},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193225,"byte_end":193234,"line_start":54,"line_end":54,"column_start":5,"column_end":14},"alias_span":null,"name":"EdgeIndex","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1755},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193240,"byte_end":193250,"line_start":55,"line_end":55,"column_start":5,"column_end":15},"alias_span":null,"name":"GraphIndex","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193256,"byte_end":193265,"line_start":56,"line_end":56,"column_start":5,"column_end":14},"alias_span":null,"name":"IndexType","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193271,"byte_end":193280,"line_start":57,"line_end":57,"column_start":5,"column_end":14},"alias_span":null,"name":"DefaultIx","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1421},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193286,"byte_end":193296,"line_start":58,"line_end":58,"column_start":5,"column_end":15},"alias_span":null,"name":"node_index","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1423},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193302,"byte_end":193312,"line_start":59,"line_end":59,"column_start":5,"column_end":15},"alias_span":null,"name":"edge_index","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268326,"byte_end":268335,"line_start":16,"line_end":16,"column_start":17,"column_end":26},"alias_span":null,"name":"IndexType","value":"","parent":{"krate":0,"index":2525}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268337,"byte_end":268346,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"alias_span":null,"name":"DefaultIx","value":"","parent":{"krate":0,"index":2525}},{"kind":"Use","ref_id":{"krate":0,"index":1452},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315078,"byte_end":315083,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"alias_span":null,"name":"Graph","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3632},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315089,"byte_end":315098,"line_start":11,"line_end":11,"column_start":5,"column_end":14},"alias_span":null,"name":"NodeIndex","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3669},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315104,"byte_end":315113,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"alias_span":null,"name":"EdgeIndex","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1460},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315119,"byte_end":315126,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"alias_span":null,"name":"DiGraph","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315132,"byte_end":315139,"line_start":14,"line_end":14,"column_start":5,"column_end":12},"alias_span":null,"name":"UnGraph","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3597},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315215,"byte_end":315223,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"alias_span":null,"name":"GraphMap","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1057},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315229,"byte_end":315239,"line_start":20,"line_end":20,"column_start":5,"column_end":15},"alias_span":null,"name":"DiGraphMap","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1054},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315245,"byte_end":315255,"line_start":21,"line_end":21,"column_start":5,"column_end":15},"alias_span":null,"name":"UnGraphMap","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315339,"byte_end":315350,"line_start":26,"line_end":26,"column_start":5,"column_end":16},"alias_span":null,"name":"StableGraph","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1953},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315356,"byte_end":315369,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"alias_span":null,"name":"StableDiGraph","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1957},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315375,"byte_end":315388,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"alias_span":null,"name":"StableUnGraph","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3139},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315432,"byte_end":315435,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"alias_span":null,"name":"Bfs","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3112},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315441,"byte_end":315444,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"alias_span":null,"name":"Dfs","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3125},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315450,"byte_end":315462,"line_start":34,"line_end":34,"column_start":5,"column_end":17},"alias_span":null,"name":"DfsPostOrder","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":4012},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315501,"byte_end":315510,"line_start":38,"line_end":38,"column_start":5,"column_end":14},"alias_span":null,"name":"Direction","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":4016},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315516,"byte_end":315524,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":4013},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315530,"byte_end":315538,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"alias_span":null,"name":"Outgoing","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":4037},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315544,"byte_end":315552,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"alias_span":null,"name":"Directed","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":4043},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315558,"byte_end":315568,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"alias_span":null,"name":"Undirected","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":275},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315613,"byte_end":315620,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"alias_span":null,"name":"EdgeRef","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3717},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1747,"byte_end":1751,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"alias_span":null,"name":"Edge","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":3669},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1761,"byte_end":1770,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"alias_span":null,"name":"EdgeIndex","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":3741},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1780,"byte_end":1791,"line_start":76,"line_end":76,"column_start":9,"column_end":20},"alias_span":null,"name":"EdgeIndices","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":3751},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1801,"byte_end":1814,"line_start":77,"line_end":77,"column_start":9,"column_end":22},"alias_span":null,"name":"EdgeReference","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1872},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1824,"byte_end":1838,"line_start":78,"line_end":78,"column_start":9,"column_end":23},"alias_span":null,"name":"EdgeReferences","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1710},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1848,"byte_end":1862,"line_start":79,"line_end":79,"column_start":9,"column_end":23},"alias_span":null,"name":"EdgeWeightsMut","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1669},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1872,"byte_end":1877,"line_start":80,"line_end":80,"column_start":9,"column_end":14},"alias_span":null,"name":"Edges","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1598},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1887,"byte_end":1896,"line_start":81,"line_end":81,"column_start":9,"column_end":18},"alias_span":null,"name":"Externals","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":2386},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1906,"byte_end":1912,"line_start":82,"line_end":82,"column_start":9,"column_end":15},"alias_span":null,"name":"Frozen","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1452},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1922,"byte_end":1927,"line_start":83,"line_end":83,"column_start":9,"column_end":14},"alias_span":null,"name":"Graph","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1613},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1937,"byte_end":1946,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"alias_span":null,"name":"Neighbors","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":3706},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1956,"byte_end":1960,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"alias_span":null,"name":"Node","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":3632},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1970,"byte_end":1979,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"alias_span":null,"name":"NodeIndex","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":3731},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1989,"byte_end":2000,"line_start":87,"line_end":87,"column_start":9,"column_end":20},"alias_span":null,"name":"NodeIndices","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1697},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2010,"byte_end":2024,"line_start":88,"line_end":88,"column_start":9,"column_end":23},"alias_span":null,"name":"NodeWeightsMut","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1833},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2034,"byte_end":2048,"line_start":89,"line_end":89,"column_start":9,"column_end":23},"alias_span":null,"name":"NodeReferences","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1766},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2058,"byte_end":2071,"line_start":90,"line_end":90,"column_start":9,"column_end":22},"alias_span":null,"name":"WalkNeighbors","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1755},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2081,"byte_end":2091,"line_start":91,"line_end":91,"column_start":9,"column_end":19},"alias_span":null,"name":"GraphIndex","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2101,"byte_end":2110,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"alias_span":null,"name":"IndexType","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1423},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2120,"byte_end":2130,"line_start":93,"line_end":93,"column_start":9,"column_end":19},"alias_span":null,"name":"edge_index","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1421},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2140,"byte_end":2150,"line_start":94,"line_end":94,"column_start":9,"column_end":19},"alias_span":null,"name":"node_index","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2160,"byte_end":2169,"line_start":95,"line_end":95,"column_start":9,"column_end":18},"alias_span":null,"name":"DefaultIx","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1460},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2179,"byte_end":2186,"line_start":96,"line_end":96,"column_start":9,"column_end":16},"alias_span":null,"name":"DiGraph","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2196,"byte_end":2203,"line_start":97,"line_end":97,"column_start":9,"column_end":16},"alias_span":null,"name":"UnGraph","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1895},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2268,"byte_end":2280,"line_start":102,"line_end":102,"column_start":21,"column_end":33},"alias_span":null,"name":"stable_graph","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4012},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3208,"byte_end":3217,"line_start":144,"line_end":144,"column_start":9,"column_end":18},"alias_span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3221,"byte_end":3234,"line_start":144,"line_end":144,"column_start":22,"column_end":35},"name":"EdgeDirection","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1,"byte_end":5007,"line_start":2,"line_end":227,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":28},{"krate":0,"index":713},{"krate":0,"index":859},{"krate":0,"index":1013},{"krate":0,"index":1358},{"krate":0,"index":2391},{"krate":0,"index":2464},{"krate":0,"index":2476},{"krate":0,"index":2495},{"krate":0,"index":2525},{"krate":0,"index":2778},{"krate":0,"index":2809},{"krate":0,"index":2819},{"krate":0,"index":2888},{"krate":0,"index":2918},{"krate":0,"index":2925},{"krate":0,"index":2952},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":4012},{"krate":0,"index":4034},{"krate":0,"index":4032},{"krate":0,"index":4029},{"krate":0,"index":4030},{"krate":0,"index":4027},{"krate":0,"index":4025},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4019},{"krate":0,"index":4035},{"krate":0,"index":2980},{"krate":0,"index":2983},{"krate":0,"index":4037},{"krate":0,"index":4040},{"krate":0,"index":4038},{"krate":0,"index":4041},{"krate":0,"index":4043},{"krate":0,"index":4046},{"krate":0,"index":4044},{"krate":0,"index":4047},{"krate":0,"index":2984},{"krate":0,"index":2986},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2994},{"krate":0,"index":2999},{"krate":0,"index":3004},{"krate":0,"index":3010},{"krate":0,"index":3016}],"decl_id":null,"docs":" **petgraph** is a graph data structure library.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visit","qualname":"::visit","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":38},{"krate":0,"index":75},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3174},{"krate":0,"index":3179},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":201},{"krate":0,"index":209},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3188},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":216},{"krate":0,"index":224},{"krate":0,"index":232},{"krate":0,"index":240},{"krate":0,"index":3197},{"krate":0,"index":3198},{"krate":0,"index":3201},{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3210},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3219},{"krate":0,"index":247},{"krate":0,"index":255},{"krate":0,"index":261},{"krate":0,"index":269},{"krate":0,"index":3224},{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3233},{"krate":0,"index":3238},{"krate":0,"index":275},{"krate":0,"index":283},{"krate":0,"index":294},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3248},{"krate":0,"index":299},{"krate":0,"index":306},{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3259},{"krate":0,"index":314},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3269},{"krate":0,"index":320},{"krate":0,"index":326},{"krate":0,"index":332},{"krate":0,"index":337},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3278},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3287},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":346},{"krate":0,"index":354},{"krate":0,"index":359},{"krate":0,"index":363},{"krate":0,"index":367},{"krate":0,"index":371},{"krate":0,"index":375},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3301},{"krate":0,"index":380},{"krate":0,"index":387},{"krate":0,"index":395},{"krate":0,"index":402},{"krate":0,"index":410},{"krate":0,"index":417},{"krate":0,"index":423},{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3312},{"krate":0,"index":430},{"krate":0,"index":437},{"krate":0,"index":653}],"decl_id":null,"docs":" Graph traits and graph traversals.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1167,"byte_end":1179,"line_start":43,"line_end":43,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":3039},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30047,"byte_end":30051,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Time","qualname":"::visit::dfsvisit::Time","value":"","parent":null,"children":[],"decl_id":null,"docs":" Strictly monotonically increasing event time for a depth first search.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3069},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30168,"byte_end":30176,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"Discover","qualname":"::visit::dfsvisit::DfsEvent::Discover","value":"DfsEvent::Discover(N, Time)","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3073},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30244,"byte_end":30252,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"TreeEdge","qualname":"::visit::dfsvisit::DfsEvent::TreeEdge","value":"DfsEvent::TreeEdge(N, N)","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":" An edge of the tree formed by the traversal.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30308,"byte_end":30316,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"BackEdge","qualname":"::visit::dfsvisit::DfsEvent::BackEdge","value":"DfsEvent::BackEdge(N, N)","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":" An edge to an already visited node.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30502,"byte_end":30518,"line_start":22,"line_end":22,"column_start":5,"column_end":21},"name":"CrossForwardEdge","qualname":"::visit::dfsvisit::DfsEvent::CrossForwardEdge","value":"DfsEvent::CrossForwardEdge(N, N)","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":" A cross or forward edge.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30530,"byte_end":30536,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Finish","qualname":"::visit::dfsvisit::DfsEvent::Finish","value":"DfsEvent::Finish(N, Time)","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3067},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30150,"byte_end":30158,"line_start":12,"line_end":12,"column_start":10,"column_end":18},"name":"DfsEvent","qualname":"::visit::dfsvisit::DfsEvent","value":"DfsEvent::{Discover, TreeEdge, BackEdge, CrossForwardEdge, Finish}","parent":null,"children":[{"krate":0,"index":3069},{"krate":0,"index":3073},{"krate":0,"index":3077},{"krate":0,"index":3081},{"krate":0,"index":3085}],"decl_id":null,"docs":" A depth first search (DFS) visitor event.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3099},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30883,"byte_end":30891,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Continue","qualname":"::visit::dfsvisit::Control::Continue","value":"Control::Continue","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3101},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30897,"byte_end":30902,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Break","qualname":"::visit::dfsvisit::Control::Break","value":"Control::Break(B)","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3097},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30866,"byte_end":30873,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"Control","qualname":"::visit::dfsvisit::Control","value":"Control::{Continue, Break}","parent":null,"children":[{"krate":0,"index":3099},{"krate":0,"index":3101}],"decl_id":null,"docs":" Control flow for callbacks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30942,"byte_end":30950,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"breaking","qualname":"<Control<B>>::breaking","value":"fn () -> Control<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31060,"byte_end":31071,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"break_value","qualname":"<Control<B>>::break_value","value":"fn (self) -> Option<B>","parent":null,"children":[],"decl_id":null,"docs":" Get the value in `Control::Break(_)`, if present.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31319,"byte_end":31330,"line_start":60,"line_end":60,"column_start":11,"column_end":22},"name":"ControlFlow","qualname":"::visit::dfsvisit::ControlFlow","value":"ControlFlow","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"decl_id":null,"docs":" Control flow for callbacks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31340,"byte_end":31350,"line_start":61,"line_end":61,"column_start":8,"column_end":18},"name":"continuing","qualname":"::visit::dfsvisit::ControlFlow::continuing","value":"fn () -> Self","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31369,"byte_end":31381,"line_start":62,"line_end":62,"column_start":8,"column_end":20},"name":"should_break","qualname":"::visit::dfsvisit::ControlFlow::should_break","value":"fn (&self) -> bool","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33780,"byte_end":33798,"line_start":148,"line_end":148,"column_start":8,"column_end":26},"name":"depth_first_search","qualname":"::visit::dfsvisit::depth_first_search","value":"fn <G, I, F, C> (graph: G, starts: I, mut visitor: F) -> C","parent":null,"children":[],"decl_id":null,"docs":" A recursive depth first search.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3112},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36542,"byte_end":36545,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"Dfs","qualname":"::visit::traversal::Dfs","value":"Dfs { stack, discovered }","parent":null,"children":[{"krate":0,"index":3115},{"krate":0,"index":3116}],"decl_id":null,"docs":" Visit nodes of a graph in a depth-first-search (DFS) emitting nodes in\n preorder (when they are first discovered).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36599,"byte_end":36604,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"name":"stack","qualname":"::visit::traversal::Dfs::stack","value":"std::vec::Vec<N>","parent":{"krate":0,"index":3112},"children":[],"decl_id":null,"docs":" The stack of nodes to visit\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3116},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36658,"byte_end":36668,"line_start":42,"line_end":42,"column_start":9,"column_end":19},"name":"discovered","qualname":"::visit::traversal::Dfs::discovered","value":"VM","parent":{"krate":0,"index":3112},"children":[],"decl_id":null,"docs":" The map of discovered nodes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36890,"byte_end":36893,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Dfs<N, VM>>::new","value":"fn <G> (graph: G, start: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Dfs**, using the graph's visitor map, and put **start**\n in the stack of nodes to visit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37139,"byte_end":37149,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Dfs<N, VM>>::from_parts","value":"fn (stack: Vec<N>, discovered: VM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dfs` from a vector and a visit map\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37325,"byte_end":37330,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"reset","qualname":"<Dfs<N, VM>>::reset","value":"fn <G> (&mut self, graph: G) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the visit state\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37584,"byte_end":37589,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"empty","qualname":"<Dfs<N, VM>>::empty","value":"fn <G> (graph: G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Dfs** using the graph's visitor map, and no stack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37900,"byte_end":37907,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"move_to","qualname":"<Dfs<N, VM>>::move_to","value":"fn (&mut self, start: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Keep the discovered map, but clear the visit stack and restart\n the dfs from a particular node.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38130,"byte_end":38134,"line_start":95,"line_end":95,"column_start":12,"column_end":16},"name":"next","qualname":"<Dfs<N, VM>>::next","value":"fn <G> (&mut self, graph: G) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the dfs, or **None** if the traversal is done.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38807,"byte_end":38819,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"DfsPostOrder","qualname":"::visit::traversal::DfsPostOrder","value":"DfsPostOrder { stack, discovered, finished }","parent":null,"children":[{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130}],"decl_id":null,"docs":" Visit nodes in a depth-first-search (DFS) emitting nodes in postorder\n (each node after all its descendants have been emitted).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38873,"byte_end":38878,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"stack","qualname":"::visit::traversal::DfsPostOrder::stack","value":"std::vec::Vec<N>","parent":{"krate":0,"index":3125},"children":[],"decl_id":null,"docs":" The stack of nodes to visit\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38932,"byte_end":38942,"line_start":123,"line_end":123,"column_start":9,"column_end":19},"name":"discovered","qualname":"::visit::traversal::DfsPostOrder::discovered","value":"VM","parent":{"krate":0,"index":3125},"children":[],"decl_id":null,"docs":" The map of discovered nodes\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38990,"byte_end":38998,"line_start":125,"line_end":125,"column_start":9,"column_end":17},"name":"finished","qualname":"::visit::traversal::DfsPostOrder::finished","value":"VM","parent":{"krate":0,"index":3125},"children":[],"decl_id":null,"docs":" The map of finished nodes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39233,"byte_end":39236,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"new","qualname":"<DfsPostOrder<N, VM>>::new","value":"fn <G> (graph: G, start: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DfsPostOrder` using the graph's visitor map, and put\n `start` in the stack of nodes to visit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39511,"byte_end":39516,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"empty","qualname":"<DfsPostOrder<N, VM>>::empty","value":"fn <G> (graph: G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DfsPostOrder` using the graph's visitor map, and no stack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39796,"byte_end":39801,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"reset","qualname":"<DfsPostOrder<N, VM>>::reset","value":"fn <G> (&mut self, graph: G) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the visit state\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":40150,"byte_end":40157,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"move_to","qualname":"<DfsPostOrder<N, VM>>::move_to","value":"fn (&mut self, start: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Keep the discovered and finished map, but clear the visit stack and restart\n the dfs from a particular node.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":40346,"byte_end":40350,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"next","qualname":"<DfsPostOrder<N, VM>>::next","value":"fn <G> (&mut self, graph: G) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the traversal, or `None` if the traversal is done.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41985,"byte_end":41988,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"Bfs","qualname":"::visit::traversal::Bfs","value":"Bfs { stack, discovered }","parent":null,"children":[{"krate":0,"index":3142},{"krate":0,"index":3143}],"decl_id":null,"docs":" A breadth first search (BFS) of a graph.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3142},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42042,"byte_end":42047,"line_start":226,"line_end":226,"column_start":9,"column_end":14},"name":"stack","qualname":"::visit::traversal::Bfs::stack","value":"std::collections::VecDeque<N>","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" The queue of nodes to visit\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3143},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42106,"byte_end":42116,"line_start":228,"line_end":228,"column_start":9,"column_end":19},"name":"discovered","qualname":"::visit::traversal::Bfs::discovered","value":"VM","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" The map of discovered nodes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42338,"byte_end":42341,"line_start":237,"line_end":237,"column_start":12,"column_end":15},"name":"new","qualname":"<Bfs<N, VM>>::new","value":"fn <G> (graph: G, start: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Bfs**, using the graph's visitor map, and put **start**\n in the stack of nodes to visit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42773,"byte_end":42777,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"next","qualname":"<Bfs<N, VM>>::next","value":"fn <G> (&mut self, graph: G) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the bfs, or **None** if the traversal is done.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3148},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43452,"byte_end":43456,"line_start":274,"line_end":274,"column_start":12,"column_end":16},"name":"Topo","qualname":"::visit::traversal::Topo","value":"Topo {  }","parent":null,"children":[{"krate":0,"index":3151},{"krate":0,"index":3152}],"decl_id":null,"docs":" A topological order traversal for a graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43718,"byte_end":43721,"line_start":285,"line_end":285,"column_start":12,"column_end":15},"name":"new","qualname":"<Topo<N, VM>>::new","value":"fn <G> (graph: G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Topo`, using the graph's visitor map, and put all\n initial nodes in the to visit list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":44723,"byte_end":44728,"line_start":314,"line_end":314,"column_start":12,"column_end":17},"name":"reset","qualname":"<Topo<N, VM>>::reset","value":"fn <G> (&mut self, graph: G) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear visited state, and put all initial nodes in the to visit list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":45284,"byte_end":45288,"line_start":327,"line_end":327,"column_start":12,"column_end":16},"name":"next","qualname":"<Topo<N, VM>>::next","value":"fn <G> (&mut self, g: G) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the current topological order traversal, or\n `None` if the traversal is at the end.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":135},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46328,"byte_end":46334,"line_start":355,"line_end":355,"column_start":11,"column_end":17},"name":"Walker","qualname":"::visit::traversal::Walker","value":"Walker<Context>","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"decl_id":null,"docs":" A walker is a traversal state, but where part of the traversal\n information is supplied manually to each next call.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":137},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46355,"byte_end":46359,"line_start":356,"line_end":356,"column_start":10,"column_end":14},"name":"Item","qualname":"::visit::traversal::Walker::Item","value":"type Item;","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46401,"byte_end":46410,"line_start":358,"line_end":358,"column_start":8,"column_end":17},"name":"walk_next","qualname":"::visit::traversal::Walker::walk_next","value":"fn (&mut self, context: Context) -> Option<Self::Item>","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":" Advance to the next item\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46537,"byte_end":46541,"line_start":361,"line_end":361,"column_start":8,"column_end":12},"name":"iter","qualname":"::visit::traversal::Walker::iter","value":"fn (self, context: Context) -> WalkerIter<Self, Context>","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":" Create an iterator out of the walker and given `context`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3157},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46844,"byte_end":46854,"line_start":374,"line_end":374,"column_start":12,"column_end":22},"name":"WalkerIter","qualname":"::visit::traversal::WalkerIter","value":"WalkerIter {  }","parent":null,"children":[{"krate":0,"index":3160},{"krate":0,"index":3161}],"decl_id":null,"docs":" A walker and its context wrapped into an iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46982,"byte_end":46989,"line_start":383,"line_end":383,"column_start":12,"column_end":19},"name":"context","qualname":"<WalkerIter<W, C>>::context","value":"fn (&self) -> C","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47051,"byte_end":47060,"line_start":387,"line_end":387,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<WalkerIter<W, C>>::inner_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47115,"byte_end":47124,"line_start":391,"line_end":391,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<WalkerIter<W, C>>::inner_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3171},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9130,"byte_end":9139,"line_start":85,"line_end":85,"column_start":11,"column_end":20},"name":"GraphBase","qualname":"::visit::GraphBase","value":"GraphBase","parent":null,"children":[{"krate":0,"index":3172},{"krate":0,"index":3173}],"decl_id":null,"docs":" Base graph trait: defines the associated node identifier and\n edge identifier types.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3172},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9319,"byte_end":9325,"line_start":91,"line_end":91,"column_start":10,"column_end":16},"name":"EdgeId","qualname":"::visit::GraphBase::EdgeId","value":"type EdgeId: Copy + PartialEq;","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" edge identifier\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3173},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9378,"byte_end":9384,"line_start":93,"line_end":93,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::visit::GraphBase::NodeId","value":"type NodeId: Copy + PartialEq;","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" node identifier\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":192},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9543,"byte_end":9551,"line_start":101,"line_end":101,"column_start":11,"column_end":19},"name":"GraphRef","qualname":"::visit::GraphRef","value":"GraphRef: Copy + GraphBase","parent":null,"children":[],"decl_id":null,"docs":" A copyable reference to a graph.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3185},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":10624,"byte_end":10637,"line_start":141,"line_end":141,"column_start":11,"column_end":24},"name":"IntoNeighbors","qualname":"::visit::IntoNeighbors","value":"IntoNeighbors: GraphRef","parent":null,"children":[{"krate":0,"index":3186},{"krate":0,"index":3187}],"decl_id":null,"docs":" Access to the neighbors of each node","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3186},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":10678,"byte_end":10687,"line_start":143,"line_end":143,"column_start":10,"column_end":19},"name":"Neighbors","qualname":"::visit::IntoNeighbors::Neighbors","value":"type Neighbors: Iterator<Item=Self::NodeId>;","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":10800,"byte_end":10809,"line_start":146,"line_end":146,"column_start":8,"column_end":17},"name":"neighbors","qualname":"::visit::IntoNeighbors::neighbors","value":"fn (self: Self, a: Self::NodeId) -> Self::Neighbors","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":" Return an iterator of the neighbors of node `a`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3194},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":11290,"byte_end":11311,"line_start":161,"line_end":161,"column_start":11,"column_end":32},"name":"IntoNeighborsDirected","qualname":"::visit::IntoNeighborsDirected","value":"IntoNeighborsDirected: IntoNeighbors","parent":null,"children":[{"krate":0,"index":3195},{"krate":0,"index":3196}],"decl_id":null,"docs":" Access to the neighbors of each node, through incoming or outgoing edges.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3195},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":11357,"byte_end":11374,"line_start":163,"line_end":163,"column_start":10,"column_end":27},"name":"NeighborsDirected","qualname":"::visit::IntoNeighborsDirected::NeighborsDirected","value":"type NeighborsDirected: Iterator<Item=Self::NodeId>;","parent":{"krate":0,"index":3194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":11430,"byte_end":11448,"line_start":165,"line_end":165,"column_start":8,"column_end":26},"name":"neighbors_directed","qualname":"::visit::IntoNeighborsDirected::neighbors_directed","value":"fn (self, n: Self::NodeId, d: Direction) -> Self::NeighborsDirected","parent":{"krate":0,"index":3194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3198},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13415,"byte_end":13424,"line_start":233,"line_end":233,"column_start":11,"column_end":20},"name":"IntoEdges","qualname":"::visit::IntoEdges","value":"IntoEdges: IntoEdgeReferences + IntoNeighbors","parent":null,"children":[{"krate":0,"index":3199},{"krate":0,"index":3200}],"decl_id":null,"docs":" Access to the edges of each node.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3199},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13491,"byte_end":13496,"line_start":235,"line_end":235,"column_start":10,"column_end":15},"name":"Edges","qualname":"::visit::IntoEdges::Edges","value":"type Edges: Iterator<Item=Self::EdgeRef>;","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3200},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13553,"byte_end":13558,"line_start":237,"line_end":237,"column_start":8,"column_end":13},"name":"edges","qualname":"::visit::IntoEdges::edges","value":"fn (self, a: Self::NodeId) -> Self::Edges","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3207},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14199,"byte_end":14216,"line_start":258,"line_end":258,"column_start":11,"column_end":28},"name":"IntoEdgesDirected","qualname":"::visit::IntoEdgesDirected","value":"IntoEdgesDirected: IntoEdges + IntoNeighborsDirected","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3209}],"decl_id":null,"docs":" Access to all edges of each node, in the specified direction.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3208},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14282,"byte_end":14295,"line_start":260,"line_end":260,"column_start":10,"column_end":23},"name":"EdgesDirected","qualname":"::visit::IntoEdgesDirected::EdgesDirected","value":"type EdgesDirected: Iterator<Item=Self::EdgeRef>;","parent":{"krate":0,"index":3207},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14352,"byte_end":14366,"line_start":262,"line_end":262,"column_start":8,"column_end":22},"name":"edges_directed","qualname":"::visit::IntoEdgesDirected::edges_directed","value":"fn (self, a: Self::NodeId, dir: Direction) -> Self::EdgesDirected","parent":{"krate":0,"index":3207},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3216},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14556,"byte_end":14575,"line_start":270,"line_end":270,"column_start":11,"column_end":30},"name":"IntoNodeIdentifiers","qualname":"::visit::IntoNodeIdentifiers","value":"IntoNodeIdentifiers: GraphRef","parent":null,"children":[{"krate":0,"index":3217},{"krate":0,"index":3218}],"decl_id":null,"docs":" Access to the sequence of the graph’s `NodeId`s.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3217},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14616,"byte_end":14631,"line_start":272,"line_end":272,"column_start":10,"column_end":25},"name":"NodeIdentifiers","qualname":"::visit::IntoNodeIdentifiers::NodeIdentifiers","value":"type NodeIdentifiers: Iterator<Item=Self::NodeId>;","parent":{"krate":0,"index":3216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14687,"byte_end":14703,"line_start":274,"line_end":274,"column_start":8,"column_end":24},"name":"node_identifiers","qualname":"::visit::IntoNodeIdentifiers::node_identifiers","value":"fn (self) -> Self::NodeIdentifiers","parent":{"krate":0,"index":3216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3230},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15901,"byte_end":15905,"line_start":324,"line_end":324,"column_start":11,"column_end":15},"name":"Data","qualname":"::visit::Data","value":"Data: GraphBase","parent":null,"children":[{"krate":0,"index":3231},{"krate":0,"index":3232}],"decl_id":null,"docs":" Define associated data for nodes and edges\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3231},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15947,"byte_end":15957,"line_start":326,"line_end":326,"column_start":10,"column_end":20},"name":"NodeWeight","qualname":"::visit::Data::NodeWeight","value":"type NodeWeight;","parent":{"krate":0,"index":3230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3232},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15968,"byte_end":15978,"line_start":327,"line_end":327,"column_start":10,"column_end":20},"name":"EdgeWeight","qualname":"::visit::Data::EdgeWeight","value":"type EdgeWeight;","parent":{"krate":0,"index":3230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":275},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16176,"byte_end":16183,"line_start":337,"line_end":337,"column_start":11,"column_end":18},"name":"EdgeRef","qualname":"::visit::EdgeRef","value":"EdgeRef: Copy","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"decl_id":null,"docs":" An edge reference.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":276},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16202,"byte_end":16208,"line_start":338,"line_end":338,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::visit::EdgeRef::NodeId","value":"type NodeId;","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":277},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16219,"byte_end":16225,"line_start":339,"line_end":339,"column_start":10,"column_end":16},"name":"EdgeId","qualname":"::visit::EdgeRef::EdgeId","value":"type EdgeId;","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":278},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16236,"byte_end":16242,"line_start":340,"line_end":340,"column_start":10,"column_end":16},"name":"Weight","qualname":"::visit::EdgeRef::Weight","value":"type Weight;","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16288,"byte_end":16294,"line_start":342,"line_end":342,"column_start":8,"column_end":14},"name":"source","qualname":"::visit::EdgeRef::source","value":"fn (&self) -> Self::NodeId","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" The source node of the edge.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16363,"byte_end":16369,"line_start":344,"line_end":344,"column_start":8,"column_end":14},"name":"target","qualname":"::visit::EdgeRef::target","value":"fn (&self) -> Self::NodeId","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" The target node of the edge.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16448,"byte_end":16454,"line_start":346,"line_end":346,"column_start":8,"column_end":14},"name":"weight","qualname":"::visit::EdgeRef::weight","value":"fn (&self) -> &Self::Weight","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" A reference to the weight of the edge.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16520,"byte_end":16522,"line_start":348,"line_end":348,"column_start":8,"column_end":10},"name":"id","qualname":"::visit::EdgeRef::id","value":"fn (&self) -> Self::EdgeId","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" The edge’s identifier.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":294},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16875,"byte_end":16882,"line_start":365,"line_end":365,"column_start":11,"column_end":18},"name":"NodeRef","qualname":"::visit::NodeRef","value":"NodeRef: Copy","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"decl_id":null,"docs":" A node reference.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":295},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16901,"byte_end":16907,"line_start":366,"line_end":366,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::visit::NodeRef::NodeId","value":"type NodeId;","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":296},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16918,"byte_end":16924,"line_start":367,"line_end":367,"column_start":10,"column_end":16},"name":"Weight","qualname":"::visit::NodeRef::Weight","value":"type Weight;","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16933,"byte_end":16935,"line_start":368,"line_end":368,"column_start":8,"column_end":10},"name":"id","qualname":"::visit::NodeRef::id","value":"fn (&self) -> Self::NodeId","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16967,"byte_end":16973,"line_start":369,"line_end":369,"column_start":8,"column_end":14},"name":"weight","qualname":"::visit::NodeRef::weight","value":"fn (&self) -> &Self::Weight","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3244},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17080,"byte_end":17098,"line_start":374,"line_end":374,"column_start":11,"column_end":29},"name":"IntoNodeReferences","qualname":"::visit::IntoNodeReferences","value":"IntoNodeReferences: Data + IntoNodeIdentifiers","parent":null,"children":[{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247}],"decl_id":null,"docs":" Access to the sequence of the graph’s nodes\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3245},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17157,"byte_end":17164,"line_start":376,"line_end":376,"column_start":10,"column_end":17},"name":"NodeRef","qualname":"::visit::IntoNodeReferences::NodeRef","value":"type NodeRef: NodeRef<NodeId=Self::NodeId, Weight=Self::NodeWeight>;","parent":{"krate":0,"index":3244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3246},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17230,"byte_end":17244,"line_start":377,"line_end":377,"column_start":10,"column_end":24},"name":"NodeReferences","qualname":"::visit::IntoNodeReferences::NodeReferences","value":"type NodeReferences: Iterator<Item=Self::NodeRef>;","parent":{"krate":0,"index":3244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17301,"byte_end":17316,"line_start":379,"line_end":379,"column_start":8,"column_end":23},"name":"node_references","qualname":"::visit::IntoNodeReferences::node_references","value":"fn (self) -> Self::NodeReferences","parent":{"krate":0,"index":3244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3255},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17907,"byte_end":17925,"line_start":409,"line_end":409,"column_start":11,"column_end":29},"name":"IntoEdgeReferences","qualname":"::visit::IntoEdgeReferences","value":"IntoEdgeReferences: Data + GraphRef","parent":null,"children":[{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3258}],"decl_id":null,"docs":" Access to the sequence of the graph’s edges\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3256},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17973,"byte_end":17980,"line_start":411,"line_end":411,"column_start":10,"column_end":17},"name":"EdgeRef","qualname":"::visit::IntoEdgeReferences::EdgeRef","value":"type EdgeRef: EdgeRef<NodeId=Self::NodeId, EdgeId=Self::EdgeId,\n                          Weight=Self::EdgeWeight>;","parent":{"krate":0,"index":3255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3257},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18093,"byte_end":18107,"line_start":413,"line_end":413,"column_start":10,"column_end":24},"name":"EdgeReferences","qualname":"::visit::IntoEdgeReferences::EdgeReferences","value":"type EdgeReferences: Iterator<Item=Self::EdgeRef>;","parent":{"krate":0,"index":3255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18164,"byte_end":18179,"line_start":415,"line_end":415,"column_start":8,"column_end":23},"name":"edge_references","qualname":"::visit::IntoEdgeReferences::edge_references","value":"fn (self) -> Self::EdgeReferences","parent":{"krate":0,"index":3255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3266},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18524,"byte_end":18533,"line_start":432,"line_end":432,"column_start":11,"column_end":20},"name":"GraphProp","qualname":"::visit::GraphProp","value":"GraphProp: GraphBase","parent":null,"children":[{"krate":0,"index":3267},{"krate":0,"index":3268}],"decl_id":null,"docs":" Edge kind property (directed or undirected edges)\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3267},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18612,"byte_end":18620,"line_start":435,"line_end":435,"column_start":10,"column_end":18},"name":"EdgeType","qualname":"::visit::GraphProp::EdgeType","value":"type EdgeType: EdgeType;","parent":{"krate":0,"index":3266},"children":[],"decl_id":null,"docs":" The kind edges in the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18664,"byte_end":18675,"line_start":438,"line_end":438,"column_start":8,"column_end":19},"name":"is_directed","qualname":"::visit::GraphProp::is_directed","value":"fn (&self) -> bool","parent":{"krate":0,"index":3266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3274},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19648,"byte_end":19661,"line_start":484,"line_end":484,"column_start":15,"column_end":28},"name":"NodeIndexable","qualname":"::visit::NodeIndexable","value":"NodeIndexable: GraphBase","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3277}],"decl_id":null,"docs":" The graph’s `NodeId`s map to indices\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19825,"byte_end":19835,"line_start":488,"line_end":488,"column_start":12,"column_end":22},"name":"node_bound","qualname":"::visit::NodeIndexable::node_bound","value":"fn (self: &Self) -> usize","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Return an upper bound of the node indices in the graph\n (suitable for the size of a bitmap).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19915,"byte_end":19923,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"to_index","qualname":"::visit::NodeIndexable::to_index","value":"fn (self: &Self, a: Self::NodeId) -> usize","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Convert `a` to an integer index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20015,"byte_end":20025,"line_start":492,"line_end":492,"column_start":12,"column_end":22},"name":"from_index","qualname":"::visit::NodeIndexable::from_index","value":"fn (self: &Self, i: usize) -> Self::NodeId","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Convert `i` to a node index\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3285},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20174,"byte_end":20183,"line_start":500,"line_end":500,"column_start":11,"column_end":20},"name":"NodeCount","qualname":"::visit::NodeCount","value":"NodeCount: GraphBase","parent":null,"children":[{"krate":0,"index":3286}],"decl_id":null,"docs":" A graph with a known node count.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20223,"byte_end":20233,"line_start":502,"line_end":502,"column_start":8,"column_end":18},"name":"node_count","qualname":"::visit::NodeCount::node_count","value":"fn (self: &Self) -> usize","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3292},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20489,"byte_end":20509,"line_start":513,"line_end":513,"column_start":11,"column_end":31},"name":"NodeCompactIndexable","qualname":"::visit::NodeCompactIndexable","value":"NodeCompactIndexable: NodeIndexable + NodeCount","parent":null,"children":[],"decl_id":null,"docs":" The graph’s `NodeId`s map to indices, in a range without holes.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":359},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21083,"byte_end":21091,"line_start":533,"line_end":533,"column_start":11,"column_end":19},"name":"VisitMap","qualname":"::visit::VisitMap","value":"VisitMap<N>","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"decl_id":null,"docs":" A mapping for storing the visited status for NodeId `N`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21210,"byte_end":21215,"line_start":537,"line_end":537,"column_start":8,"column_end":13},"name":"visit","qualname":"::visit::VisitMap::visit","value":"fn (&mut self, a: N) -> bool","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Mark `a` as visited.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21302,"byte_end":21312,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"is_visited","qualname":"::visit::VisitMap::is_visited","value":"fn (&self, a: &N) -> bool","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Return whether `a` has been visited before.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3297},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22469,"byte_end":22478,"line_start":590,"line_end":590,"column_start":11,"column_end":20},"name":"Visitable","qualname":"::visit::Visitable","value":"Visitable: GraphBase","parent":null,"children":[{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3300}],"decl_id":null,"docs":" A graph that can create a map that tracks the visited status of its nodes.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3298},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22552,"byte_end":22555,"line_start":593,"line_end":593,"column_start":10,"column_end":13},"name":"Map","qualname":"::visit::Visitable::Map","value":"type Map: VisitMap<Self::NodeId>;","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" The associated map type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22639,"byte_end":22648,"line_start":596,"line_end":596,"column_start":8,"column_end":17},"name":"visit_map","qualname":"::visit::Visitable::visit_map","value":"fn (self: &Self) -> Self::Map","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" Create a new visitor map\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3300},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22757,"byte_end":22766,"line_start":598,"line_end":598,"column_start":8,"column_end":17},"name":"reset_map","qualname":"::visit::Visitable::reset_map","value":"fn (self: &Self, map: &mut Self::Map) -> ()","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" Reset the visitor map (and resize to new size of graph if needed)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3308},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24832,"byte_end":24850,"line_start":681,"line_end":681,"column_start":11,"column_end":29},"name":"GetAdjacencyMatrix","qualname":"::visit::GetAdjacencyMatrix","value":"GetAdjacencyMatrix: GraphBase","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3311}],"decl_id":null,"docs":" Create or access the adjacency matrix of a graph.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3309},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24937,"byte_end":24946,"line_start":684,"line_end":684,"column_start":10,"column_end":19},"name":"AdjMatrix","qualname":"::visit::GetAdjacencyMatrix::AdjMatrix","value":"type AdjMatrix;","parent":{"krate":0,"index":3308},"children":[],"decl_id":null,"docs":" The associated adjacency matrix type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3310},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":25009,"byte_end":25025,"line_start":687,"line_end":687,"column_start":8,"column_end":24},"name":"adjacency_matrix","qualname":"::visit::GetAdjacencyMatrix::adjacency_matrix","value":"fn (self: &Self) -> Self::AdjMatrix","parent":{"krate":0,"index":3308},"children":[],"decl_id":null,"docs":" Create the adjacency matrix\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":25179,"byte_end":25190,"line_start":691,"line_end":691,"column_start":8,"column_end":19},"name":"is_adjacent","qualname":"::visit::GetAdjacencyMatrix::is_adjacent","value":"fn (self: &Self, matrix: &Self::AdjMatrix, a: Self::NodeId, b: Self::NodeId) -> bool","parent":{"krate":0,"index":3308},"children":[],"decl_id":null,"docs":" Return true if there is an edge from `a` to `b`, false otherwise.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":461},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48738,"byte_end":48748,"line_start":26,"line_end":26,"column_start":11,"column_end":21},"name":"FilterNode","qualname":"::visit::filter::FilterNode","value":"FilterNode<N>","parent":null,"children":[{"krate":0,"index":463}],"decl_id":null,"docs":" A graph filter for nodes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48819,"byte_end":48831,"line_start":29,"line_end":29,"column_start":8,"column_end":20},"name":"include_node","qualname":"::visit::filter::FilterNode::include_node","value":"fn (&self, node: N) -> bool","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" Return true to have the node be part of the graph\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3318},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49520,"byte_end":49532,"line_start":60,"line_end":60,"column_start":12,"column_end":24},"name":"NodeFiltered","qualname":"::visit::filter::NodeFiltered","value":"","parent":null,"children":[],"decl_id":null,"docs":" A node-filtering graph adaptor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49726,"byte_end":49733,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<NodeFiltered<G, F>>::from_fn","value":"fn (graph: G, filter: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `NodeFiltered` adaptor from the closure `filter`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":490},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":50393,"byte_end":50414,"line_start":92,"line_end":92,"column_start":12,"column_end":33},"name":"NodeFilteredNeighbors","qualname":"::visit::filter::NodeFilteredNeighbors","value":"NodeFilteredNeighbors {  }","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496}],"decl_id":null,"docs":" A filtered neighbors iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":523},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":52290,"byte_end":52307,"line_start":160,"line_end":160,"column_start":12,"column_end":29},"name":"NodeFilteredNodes","qualname":"::visit::filter::NodeFilteredNodes","value":"NodeFilteredNodes {  }","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":" A filtered node references iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":544},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":53304,"byte_end":53330,"line_start":199,"line_end":199,"column_start":12,"column_end":38},"name":"NodeFilteredEdgeReferences","qualname":"::visit::filter::NodeFilteredEdgeReferences","value":"NodeFilteredEdgeReferences {  }","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" A filtered edges iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":566},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54283,"byte_end":54300,"line_start":236,"line_end":236,"column_start":12,"column_end":29},"name":"NodeFilteredEdges","qualname":"::visit::filter::NodeFilteredEdges","value":"NodeFilteredEdges {  }","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574}],"decl_id":null,"docs":" A filtered edges iterator.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":589},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55598,"byte_end":55608,"line_start":288,"line_end":288,"column_start":11,"column_end":21},"name":"FilterEdge","qualname":"::visit::filter::FilterEdge","value":"FilterEdge<Edge>","parent":null,"children":[{"krate":0,"index":591}],"decl_id":null,"docs":" A graph filter for edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55682,"byte_end":55694,"line_start":290,"line_end":290,"column_start":8,"column_end":20},"name":"include_edge","qualname":"::visit::filter::FilterEdge::include_edge","value":"fn (&self, edge: Edge) -> bool","parent":{"krate":0,"index":589},"children":[],"decl_id":null,"docs":" Return true to have the edge be part of the graph\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3356},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56217,"byte_end":56229,"line_start":310,"line_end":310,"column_start":12,"column_end":24},"name":"EdgeFiltered","qualname":"::visit::filter::EdgeFiltered","value":"","parent":null,"children":[],"decl_id":null,"docs":" An edge-filtering graph adaptor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56433,"byte_end":56440,"line_start":317,"line_end":317,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<EdgeFiltered<G, F>>::from_fn","value":"fn (graph: G, filter: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EdgeFiltered` adaptor from the closure `filter`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":611},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":57030,"byte_end":57051,"line_start":341,"line_end":341,"column_start":12,"column_end":33},"name":"EdgeFilteredNeighbors","qualname":"::visit::filter::EdgeFilteredNeighbors","value":"EdgeFilteredNeighbors {  }","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"decl_id":null,"docs":" A filtered neighbors iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":637},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":58370,"byte_end":58387,"line_start":393,"line_end":393,"column_start":12,"column_end":29},"name":"EdgeFilteredEdges","qualname":"::visit::filter::EdgeFilteredEdges","value":"EdgeFilteredEdges {  }","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644}],"decl_id":null,"docs":" A filtered edges iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3414},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":59844,"byte_end":59852,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"Reversed","qualname":"::visit::reversed::Reversed","value":"","parent":null,"children":[],"decl_id":null,"docs":" An edge-reversing graph adaptor.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3430},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60905,"byte_end":60926,"line_start":74,"line_end":74,"column_start":12,"column_end":33},"name":"ReversedEdgeReference","qualname":"::visit::reversed::ReversedEdgeReference","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reversed edge reference\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61788,"byte_end":61810,"line_start":110,"line_end":110,"column_start":12,"column_end":34},"name":"ReversedEdgeReferences","qualname":"::visit::reversed::ReversedEdgeReferences","value":"ReversedEdgeReferences {  }","parent":null,"children":[{"krate":0,"index":707}],"decl_id":null,"docs":" A reversed edge references iterator.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":713},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"data","qualname":"::data","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":727},{"krate":0,"index":3468},{"krate":0,"index":3473},{"krate":0,"index":3478},{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3486},{"krate":0,"index":3491},{"krate":0,"index":728},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":741},{"krate":0,"index":748},{"krate":0,"index":755},{"krate":0,"index":762},{"krate":0,"index":769},{"krate":0,"index":777},{"krate":0,"index":785},{"krate":0,"index":792},{"krate":0,"index":798},{"krate":0,"index":804},{"krate":0,"index":3495},{"krate":0,"index":3523},{"krate":0,"index":3519},{"krate":0,"index":3511},{"krate":0,"index":3514},{"krate":0,"index":3504},{"krate":0,"index":3507},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":816},{"krate":0,"index":823},{"krate":0,"index":830},{"krate":0,"index":836},{"krate":0,"index":841},{"krate":0,"index":845},{"krate":0,"index":852}],"decl_id":null,"docs":" Graph traits for associated data and graph construction.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1195,"byte_end":1207,"line_start":45,"line_end":45,"column_start":1,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":3465},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":62926,"byte_end":62933,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"name":"DataMap","qualname":"::data::DataMap","value":"DataMap: Data","parent":null,"children":[{"krate":0,"index":3466},{"krate":0,"index":3467}],"decl_id":null,"docs":" Access node and edge weights (associated data).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":62968,"byte_end":62979,"line_start":24,"line_end":24,"column_start":8,"column_end":19},"name":"node_weight","qualname":"::data::DataMap::node_weight","value":"fn (self: &Self, id: Self::NodeId) -> Option<&Self::NodeWeight>","parent":{"krate":0,"index":3465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63048,"byte_end":63059,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"edge_weight","qualname":"::data::DataMap::edge_weight","value":"fn (self: &Self, id: Self::EdgeId) -> Option<&Self::EdgeWeight>","parent":{"krate":0,"index":3465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3483},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63395,"byte_end":63405,"line_start":39,"line_end":39,"column_start":11,"column_end":21},"name":"DataMapMut","qualname":"::data::DataMapMut","value":"DataMapMut: DataMap","parent":null,"children":[{"krate":0,"index":3484},{"krate":0,"index":3485}],"decl_id":null,"docs":" Access node and edge weights mutably.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63443,"byte_end":63458,"line_start":41,"line_end":41,"column_start":8,"column_end":23},"name":"node_weight_mut","qualname":"::data::DataMapMut::node_weight_mut","value":"fn (self: &mut Self, id: Self::NodeId) -> Option<&mut Self::NodeWeight>","parent":{"krate":0,"index":3483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63535,"byte_end":63550,"line_start":42,"line_end":42,"column_start":8,"column_end":23},"name":"edge_weight_mut","qualname":"::data::DataMapMut::edge_weight_mut","value":"fn (self: &mut Self, id: Self::EdgeId) -> Option<&mut Self::EdgeWeight>","parent":{"krate":0,"index":3483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":728},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63820,"byte_end":63825,"line_start":50,"line_end":50,"column_start":11,"column_end":16},"name":"Build","qualname":"::data::Build","value":"Build: Data + NodeCount","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731}],"decl_id":null,"docs":" A graph that can be extended with further nodes and edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63854,"byte_end":63862,"line_start":51,"line_end":51,"column_start":8,"column_end":16},"name":"add_node","qualname":"::data::Build::add_node","value":"fn (&mut self, weight: Self::NodeWeight) -> Self::NodeId","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64046,"byte_end":64054,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"add_edge","qualname":"::data::Build::add_edge","value":"fn (&mut self, a: Self::NodeId, b: Self::NodeId, weight: Self::EdgeWeight) -> Option<Self::EdgeId>","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Add a new edge. If parallel edges (duplicate) are not allowed and\n the edge already exists, return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64350,"byte_end":64361,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"update_edge","qualname":"::data::Build::update_edge","value":"fn (&mut self, a: Self::NodeId, b: Self::NodeId, weight: Self::EdgeWeight) -> Self::EdgeId","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Add or update the edge from `a` to `b`. Return the id of the affected\n edge.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":732},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64552,"byte_end":64558,"line_start":69,"line_end":69,"column_start":11,"column_end":17},"name":"Create","qualname":"::data::Create","value":"Create: Build + Default","parent":null,"children":[{"krate":0,"index":733}],"decl_id":null,"docs":" A graph that can be created\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64586,"byte_end":64599,"line_start":70,"line_end":70,"column_start":8,"column_end":21},"name":"with_capacity","qualname":"::data::Create::with_capacity","value":"fn (nodes: usize, edges: usize) -> Self","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3498},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69383,"byte_end":69387,"line_start":246,"line_end":246,"column_start":5,"column_end":9},"name":"Node","qualname":"::data::Element::Node","value":"Element::Node { weight }","parent":{"krate":0,"index":3495},"children":[],"decl_id":null,"docs":" A graph node.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3500},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69442,"byte_end":69446,"line_start":250,"line_end":250,"column_start":5,"column_end":9},"name":"Edge","qualname":"::data::Element::Edge","value":"Element::Edge { source, target, weight }","parent":{"krate":0,"index":3495},"children":[],"decl_id":null,"docs":" A graph edge.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3495},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69341,"byte_end":69348,"line_start":244,"line_end":244,"column_start":10,"column_end":17},"name":"Element","qualname":"::data::Element","value":"Element::{Node, Edge}","parent":null,"children":[{"krate":0,"index":3498},{"krate":0,"index":3500}],"decl_id":null,"docs":" A graph element.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":809},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69582,"byte_end":69594,"line_start":258,"line_end":258,"column_start":11,"column_end":23},"name":"FromElements","qualname":"::data::FromElements","value":"FromElements: Create","parent":null,"children":[{"krate":0,"index":810}],"decl_id":null,"docs":" Create a graph from an iterator of elements.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69613,"byte_end":69626,"line_start":259,"line_end":259,"column_start":8,"column_end":21},"name":"from_elements","qualname":"::data::FromElements::from_elements","value":"fn <I> (iterable: I) -> Self","parent":{"krate":0,"index":809},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":836},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71954,"byte_end":71969,"line_start":341,"line_end":341,"column_start":11,"column_end":26},"name":"ElementIterator","qualname":"::data::ElementIterator","value":"ElementIterator<N, E>: Iterator<Item = Element<N, E>>","parent":null,"children":[{"krate":0,"index":839}],"decl_id":null,"docs":" Iterator adaptors for iterators of `Element`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72520,"byte_end":72535,"line_start":351,"line_end":351,"column_start":8,"column_end":23},"name":"filter_elements","qualname":"::data::ElementIterator::filter_elements","value":"fn <F> (self, f: F) -> FilterElements<Self, F>","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":" Create an iterator adaptor that filters graph elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":845},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":73086,"byte_end":73100,"line_start":372,"line_end":372,"column_start":12,"column_end":26},"name":"FilterElements","qualname":"::data::FilterElements","value":"FilterElements {  }","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851}],"decl_id":null,"docs":" An iterator that filters graph elements.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":859},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"algo","qualname":"::algo","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":949},{"krate":0,"index":3538},{"krate":0,"index":3546},{"krate":0,"index":3542},{"krate":0,"index":951},{"krate":0,"index":956},{"krate":0,"index":960},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":976},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":989},{"krate":0,"index":3570},{"krate":0,"index":3583},{"krate":0,"index":3580},{"krate":0,"index":3574},{"krate":0,"index":3576},{"krate":0,"index":993},{"krate":0,"index":3586},{"krate":0,"index":3595},{"krate":0,"index":3593},{"krate":0,"index":3589},{"krate":0,"index":3590},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010}],"decl_id":null,"docs":" Graph algorithms.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":860},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dominators","qualname":"::algo::dominators","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":3527},{"krate":0,"index":3534},{"krate":0,"index":3531},{"krate":0,"index":871},{"krate":0,"index":877},{"krate":0,"index":882},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":900}],"decl_id":null,"docs":" Compute dominators of a control-flow graph.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3527},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95035,"byte_end":95045,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"Dominators","qualname":"::algo::dominators::Dominators","value":"Dominators {  }","parent":null,"children":[{"krate":0,"index":3529},{"krate":0,"index":3530}],"decl_id":null,"docs":" The dominance relation for some graph and root.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95264,"byte_end":95268,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"root","qualname":"<Dominators<N>>::root","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Get the root node used to construct these dominance relations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95488,"byte_end":95507,"line_start":41,"line_end":41,"column_start":12,"column_end":31},"name":"immediate_dominator","qualname":"<Dominators<N>>::immediate_dominator","value":"fn (&self, node: N) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Get the immediate dominator of the given node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95841,"byte_end":95858,"line_start":53,"line_end":53,"column_start":12,"column_end":29},"name":"strict_dominators","qualname":"<Dominators<N>>::strict_dominators","value":"fn (&self, node: N) -> Option<DominatorsIter<N>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the given node's that strict dominators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96352,"byte_end":96362,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"dominators","qualname":"<Dominators<N>>::dominators","value":"fn (&self, node: N) -> Option<DominatorsIter<N>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all of the given node's dominators (including the given\n node itself).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":877},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96678,"byte_end":96692,"line_start":82,"line_end":82,"column_start":12,"column_end":26},"name":"DominatorsIter","qualname":"::algo::dominators::DominatorsIter","value":"DominatorsIter {  }","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881}],"decl_id":null,"docs":" Iterator for a node's dominators.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":888},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":97718,"byte_end":97729,"line_start":116,"line_end":116,"column_start":8,"column_end":19},"name":"simple_fast","qualname":"::algo::dominators::simple_fast","value":"fn <G> (graph: G, root: G::NodeId) -> Dominators<G::NodeId>","parent":null,"children":[],"decl_id":null,"docs":" This is an implementation of the engineered [\"Simple, Fast Dominance\n Algorithm\"][0] discovered by Cooper et al.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":936},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76340,"byte_end":76360,"line_start":52,"line_end":52,"column_start":8,"column_end":28},"name":"connected_components","qualname":"::algo::connected_components","value":"fn <G> (g: G) -> usize","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Return the number of connected components of the graph.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":938},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76934,"byte_end":76954,"line_start":72,"line_end":72,"column_start":8,"column_end":28},"name":"is_cyclic_undirected","qualname":"::algo::is_cyclic_undirected","value":"fn <G> (g: G) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Return `true` if the input graph contains a cycle.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":940},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77918,"byte_end":77926,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"toposort","qualname":"::algo::toposort","value":"fn <G> (g: G, space: Option<&mut DfsSpace<G::NodeId, G::Map>>) -> Result<Vec<G::NodeId>, Cycle<G::NodeId>>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Perform a topological sort of a directed graph.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":943},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":79838,"byte_end":79856,"line_start":158,"line_end":158,"column_start":8,"column_end":26},"name":"is_cyclic_directed","qualname":"::algo::is_cyclic_directed","value":"fn <G> (g: G) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Return `true` if the input directed graph contains a cycle.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3538},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80324,"byte_end":80332,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"DfsSpace","qualname":"::algo::DfsSpace","value":"DfsSpace {  }","parent":null,"children":[{"krate":0,"index":3541}],"decl_id":null,"docs":" Workspace for a graph traversal.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80465,"byte_end":80468,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"new","qualname":"<DfsSpace<N, VM>>::new","value":"fn <G> (g: G) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":964},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":81513,"byte_end":81532,"line_start":224,"line_end":224,"column_start":8,"column_end":27},"name":"has_path_connecting","qualname":"::algo::has_path_connecting","value":"fn <G> (g: G, from: G::NodeId, to: G::NodeId, space: Option<&mut DfsSpace<G::NodeId, G::Map>>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Check if there exists a path starting at `from` and reaching `to`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":967},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82017,"byte_end":82020,"line_start":243,"line_end":243,"column_start":8,"column_end":11},"name":"scc","qualname":"::algo::scc","value":"fn <G> (g: G) -> Vec<Vec<G::NodeId>>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to `kosaraju_scc`.\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to kosaraju_scc\")","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":81962,"byte_end":82009,"line_start":242,"line_end":242,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":969},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82685,"byte_end":82697,"line_start":260,"line_end":260,"column_start":8,"column_end":20},"name":"kosaraju_scc","qualname":"::algo::kosaraju_scc","value":"fn <G> (g: G) -> Vec<Vec<G::NodeId>>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Compute the *strongly connected components* using [Kosaraju's algorithm][1].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":971},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":84331,"byte_end":84341,"line_start":311,"line_end":311,"column_start":8,"column_end":18},"name":"tarjan_scc","qualname":"::algo::tarjan_scc","value":"fn <G> (g: G) -> Vec<Vec<G::NodeId>>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Compute the *strongly connected components* using [Tarjan's algorithm][1].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":976},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":87071,"byte_end":87083,"line_start":405,"line_end":405,"column_start":8,"column_end":20},"name":"condensation","qualname":"::algo::condensation","value":"fn <N, E, Ty, Ix> (g: Graph<N, E, Ty, Ix>, make_acyclic: bool) -> Graph<Vec<N>, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" [Graph] Condense every strongly connected component into a single node and return the result.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":981},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88831,"byte_end":88848,"line_start":452,"line_end":452,"column_start":8,"column_end":25},"name":"min_spanning_tree","qualname":"::algo::min_spanning_tree","value":"fn <G> (g: G) -> MinSpanningTree<G>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Compute a *minimum spanning tree* of a graph.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":983},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":89687,"byte_end":89702,"line_start":478,"line_end":478,"column_start":12,"column_end":27},"name":"MinSpanningTree","qualname":"::algo::MinSpanningTree","value":"MinSpanningTree {  }","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988}],"decl_id":null,"docs":" An iterator producing a minimum spanning forest of a graph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91324,"byte_end":91329,"line_start":529,"line_end":529,"column_start":12,"column_end":17},"name":"Cycle","qualname":"::algo::Cycle","value":"","parent":null,"children":[],"decl_id":null,"docs":" An algorithm error: a cycle was found in the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91424,"byte_end":91431,"line_start":533,"line_end":533,"column_start":12,"column_end":19},"name":"node_id","qualname":"<Cycle<N>>::node_id","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Return a node id that participates in the cycle\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3586},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91617,"byte_end":91630,"line_start":541,"line_end":541,"column_start":12,"column_end":25},"name":"NegativeCycle","qualname":"::algo::NegativeCycle","value":"","parent":null,"children":[],"decl_id":null,"docs":" An algorithm error: a cycle of negative weights was found in the graph.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":996},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":92173,"byte_end":92185,"line_start":554,"line_end":554,"column_start":8,"column_end":20},"name":"bellman_ford","qualname":"::algo::bellman_ford","value":"fn <G> (g: G, source: G::NodeId) -> Result<(Vec<G::EdgeWeight>, Vec<Option<G::NodeId>>), NegativeCycle>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Compute shortest paths from node `source` to all other.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93752,"byte_end":93759,"line_start":604,"line_end":604,"column_start":11,"column_end":18},"name":"Measure","qualname":"::algo::Measure","value":"Measure: Debug + PartialOrd + Add<Self, Output = Self> + Default + Clone","parent":null,"children":[],"decl_id":null,"docs":" Associated data that can be used for measures (such as length).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93966,"byte_end":93978,"line_start":612,"line_end":612,"column_start":11,"column_end":23},"name":"FloatMeasure","qualname":"::algo::FloatMeasure","value":"FloatMeasure: Measure + Copy","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006}],"decl_id":null,"docs":" A floating-point measure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":94005,"byte_end":94009,"line_start":613,"line_end":613,"column_start":8,"column_end":12},"name":"zero","qualname":"::algo::FloatMeasure::zero","value":"fn () -> Self","parent":{"krate":0,"index":1004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":94028,"byte_end":94036,"line_start":614,"line_end":614,"column_start":8,"column_end":16},"name":"infinite","qualname":"::algo::FloatMeasure::infinite","value":"fn () -> Self","parent":{"krate":0,"index":1004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"graphmap","qualname":"::graphmap","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1048},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":3597},{"krate":0,"index":3604},{"krate":0,"index":1060},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":3609},{"krate":0,"index":3621},{"krate":0,"index":3619},{"krate":0,"index":3617},{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1107},{"krate":0,"index":1114},{"krate":0,"index":1121},{"krate":0,"index":3622},{"krate":0,"index":3626},{"krate":0,"index":1122},{"krate":0,"index":1128},{"krate":0,"index":1136},{"krate":0,"index":1143},{"krate":0,"index":1151},{"krate":0,"index":1159},{"krate":0,"index":1166},{"krate":0,"index":1174},{"krate":0,"index":1181},{"krate":0,"index":1194},{"krate":0,"index":1201},{"krate":0,"index":1208},{"krate":0,"index":1222},{"krate":0,"index":1229},{"krate":0,"index":1236},{"krate":0,"index":1242},{"krate":0,"index":1247},{"krate":0,"index":1252},{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1270},{"krate":0,"index":1274},{"krate":0,"index":1278},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1291},{"krate":0,"index":1295},{"krate":0,"index":1302},{"krate":0,"index":1307},{"krate":0,"index":1315},{"krate":0,"index":1323},{"krate":0,"index":1331},{"krate":0,"index":1339},{"krate":0,"index":1347},{"krate":0,"index":1354}],"decl_id":null,"docs":" `GraphMap<N, E, Ty>` is a graph datastructure where node values are mapping\n keys.\n","sig":null,"attributes":[{"value":"cfg(feature = \"graphmap\")","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1284,"byte_end":1312,"line_start":51,"line_end":51,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":103802,"byte_end":103812,"line_start":42,"line_end":42,"column_start":10,"column_end":20},"name":"UnGraphMap","qualname":"::graphmap::UnGraphMap","value":"GraphMap<N, E, Undirected>","parent":null,"children":[],"decl_id":null,"docs":" A `GraphMap` with undirected edges.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":103987,"byte_end":103997,"line_start":47,"line_end":47,"column_start":10,"column_end":20},"name":"DiGraphMap","qualname":"::graphmap::DiGraphMap","value":"GraphMap<N, E, Directed>","parent":null,"children":[],"decl_id":null,"docs":" A `GraphMap` with directed edges.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3597},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105183,"byte_end":105191,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"GraphMap","qualname":"::graphmap::GraphMap","value":"GraphMap {  }","parent":null,"children":[{"krate":0,"index":3601},{"krate":0,"index":3602},{"krate":0,"index":3603}],"decl_id":null,"docs":" `GraphMap<N, E, Ty>` is a graph datastructure using an associative array\n of its node weights `N`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105569,"byte_end":105578,"line_start":87,"line_end":87,"column_start":11,"column_end":20},"name":"NodeTrait","qualname":"::graphmap::NodeTrait","value":"NodeTrait: Copy + Ord + Hash","parent":null,"children":[],"decl_id":null,"docs":" A trait group for `GraphMap`'s node identifier.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106287,"byte_end":106290,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<GraphMap<N, E, Ty>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GraphMap`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106402,"byte_end":106415,"line_start":122,"line_end":122,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<GraphMap<N, E, Ty>>::with_capacity","value":"fn (nodes: usize, edges: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GraphMap` with estimated capacity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106696,"byte_end":106704,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"capacity","qualname":"<GraphMap<N, E, Ty>>::capacity","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Return the current node and edge capacity of the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107121,"byte_end":107132,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<GraphMap<N, E, Ty>>::is_directed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the graph has directed edges.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107836,"byte_end":107846,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"from_edges","qualname":"<GraphMap<N, E, Ty>>::from_edges","value":"fn <I> (iterable: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GraphMap` from an iterable of edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108062,"byte_end":108072,"line_start":177,"line_end":177,"column_start":12,"column_end":22},"name":"node_count","qualname":"<GraphMap<N, E, Ty>>::node_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of nodes in the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108183,"byte_end":108193,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<GraphMap<N, E, Ty>>::edge_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of edges in the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108290,"byte_end":108295,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"clear","qualname":"<GraphMap<N, E, Ty>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all nodes and edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108418,"byte_end":108426,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"add_node","qualname":"<GraphMap<N, E, Ty>>::add_node","value":"fn (&mut self, n: N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Add node `n` to the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108577,"byte_end":108588,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"remove_node","qualname":"<GraphMap<N, E, Ty>>::remove_node","value":"fn (&mut self, n: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if node `n` was removed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109081,"byte_end":109094,"line_start":214,"line_end":214,"column_start":12,"column_end":25},"name":"contains_node","qualname":"<GraphMap<N, E, Ty>>::contains_node","value":"fn (&self, n: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the node is contained in the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109999,"byte_end":110007,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<GraphMap<N, E, Ty>>::add_edge","value":"fn (&mut self, a: N, b: N, weight: E) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Add an edge connecting `a` and `b` to the graph, with associated\n data `weight`. For a directed graph, the edge is directed from `a`\n to `b`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112014,"byte_end":112025,"line_start":294,"line_end":294,"column_start":12,"column_end":23},"name":"remove_edge","qualname":"<GraphMap<N, E, Ty>>::remove_edge","value":"fn (&mut self, a: N, b: N) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Remove edge from `a` to `b` from the graph and return the edge weight.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112494,"byte_end":112507,"line_start":305,"line_end":305,"column_start":12,"column_end":25},"name":"contains_edge","qualname":"<GraphMap<N, E, Ty>>::contains_edge","value":"fn (&self, a: N, b: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the edge connecting `a` with `b` is contained in the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112712,"byte_end":112717,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"nodes","qualname":"<GraphMap<N, E, Ty>>::nodes","value":"fn (&self) -> Nodes<N>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the nodes of the graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113094,"byte_end":113103,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"neighbors","qualname":"<GraphMap<N, E, Ty>>::neighbors","value":"fn (&self, a: N) -> Neighbors<N, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all nodes with an edge starting from `a`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113832,"byte_end":113850,"line_start":343,"line_end":343,"column_start":12,"column_end":30},"name":"neighbors_directed","qualname":"<GraphMap<N, E, Ty>>::neighbors_directed","value":"fn (&self, a: N, dir: Direction) -> NeighborsDirected<N, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and\n `a`, in the specified direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114514,"byte_end":114519,"line_start":364,"line_end":364,"column_start":12,"column_end":17},"name":"edges","qualname":"<GraphMap<N, E, Ty>>::edges","value":"fn (&self, from: N) -> Edges<N, E, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of target nodes with an edge starting from `a`,\n paired with their respective edge weights.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114827,"byte_end":114838,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"edge_weight","qualname":"<GraphMap<N, E, Ty>>::edge_weight","value":"fn (&self, a: N, b: N) -> Option<&E>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the edge weight connecting `a` with `b`, or\n `None` if the edge does not exist in the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115076,"byte_end":115091,"line_start":380,"line_end":380,"column_start":12,"column_end":27},"name":"edge_weight_mut","qualname":"<GraphMap<N, E, Ty>>::edge_weight_mut","value":"fn (&mut self, a: N, b: N) -> Option<&mut E>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the edge weight connecting `a` with `b`, or\n `None` if the edge does not exist in the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115350,"byte_end":115359,"line_start":387,"line_end":387,"column_start":12,"column_end":21},"name":"all_edges","qualname":"<GraphMap<N, E, Ty>>::all_edges","value":"fn (&self) -> AllEdges<N, E, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all edges of the graph with their weight in arbitrary order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115684,"byte_end":115697,"line_start":398,"line_end":398,"column_start":12,"column_end":25},"name":"all_edges_mut","qualname":"<GraphMap<N, E, Ty>>::all_edges_mut","value":"fn (&mut self) -> AllEdgesMut<N, E, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all edges of the graph in arbitrary order, with a mutable reference\n to their weight.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":116374,"byte_end":116384,"line_start":416,"line_end":416,"column_start":12,"column_end":22},"name":"into_graph","qualname":"<GraphMap<N, E, Ty>>::into_graph","value":"fn <Ix> (self) -> Graph<N, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return a `Graph` that corresponds to this `GraphMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3622},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":118774,"byte_end":118779,"line_start":498,"line_end":498,"column_start":5,"column_end":10},"name":"Nodes","qualname":"::graphmap::Nodes","value":"Nodes {  }","parent":null,"children":[{"krate":0,"index":3625}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":118902,"byte_end":118911,"line_start":503,"line_end":503,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::graphmap::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":119505,"byte_end":119522,"line_start":529,"line_end":529,"column_start":12,"column_end":29},"name":"NeighborsDirected","qualname":"::graphmap::NeighborsDirected","value":"NeighborsDirected {  }","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":120173,"byte_end":120178,"line_start":557,"line_end":557,"column_start":12,"column_end":17},"name":"Edges","qualname":"::graphmap::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":121227,"byte_end":121235,"line_start":598,"line_end":598,"column_start":12,"column_end":20},"name":"AllEdges","qualname":"::graphmap::AllEdges","value":"AllEdges {  }","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":122357,"byte_end":122368,"line_start":642,"line_end":642,"column_start":12,"column_end":23},"name":"AllEdgesMut","qualname":"::graphmap::AllEdgesMut","value":"AllEdgesMut {  }","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124932,"byte_end":124935,"line_start":731,"line_end":731,"column_start":12,"column_end":15},"name":"Ptr","qualname":"::graphmap::Ptr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference that is hashed and compared by its pointer value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126757,"byte_end":126772,"line_start":817,"line_end":817,"column_start":12,"column_end":27},"name":"NodeIdentifiers","qualname":"::graphmap::NodeIdentifiers","value":"NodeIdentifiers {  }","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":127586,"byte_end":127600,"line_start":849,"line_end":849,"column_start":12,"column_end":26},"name":"NodeReferences","qualname":"::graphmap::NodeReferences","value":"NodeReferences {  }","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129334,"byte_end":129343,"line_start":38,"line_end":38,"column_start":10,"column_end":19},"name":"DefaultIx","qualname":"::graph_impl::DefaultIx","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The default integer type for graph indices.\n `u32` is the default to reduce the size of the graph's data and improve\n performance in the common case.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129538,"byte_end":129547,"line_start":44,"line_end":44,"column_start":18,"column_end":27},"name":"IndexType","qualname":"::graph_impl::IndexType","value":"IndexType: Copy + Default + Hash + Ord + fmt::Debug + 'static","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392}],"decl_id":null,"docs":" Trait for the unsigned integer type used for node and edge indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129610,"byte_end":129613,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"new","qualname":"::graph_impl::IndexType::new","value":"fn (x: usize) -> Self","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129640,"byte_end":129645,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"index","qualname":"::graph_impl::IndexType::index","value":"fn (&self) -> usize","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129670,"byte_end":129673,"line_start":48,"line_end":48,"column_start":8,"column_end":11},"name":"max","qualname":"::graph_impl::IndexType::max","value":"fn () -> Self","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3632},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130702,"byte_end":130711,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"NodeIndex","qualname":"::graph_impl::NodeIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Node identifier.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130793,"byte_end":130796,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<NodeIndex<Ix>>::new","value":"fn (x: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130772,"byte_end":130781,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130886,"byte_end":130891,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"index","qualname":"<NodeIndex<Ix>>::index","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130865,"byte_end":130874,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130968,"byte_end":130971,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"end","qualname":"<NodeIndex<Ix>>::end","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130947,"byte_end":130956,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131417,"byte_end":131427,"line_start":127,"line_end":127,"column_start":8,"column_end":18},"name":"node_index","qualname":"::graph_impl::node_index","value":"fn <Ix> (index: usize) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Short version of `NodeIndex::new`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131546,"byte_end":131556,"line_start":130,"line_end":130,"column_start":8,"column_end":18},"name":"edge_index","qualname":"::graph_impl::edge_index","value":"fn <Ix> (index: usize) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Short version of `EdgeIndex::new`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3669},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131732,"byte_end":131741,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"EdgeIndex","qualname":"::graph_impl::EdgeIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Edge identifier.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131823,"byte_end":131826,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<EdgeIndex<Ix>>::new","value":"fn (x: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131802,"byte_end":131811,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131916,"byte_end":131921,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"index","qualname":"<EdgeIndex<Ix>>::index","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131895,"byte_end":131904,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132110,"byte_end":132113,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"end","qualname":"<EdgeIndex<Ix>>::end","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" An invalid `EdgeIndex` used to denote absence of an edge, for example\n to end an adjacency list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132089,"byte_end":132098,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3706},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132934,"byte_end":132938,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"Node","qualname":"::graph_impl::Node","value":"Node { weight }","parent":null,"children":[{"krate":0,"index":3709},{"krate":0,"index":3710}],"decl_id":null,"docs":" The graph's node type.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3709},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132998,"byte_end":133004,"line_start":189,"line_end":189,"column_start":9,"column_end":15},"name":"weight","qualname":"::graph_impl::Node::weight","value":"N","parent":{"krate":0,"index":3706},"children":[],"decl_id":null,"docs":" Associated node data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133391,"byte_end":133400,"line_start":205,"line_end":205,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<Node<N, Ix>>::next_edge","value":"fn (&self, dir: Direction) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the first edge in the given direction.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3717},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133543,"byte_end":133547,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"Edge","qualname":"::graph_impl::Edge","value":"Edge { weight }","parent":null,"children":[{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3723}],"decl_id":null,"docs":" The graph's edge type.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3720},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133607,"byte_end":133613,"line_start":216,"line_end":216,"column_start":9,"column_end":15},"name":"weight","qualname":"::graph_impl::Edge::weight","value":"E","parent":{"krate":0,"index":3717},"children":[],"decl_id":null,"docs":" Associated edge data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134086,"byte_end":134095,"line_start":234,"line_end":234,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<Edge<E, Ix>>::next_edge","value":"fn (&self, dir: Direction) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the next edge for the given direction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134229,"byte_end":134235,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"source","qualname":"<Edge<E, Ix>>::source","value":"fn (&self) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return the source node index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134343,"byte_end":134349,"line_start":246,"line_end":246,"column_start":12,"column_end":18},"name":"target","qualname":"<Edge<E, Ix>>::target","value":"fn (&self) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return the target node index.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137512,"byte_end":137517,"line_start":325,"line_end":325,"column_start":12,"column_end":17},"name":"Graph","qualname":"::graph_impl::Graph","value":"Graph {  }","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459}],"decl_id":null,"docs":" `Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137778,"byte_end":137785,"line_start":335,"line_end":335,"column_start":10,"column_end":17},"name":"DiGraph","qualname":"::graph_impl::DiGraph","value":"Graph<N, E, Directed, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `Graph` with directed edges.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137983,"byte_end":137990,"line_start":341,"line_end":341,"column_start":10,"column_end":17},"name":"UnGraph","qualname":"::graph_impl::UnGraph","value":"Graph<N, E, Undirected, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `Graph` with undirected edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140654,"byte_end":140657,"line_start":427,"line_end":427,"column_start":12,"column_end":15},"name":"new","qualname":"<Graph<N, E, Directed>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` with directed edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141040,"byte_end":141054,"line_start":440,"line_end":440,"column_start":12,"column_end":26},"name":"new_undirected","qualname":"<Graph<N, E, Undirected>>::new_undirected","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` with undirected edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141318,"byte_end":141331,"line_start":452,"line_end":452,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Graph<N, E, Ty, Ix>>::with_capacity","value":"fn (nodes: usize, edges: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` with estimated capacity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141608,"byte_end":141618,"line_start":461,"line_end":461,"column_start":12,"column_end":22},"name":"node_count","qualname":"<Graph<N, E, Ty, Ix>>::node_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of nodes (vertices) in the graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141776,"byte_end":141786,"line_start":469,"line_end":469,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<Graph<N, E, Ty, Ix>>::edge_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of edges in the graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141919,"byte_end":141930,"line_start":476,"line_end":476,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<Graph<N, E, Ty, Ix>>::is_directed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the graph has directed edges or not.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141898,"byte_end":141907,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142290,"byte_end":142298,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"name":"add_node","qualname":"<Graph<N, E, Ty, Ix>>::add_node","value":"fn (&mut self, weight: N) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add a node (also called vertex) with associated data `weight` to the graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142805,"byte_end":142816,"line_start":502,"line_end":502,"column_start":12,"column_end":23},"name":"node_weight","qualname":"<Graph<N, E, Ty, Ix>>::node_weight","value":"fn (&self, a: NodeIndex<Ix>) -> Option<&N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143052,"byte_end":143067,"line_start":510,"line_end":510,"column_start":12,"column_end":27},"name":"node_weight_mut","qualname":"<Graph<N, E, Ty, Ix>>::node_weight_mut","value":"fn (&mut self, a: NodeIndex<Ix>) -> Option<&mut N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`, mutably.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143741,"byte_end":143749,"line_start":528,"line_end":528,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<Graph<N, E, Ty, Ix>>::add_edge","value":"fn (&mut self, a: NodeIndex<Ix>, b: NodeIndex<Ix>, weight: E) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add an edge from `a` to `b` to the graph, with its associated\n data `weight`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145100,"byte_end":145111,"line_start":564,"line_end":564,"column_start":12,"column_end":23},"name":"update_edge","qualname":"<Graph<N, E, Ty, Ix>>::update_edge","value":"fn (&mut self, a: NodeIndex<Ix>, b: NodeIndex<Ix>, weight: E) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add or update an edge from `a` to `b`.\n If the edge already exists, its weight is updated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145540,"byte_end":145551,"line_start":578,"line_end":578,"column_start":12,"column_end":23},"name":"edge_weight","qualname":"<Graph<N, E, Ty, Ix>>::edge_weight","value":"fn (&self, e: EdgeIndex<Ix>) -> Option<&E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145789,"byte_end":145804,"line_start":586,"line_end":586,"column_start":12,"column_end":27},"name":"edge_weight_mut","qualname":"<Graph<N, E, Ty, Ix>>::edge_weight_mut","value":"fn (&mut self, e: EdgeIndex<Ix>) -> Option<&mut E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`, mutably.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145991,"byte_end":146005,"line_start":592,"line_end":592,"column_start":12,"column_end":26},"name":"edge_endpoints","qualname":"<Graph<N, E, Ty, Ix>>::edge_endpoints","value":"fn (&self, e: EdgeIndex<Ix>) -> Option<(NodeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Access the source and target nodes for `e`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146839,"byte_end":146850,"line_start":610,"line_end":610,"column_start":12,"column_end":23},"name":"remove_node","qualname":"<Graph<N, E, Ty, Ix>>::remove_node","value":"fn (&mut self, a: NodeIndex<Ix>) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Remove `a` from the graph if it exists, and return its weight.\n If it doesn't exist in the graph, return `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":150155,"byte_end":150166,"line_start":696,"line_end":696,"column_start":12,"column_end":23},"name":"remove_edge","qualname":"<Graph<N, E, Ty, Ix>>::remove_edge","value":"fn (&mut self, e: EdgeIndex<Ix>) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Remove an edge and return its edge weight, or `None` if it didn't exist.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151942,"byte_end":151951,"line_start":742,"line_end":742,"column_start":12,"column_end":21},"name":"neighbors","qualname":"<Graph<N, E, Ty, Ix>>::neighbors","value":"fn (&self, a: NodeIndex<Ix>) -> Neighbors<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all nodes with an edge starting from `a`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152984,"byte_end":153002,"line_start":766,"line_end":766,"column_start":12,"column_end":30},"name":"neighbors_directed","qualname":"<Graph<N, E, Ty, Ix>>::neighbors_directed","value":"fn (&self, a: NodeIndex<Ix>, dir: Direction) -> Neighbors<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and\n `a`, in the specified direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153916,"byte_end":153936,"line_start":791,"line_end":791,"column_start":12,"column_end":32},"name":"neighbors_undirected","qualname":"<Graph<N, E, Ty, Ix>>::neighbors_undirected","value":"fn (&self, a: NodeIndex<Ix>) -> Neighbors<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and\n `a`, in either direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154544,"byte_end":154549,"line_start":810,"line_end":810,"column_start":12,"column_end":17},"name":"edges","qualname":"<Graph<N, E, Ty, Ix>>::edges","value":"fn (&self, a: NodeIndex<Ix>) -> Edges<E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":155033,"byte_end":155047,"line_start":822,"line_end":822,"column_start":12,"column_end":26},"name":"edges_directed","qualname":"<Graph<N, E, Ty, Ix>>::edges_directed","value":"fn (&self, a: NodeIndex<Ix>, dir: Direction) -> Edges<E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`, in the specified direction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156230,"byte_end":156243,"line_start":857,"line_end":857,"column_start":12,"column_end":25},"name":"contains_edge","qualname":"<Graph<N, E, Ty, Ix>>::contains_edge","value":"fn (&self, a: NodeIndex<Ix>, b: NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Lookup if there is an edge from `a` to `b`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156545,"byte_end":156554,"line_start":865,"line_end":865,"column_start":12,"column_end":21},"name":"find_edge","qualname":"<Graph<N, E, Ty, Ix>>::find_edge","value":"fn (&self, a: NodeIndex<Ix>, b: NodeIndex<Ix>) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge from `a` to `b`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157633,"byte_end":157653,"line_start":897,"line_end":897,"column_start":12,"column_end":32},"name":"find_edge_undirected","qualname":"<Graph<N, E, Ty, Ix>>::find_edge_undirected","value":"fn (&self, a: NodeIndex<Ix>, b: NodeIndex<Ix>) -> Option<(EdgeIndex<Ix>, Direction)>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge between `a` and `b`, in either direction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158908,"byte_end":158917,"line_start":932,"line_end":932,"column_start":12,"column_end":21},"name":"externals","qualname":"<Graph<N, E, Ty, Ix>>::externals","value":"fn (&self, dir: Direction) -> Externals<N, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over either the nodes without edges to them\n (`Incoming`) or from them (`Outgoing`).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159133,"byte_end":159145,"line_start":938,"line_end":938,"column_start":12,"column_end":24},"name":"node_indices","qualname":"<Graph<N, E, Ty, Ix>>::node_indices","value":"fn (&self) -> NodeIndices<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the node indices of the graph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159433,"byte_end":159449,"line_start":946,"line_end":946,"column_start":12,"column_end":28},"name":"node_weights_mut","qualname":"<Graph<N, E, Ty, Ix>>::node_weights_mut","value":"fn (&mut self) -> NodeWeightsMut<N, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator yielding mutable access to all node weights.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159628,"byte_end":159640,"line_start":952,"line_end":952,"column_start":12,"column_end":24},"name":"edge_indices","qualname":"<Graph<N, E, Ty, Ix>>::edge_indices","value":"fn (&self) -> EdgeIndices<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the edge indices of the graph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159878,"byte_end":159893,"line_start":959,"line_end":959,"column_start":12,"column_end":27},"name":"edge_references","qualname":"<Graph<N, E, Ty, Ix>>::edge_references","value":"fn (&self) -> EdgeReferences<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over all edges, in indexed order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160205,"byte_end":160221,"line_start":969,"line_end":969,"column_start":12,"column_end":28},"name":"edge_weights_mut","qualname":"<Graph<N, E, Ty, Ix>>::edge_weights_mut","value":"fn (&mut self) -> EdgeWeightsMut<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator yielding mutable access to all edge weights.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160497,"byte_end":160506,"line_start":978,"line_end":978,"column_start":12,"column_end":21},"name":"raw_nodes","qualname":"<Graph<N, E, Ty, Ix>>::raw_nodes","value":"fn (&self) -> &[Node<N, Ix>]","parent":null,"children":[],"decl_id":null,"docs":" Access the internal node array.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160616,"byte_end":160625,"line_start":984,"line_end":984,"column_start":12,"column_end":21},"name":"raw_edges","qualname":"<Graph<N, E, Ty, Ix>>::raw_edges","value":"fn (&self) -> &[Edge<E, Ix>]","parent":null,"children":[],"decl_id":null,"docs":" Access the internal edge array.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160766,"byte_end":160782,"line_start":990,"line_end":990,"column_start":12,"column_end":28},"name":"into_nodes_edges","qualname":"<Graph<N, E, Ty, Ix>>::into_nodes_edges","value":"fn (self) -> (Vec<Node<N, Ix>>, Vec<Edge<E, Ix>>)","parent":null,"children":[],"decl_id":null,"docs":" Convert the graph into a vector of Nodes and a vector of Edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160968,"byte_end":160978,"line_start":995,"line_end":995,"column_start":12,"column_end":22},"name":"first_edge","qualname":"<Graph<N, E, Ty, Ix>>::first_edge","value":"fn (&self, a: NodeIndex<Ix>, dir: Direction) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the first edge in the given direction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161435,"byte_end":161444,"line_start":1009,"line_end":1009,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<Graph<N, E, Ty, Ix>>::next_edge","value":"fn (&self, e: EdgeIndex<Ix>, dir: Direction) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the next edge for the given direction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162942,"byte_end":162957,"line_start":1055,"line_end":1055,"column_start":12,"column_end":27},"name":"index_twice_mut","qualname":"<Graph<N, E, Ty, Ix>>::index_twice_mut","value":"fn <T, U> (&mut self, i: T, j: U) -> (&mut <Self as Index<T>>::Output, &mut <Self as Index<U>>::Output)","parent":null,"children":[],"decl_id":null,"docs":" Index the `Graph` by two indices, any combination of\n node or edge indices is fine.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":163622,"byte_end":163629,"line_start":1074,"line_end":1074,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Graph<N, E, Ty, Ix>>::reverse","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reverse the direction of all edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164011,"byte_end":164016,"line_start":1088,"line_end":1088,"column_start":12,"column_end":17},"name":"clear","qualname":"<Graph<N, E, Ty, Ix>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all nodes and edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164129,"byte_end":164140,"line_start":1094,"line_end":1094,"column_start":12,"column_end":23},"name":"clear_edges","qualname":"<Graph<N, E, Ty, Ix>>::clear_edges","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164374,"byte_end":164382,"line_start":1102,"line_end":1102,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Graph<N, E, Ty, Ix>>::capacity","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Return the current node and edge capacity of the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164711,"byte_end":164724,"line_start":1110,"line_end":1110,"column_start":12,"column_end":25},"name":"reserve_nodes","qualname":"<Graph<N, E, Ty, Ix>>::reserve_nodes","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more nodes to be inserted in\n the graph. Graph may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165043,"byte_end":165056,"line_start":1118,"line_end":1118,"column_start":12,"column_end":25},"name":"reserve_edges","qualname":"<Graph<N, E, Ty, Ix>>::reserve_edges","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more edges to be inserted in\n the graph. Graph may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165458,"byte_end":165477,"line_start":1129,"line_end":1129,"column_start":12,"column_end":31},"name":"reserve_exact_nodes","qualname":"<Graph<N, E, Ty, Ix>>::reserve_exact_nodes","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more nodes to be\n inserted in the graph. Does nothing if the capacity is already\n sufficient.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165885,"byte_end":165904,"line_start":1140,"line_end":1140,"column_start":12,"column_end":31},"name":"reserve_exact_edges","qualname":"<Graph<N, E, Ty, Ix>>::reserve_exact_edges","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more edges to be\n inserted in the graph.\n Does nothing if the capacity is already sufficient.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166086,"byte_end":166105,"line_start":1145,"line_end":1145,"column_start":12,"column_end":31},"name":"shrink_to_fit_nodes","qualname":"<Graph<N, E, Ty, Ix>>::shrink_to_fit_nodes","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the underlying nodes collection as much as possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166258,"byte_end":166277,"line_start":1150,"line_end":1150,"column_start":12,"column_end":31},"name":"shrink_to_fit_edges","qualname":"<Graph<N, E, Ty, Ix>>::shrink_to_fit_edges","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the underlying edges collection as much as possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166408,"byte_end":166421,"line_start":1155,"line_end":1155,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<Graph<N, E, Ty, Ix>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the graph as much as possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166820,"byte_end":166832,"line_start":1167,"line_end":1167,"column_start":12,"column_end":24},"name":"retain_nodes","qualname":"<Graph<N, E, Ty, Ix>>::retain_nodes","value":"fn <F> (&mut self, mut visit: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Keep all nodes that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":167484,"byte_end":167496,"line_start":1186,"line_end":1186,"column_start":12,"column_end":24},"name":"retain_edges","qualname":"<Graph<N, E, Ty, Ix>>::retain_edges","value":"fn <F> (&mut self, mut visit: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Keep all edges that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168363,"byte_end":168373,"line_start":1216,"line_end":1216,"column_start":12,"column_end":22},"name":"from_edges","qualname":"<Graph<N, E, Ty, Ix>>::from_edges","value":"fn <I> (iterable: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` from an iterable of edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168987,"byte_end":169004,"line_start":1234,"line_end":1234,"column_start":12,"column_end":29},"name":"extend_with_edges","qualname":"<Graph<N, E, Ty, Ix>>::extend_with_edges","value":"fn <I> (&mut self, iterable: I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extend the graph from an iterable of edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":169922,"byte_end":169925,"line_start":1261,"line_end":1261,"column_start":12,"column_end":15},"name":"map","qualname":"<Graph<N, E, Ty, Ix>>::map","value":"fn <'a, F, G, N2, E2> (&'a self, mut node_map: F, mut edge_map: G) -> Graph<N2, E2, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` by mapping node and\n edge weights to new values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":171263,"byte_end":171273,"line_start":1293,"line_end":1293,"column_start":12,"column_end":22},"name":"filter_map","qualname":"<Graph<N, E, Ty, Ix>>::filter_map","value":"fn <'a, F, G, N2, E2> (&'a self, mut node_map: F, mut edge_map: G) -> Graph<N2, E2, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` by mapping nodes and edges.\n A node or edge may be mapped to `None` to exclude it from\n the resulting graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":172611,"byte_end":172625,"line_start":1323,"line_end":1323,"column_start":12,"column_end":26},"name":"into_edge_type","qualname":"<Graph<N, E, Ty, Ix>>::into_edge_type","value":"fn <NewTy> (self) -> Graph<N, E, NewTy, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Convert the graph into either undirected or directed. No edge adjustments\n are done, so you may want to go over the result to remove or add edges.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":173875,"byte_end":173884,"line_start":1361,"line_end":1361,"column_start":12,"column_end":21},"name":"Externals","qualname":"::graph_impl::Externals","value":"Externals {  }","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605}],"decl_id":null,"docs":" An iterator over either the nodes without edges to them or from them.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":175123,"byte_end":175132,"line_start":1402,"line_end":1402,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::graph_impl::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619}],"decl_id":null,"docs":" Iterator over the neighbors of a node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176730,"byte_end":176736,"line_start":1457,"line_end":1457,"column_start":12,"column_end":18},"name":"detach","qualname":"<Neighbors>::detach","value":"fn (&self) -> WalkNeighbors<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return a “walker” object that can be used to step through the\n neighbors and edges from the origin node.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":178385,"byte_end":178390,"line_start":1525,"line_end":1525,"column_start":12,"column_end":17},"name":"Edges","qualname":"::graph_impl::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1679}],"decl_id":null,"docs":" Iterator over the edges of from or to a node\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":180961,"byte_end":180975,"line_start":1612,"line_end":1612,"column_start":12,"column_end":26},"name":"NodeWeightsMut","qualname":"::graph_impl::NodeWeightsMut","value":"NodeWeightsMut {  }","parent":null,"children":[{"krate":0,"index":1701}],"decl_id":null,"docs":" Iterator yielding mutable access to all node weights.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":181449,"byte_end":181463,"line_start":1631,"line_end":1631,"column_start":12,"column_end":26},"name":"EdgeWeightsMut","qualname":"::graph_impl::EdgeWeightsMut","value":"EdgeWeightsMut {  }","parent":null,"children":[{"krate":0,"index":1714}],"decl_id":null,"docs":" Iterator yielding mutable access to all edge weights.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1755},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183464,"byte_end":183474,"line_start":1709,"line_end":1709,"column_start":11,"column_end":21},"name":"GraphIndex","qualname":"::graph_impl::GraphIndex","value":"GraphIndex: Copy","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757}],"decl_id":null,"docs":" A  `GraphIndex` is a node or edge index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183510,"byte_end":183515,"line_start":1711,"line_end":1711,"column_start":8,"column_end":13},"name":"index","qualname":"::graph_impl::GraphIndex::index","value":"fn (&self) -> usize","parent":{"krate":0,"index":1755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183559,"byte_end":183572,"line_start":1713,"line_end":1713,"column_start":8,"column_end":21},"name":"is_node_index","qualname":"::graph_impl::GraphIndex::is_node_index","value":"fn () -> bool","parent":{"krate":0,"index":1755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1766},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185068,"byte_end":185081,"line_start":1765,"line_end":1765,"column_start":12,"column_end":25},"name":"WalkNeighbors","qualname":"::graph_impl::WalkNeighbors","value":"WalkNeighbors {  }","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769}],"decl_id":null,"docs":" A “walker” object that can be used to step through the edge list of a node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185738,"byte_end":185742,"line_start":1788,"line_end":1788,"column_start":12,"column_end":16},"name":"next","qualname":"<WalkNeighbors<Ix>>::next","value":"fn <N, E, Ty> (&mut self, g: &Graph<N, E, Ty, Ix>) -> Option<(EdgeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Step to the next edge and its endpoint node in the walk for graph `g`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":186665,"byte_end":186674,"line_start":1813,"line_end":1813,"column_start":12,"column_end":21},"name":"next_node","qualname":"<WalkNeighbors<Ix>>::next_node","value":"fn <N, E, Ty> (&mut self, g: &Graph<N, E, Ty, Ix>) -> Option<NodeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":186822,"byte_end":186831,"line_start":1819,"line_end":1819,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<WalkNeighbors<Ix>>::next_edge","value":"fn <N, E, Ty> (&mut self, g: &Graph<N, E, Ty, Ix>) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3731},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187052,"byte_end":187063,"line_start":1828,"line_end":1828,"column_start":12,"column_end":23},"name":"NodeIndices","qualname":"::graph_impl::NodeIndices","value":"NodeIndices {  }","parent":null,"children":[{"krate":0,"index":3733},{"krate":0,"index":3734}],"decl_id":null,"docs":" Iterator over the node indices of a graph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3741},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187712,"byte_end":187723,"line_start":1855,"line_end":1855,"column_start":12,"column_end":23},"name":"EdgeIndices","qualname":"::graph_impl::EdgeIndices","value":"EdgeIndices {  }","parent":null,"children":[{"krate":0,"index":3743},{"krate":0,"index":3744}],"decl_id":null,"docs":" Iterator over the edge indices of a graph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3751},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188351,"byte_end":188364,"line_start":1882,"line_end":1882,"column_start":12,"column_end":25},"name":"EdgeReference","qualname":"::graph_impl::EdgeReference","value":"EdgeReference {  }","parent":null,"children":[{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3758}],"decl_id":null,"docs":" Reference to a `Graph` edge.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1833},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":189271,"byte_end":189285,"line_start":1918,"line_end":1918,"column_start":12,"column_end":26},"name":"NodeReferences","qualname":"::graph_impl::NodeReferences","value":"NodeReferences {  }","parent":null,"children":[{"krate":0,"index":1837}],"decl_id":null,"docs":" Iterator over all nodes of a graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190334,"byte_end":190340,"line_start":1959,"line_end":1959,"column_start":12,"column_end":18},"name":"weight","qualname":"<EdgeReference>::weight","value":"fn (&self) -> &'a E","parent":null,"children":[],"decl_id":null,"docs":" Access the edge’s weight.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1872},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190798,"byte_end":190812,"line_start":1977,"line_end":1977,"column_start":12,"column_end":26},"name":"EdgeReferences","qualname":"::graph_impl::EdgeReferences","value":"EdgeReferences {  }","parent":null,"children":[{"krate":0,"index":1876}],"decl_id":null,"docs":" Iterator over all edges of a graph.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stable_graph","qualname":"::graph_impl::stable_graph","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","parent":null,"children":[{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1914},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1934},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1953},{"krate":0,"index":1957},{"krate":0,"index":1961},{"krate":0,"index":1978},{"krate":0,"index":1982},{"krate":0,"index":2056},{"krate":0,"index":2063},{"krate":0,"index":2070},{"krate":0,"index":2076},{"krate":0,"index":2083},{"krate":0,"index":2089},{"krate":0,"index":2095},{"krate":0,"index":2103},{"krate":0,"index":2109},{"krate":0,"index":2118},{"krate":0,"index":2123},{"krate":0,"index":2132},{"krate":0,"index":3764},{"krate":0,"index":3772},{"krate":0,"index":2139},{"krate":0,"index":2144},{"krate":0,"index":2148},{"krate":0,"index":2153},{"krate":0,"index":2158},{"krate":0,"index":2169},{"krate":0,"index":2177},{"krate":0,"index":2185},{"krate":0,"index":2196},{"krate":0,"index":2203},{"krate":0,"index":2207},{"krate":0,"index":2216},{"krate":0,"index":2221},{"krate":0,"index":2229},{"krate":0,"index":2236},{"krate":0,"index":2244},{"krate":0,"index":2249},{"krate":0,"index":2255},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2276},{"krate":0,"index":2281},{"krate":0,"index":2289},{"krate":0,"index":2295},{"krate":0,"index":2304},{"krate":0,"index":2309},{"krate":0,"index":2317}],"decl_id":null,"docs":" `StableGraph` keeps indices stable across removals.","sig":null,"attributes":[{"value":"cfg(feature = \"stable_graph\")","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191837,"byte_end":191869,"line_start":2019,"line_end":2019,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1943},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194955,"byte_end":194966,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"StableGraph","qualname":"::graph_impl::stable_graph::StableGraph","value":"StableGraph {  }","parent":null,"children":[{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952}],"decl_id":null,"docs":" `StableGraph<N, E, Ty, Ix>` is a graph datastructure using an adjacency\n list representation.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":195676,"byte_end":195689,"line_start":124,"line_end":124,"column_start":10,"column_end":23},"name":"StableDiGraph","qualname":"::graph_impl::stable_graph::StableDiGraph","value":"StableGraph<N, E, Directed, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `StableGraph` with directed edges.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":195899,"byte_end":195912,"line_start":130,"line_end":130,"column_start":10,"column_end":23},"name":"StableUnGraph","qualname":"::graph_impl::stable_graph::StableUnGraph","value":"StableGraph<N, E, Undirected, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `StableGraph` with undirected edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197915,"byte_end":197918,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"new","qualname":"<StableGraph<N, E, Directed>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` with directed edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":198141,"byte_end":198154,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StableGraph<N, E, Ty, Ix>>::with_capacity","value":"fn (nodes: usize, edges: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` with estimated capacity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":198494,"byte_end":198502,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StableGraph<N, E, Ty, Ix>>::capacity","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Return the current node and edge capacity of the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":198609,"byte_end":198614,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"name":"clear","qualname":"<StableGraph<N, E, Ty, Ix>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all nodes and edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":198839,"byte_end":198850,"line_start":217,"line_end":217,"column_start":12,"column_end":23},"name":"clear_edges","qualname":"<StableGraph<N, E, Ty, Ix>>::clear_edges","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199314,"byte_end":199324,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"node_count","qualname":"<StableGraph<N, E, Ty, Ix>>::node_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of nodes (vertices) in the graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199477,"byte_end":199487,"line_start":239,"line_end":239,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of edges in the graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199615,"byte_end":199626,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<StableGraph<N, E, Ty, Ix>>::is_directed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the graph has directed edges or not.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199594,"byte_end":199603,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199975,"byte_end":199983,"line_start":257,"line_end":257,"column_start":12,"column_end":20},"name":"add_node","qualname":"<StableGraph<N, E, Ty, Ix>>::add_node","value":"fn (&mut self, weight: N) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add a node (also called vertex) with associated data `weight` to the graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":201445,"byte_end":201456,"line_start":292,"line_end":292,"column_start":12,"column_end":23},"name":"remove_node","qualname":"<StableGraph<N, E, Ty, Ix>>::remove_node","value":"fn (&mut self, a: NodeIndex<Ix>) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Remove `a` from the graph if it exists, and return its weight.\n If it doesn't exist in the graph, return `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":202567,"byte_end":202580,"line_start":325,"line_end":325,"column_start":12,"column_end":25},"name":"contains_node","qualname":"<StableGraph<N, E, Ty, Ix>>::contains_node","value":"fn (&self, a: NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":203366,"byte_end":203374,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<StableGraph<N, E, Ty, Ix>>::add_edge","value":"fn (&mut self, a: NodeIndex<Ix>, b: NodeIndex<Ix>, weight: E) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add an edge from `a` to `b` to the graph, with its associated\n data `weight`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206605,"byte_end":206616,"line_start":433,"line_end":433,"column_start":12,"column_end":23},"name":"update_edge","qualname":"<StableGraph<N, E, Ty, Ix>>::update_edge","value":"fn (&mut self, a: NodeIndex<Ix>, b: NodeIndex<Ix>, weight: E) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add or update an edge from `a` to `b`.\n If the edge already exists, its weight is updated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":207142,"byte_end":207153,"line_start":449,"line_end":449,"column_start":12,"column_end":23},"name":"remove_edge","qualname":"<StableGraph<N, E, Ty, Ix>>::remove_edge","value":"fn (&mut self, e: EdgeIndex<Ix>) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Remove an edge and return its edge weight, or `None` if it didn't exist.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208161,"byte_end":208172,"line_start":477,"line_end":477,"column_start":12,"column_end":23},"name":"node_weight","qualname":"<StableGraph<N, E, Ty, Ix>>::node_weight","value":"fn (&self, a: NodeIndex<Ix>) -> Option<&N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208475,"byte_end":208490,"line_start":487,"line_end":487,"column_start":12,"column_end":27},"name":"node_weight_mut","qualname":"<StableGraph<N, E, Ty, Ix>>::node_weight_mut","value":"fn (&mut self, a: NodeIndex<Ix>) -> Option<&mut N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`, mutably.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208748,"byte_end":208760,"line_start":495,"line_end":495,"column_start":12,"column_end":24},"name":"node_indices","qualname":"<StableGraph<N, E, Ty, Ix>>::node_indices","value":"fn (&self) -> NodeIndices<N, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the node indices of the graph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208994,"byte_end":209005,"line_start":504,"line_end":504,"column_start":12,"column_end":23},"name":"edge_weight","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_weight","value":"fn (&self, e: EdgeIndex<Ix>) -> Option<&E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":209307,"byte_end":209322,"line_start":514,"line_end":514,"column_start":12,"column_end":27},"name":"edge_weight_mut","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_weight_mut","value":"fn (&mut self, e: EdgeIndex<Ix>) -> Option<&mut E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`, mutably","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":209570,"byte_end":209584,"line_start":522,"line_end":522,"column_start":12,"column_end":26},"name":"edge_endpoints","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_endpoints","value":"fn (&self, e: EdgeIndex<Ix>) -> Option<(NodeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Access the source and target nodes for `e`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":209913,"byte_end":209925,"line_start":532,"line_end":532,"column_start":12,"column_end":24},"name":"edge_indices","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_indices","value":"fn (&self) -> EdgeIndices<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the node indices of the graph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210244,"byte_end":210253,"line_start":542,"line_end":542,"column_start":12,"column_end":21},"name":"find_edge","qualname":"<StableGraph<N, E, Ty, Ix>>::find_edge","value":"fn (&self, a: NodeIndex<Ix>, b: NodeIndex<Ix>) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge from `a` to `b`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2017},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210960,"byte_end":210980,"line_start":561,"line_end":561,"column_start":12,"column_end":32},"name":"find_edge_undirected","qualname":"<StableGraph<N, E, Ty, Ix>>::find_edge_undirected","value":"fn (&self, a: NodeIndex<Ix>, b: NodeIndex<Ix>) -> Option<(EdgeIndex<Ix>, Direction)>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge between `a` and `b`, in either direction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211710,"byte_end":211719,"line_start":582,"line_end":582,"column_start":12,"column_end":21},"name":"neighbors","qualname":"<StableGraph<N, E, Ty, Ix>>::neighbors","value":"fn (&self, a: NodeIndex<Ix>) -> Neighbors<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all nodes with an edge starting from `a`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212515,"byte_end":212533,"line_start":601,"line_end":601,"column_start":12,"column_end":30},"name":"neighbors_directed","qualname":"<StableGraph<N, E, Ty, Ix>>::neighbors_directed","value":"fn (&self, a: NodeIndex<Ix>, dir: Direction) -> Neighbors<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and `a`,\n in the specified direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2020},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213449,"byte_end":213469,"line_start":626,"line_end":626,"column_start":12,"column_end":32},"name":"neighbors_undirected","qualname":"<StableGraph<N, E, Ty, Ix>>::neighbors_undirected","value":"fn (&self, a: NodeIndex<Ix>) -> Neighbors<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and `a`,\n in either direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":214070,"byte_end":214075,"line_start":645,"line_end":645,"column_start":12,"column_end":17},"name":"edges","qualname":"<StableGraph<N, E, Ty, Ix>>::edges","value":"fn (&self, a: NodeIndex<Ix>) -> Edges<E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":214559,"byte_end":214573,"line_start":657,"line_end":657,"column_start":12,"column_end":26},"name":"edges_directed","qualname":"<StableGraph<N, E, Ty, Ix>>::edges_directed","value":"fn (&self, a: NodeIndex<Ix>, dir: Direction) -> Edges<E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`, in the specified direction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":215733,"byte_end":215748,"line_start":692,"line_end":692,"column_start":12,"column_end":27},"name":"index_twice_mut","qualname":"<StableGraph<N, E, Ty, Ix>>::index_twice_mut","value":"fn <T, U> (&mut self, i: T, j: U) -> (&mut <Self as Index<T>>::Output, &mut <Self as Index<U>>::Output)","parent":null,"children":[],"decl_id":null,"docs":" Index the `StableGraph` by two indices, any combination of\n node or edge indices is fine.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217145,"byte_end":217157,"line_start":725,"line_end":725,"column_start":12,"column_end":24},"name":"retain_nodes","qualname":"<StableGraph<N, E, Ty, Ix>>::retain_nodes","value":"fn <F> (&mut self, mut visit: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Keep all nodes that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218034,"byte_end":218046,"line_start":747,"line_end":747,"column_start":12,"column_end":24},"name":"retain_edges","qualname":"<StableGraph<N, E, Ty, Ix>>::retain_edges","value":"fn <F> (&mut self, mut visit: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Keep all edges that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218947,"byte_end":218957,"line_start":776,"line_end":776,"column_start":12,"column_end":22},"name":"from_edges","qualname":"<StableGraph<N, E, Ty, Ix>>::from_edges","value":"fn <I> (iterable: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` from an iterable of edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2033},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":219476,"byte_end":219479,"line_start":792,"line_end":792,"column_start":12,"column_end":15},"name":"map","qualname":"<StableGraph<N, E, Ty, Ix>>::map","value":"fn <'a, F, G, N2, E2> (&'a self, mut node_map: F, mut edge_map: G) -> StableGraph<N2, E2, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` by mapping node and\n edge weights to new values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":220575,"byte_end":220585,"line_start":820,"line_end":820,"column_start":12,"column_end":22},"name":"filter_map","qualname":"<StableGraph<N, E, Ty, Ix>>::filter_map","value":"fn <'a, F, G, N2, E2> (&'a self, mut node_map: F, mut edge_map: G) -> StableGraph<N2, E2, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` by mapping nodes and edges.\n A node or edge may be mapped to `None` to exclude it from\n the resulting graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":222737,"byte_end":222754,"line_start":872,"line_end":872,"column_start":12,"column_end":29},"name":"extend_with_edges","qualname":"<StableGraph<N, E, Ty, Ix>>::extend_with_edges","value":"fn <I> (&mut self, iterable: I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extend the graph from an iterable of edges.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":232361,"byte_end":232375,"line_start":1161,"line_end":1161,"column_start":12,"column_end":26},"name":"NodeReferences","qualname":"::graph_impl::stable_graph::NodeReferences","value":"NodeReferences {  }","parent":null,"children":[{"krate":0,"index":2122}],"decl_id":null,"docs":" Iterator over all nodes of a graph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3764},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233245,"byte_end":233258,"line_start":1194,"line_end":1194,"column_start":12,"column_end":25},"name":"EdgeReference","qualname":"::graph_impl::stable_graph::EdgeReference","value":"EdgeReference {  }","parent":null,"children":[{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3771}],"decl_id":null,"docs":" Reference to a `StableGraph` edge.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233993,"byte_end":233999,"line_start":1223,"line_end":1223,"column_start":12,"column_end":18},"name":"weight","qualname":"<EdgeReference>::weight","value":"fn (&self) -> &'a E","parent":null,"children":[],"decl_id":null,"docs":" Access the edge’s weight.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2185},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":235011,"byte_end":235016,"line_start":1261,"line_end":1261,"column_start":12,"column_end":17},"name":"Edges","qualname":"::graph_impl::stable_graph::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2195}],"decl_id":null,"docs":" Iterator over the edges of from or to a node\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":237897,"byte_end":237911,"line_start":1353,"line_end":1353,"column_start":12,"column_end":26},"name":"EdgeReferences","qualname":"::graph_impl::stable_graph::EdgeReferences","value":"EdgeReferences {  }","parent":null,"children":[{"krate":0,"index":2220}],"decl_id":null,"docs":" Iterator over all edges of a graph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239000,"byte_end":239009,"line_start":1393,"line_end":1393,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::graph_impl::stable_graph::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242}],"decl_id":null,"docs":" Iterator over the neighbors of a node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239524,"byte_end":239530,"line_start":1409,"line_end":1409,"column_start":12,"column_end":18},"name":"detach","qualname":"<Neighbors>::detach","value":"fn (&self) -> WalkNeighbors<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return a “walker” object that can be used to step through the\n neighbors and edges from the origin node.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2255},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241902,"byte_end":241915,"line_start":1485,"line_end":1485,"column_start":12,"column_end":25},"name":"WalkNeighbors","qualname":"::graph_impl::stable_graph::WalkNeighbors","value":"WalkNeighbors {  }","parent":null,"children":[{"krate":0,"index":2257}],"decl_id":null,"docs":" A “walker” object that can be used to step through the edge list of a node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242435,"byte_end":242439,"line_start":1500,"line_end":1500,"column_start":12,"column_end":16},"name":"next","qualname":"<WalkNeighbors<Ix>>::next","value":"fn <N, E, Ty> (&mut self, g: &StableGraph<N, E, Ty, Ix>) -> Option<(EdgeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Step to the next edge and its endpoint node in the walk for graph `g`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242602,"byte_end":242611,"line_start":1505,"line_end":1505,"column_start":12,"column_end":21},"name":"next_node","qualname":"<WalkNeighbors<Ix>>::next_node","value":"fn <N, E, Ty> (&mut self, g: &StableGraph<N, E, Ty, Ix>) -> Option<NodeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242765,"byte_end":242774,"line_start":1511,"line_end":1511,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<WalkNeighbors<Ix>>::next_edge","value":"fn <N, E, Ty> (&mut self, g: &StableGraph<N, E, Ty, Ix>) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2276},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242977,"byte_end":242988,"line_start":1519,"line_end":1519,"column_start":12,"column_end":23},"name":"NodeIndices","qualname":"::graph_impl::stable_graph::NodeIndices","value":"NodeIndices {  }","parent":null,"children":[{"krate":0,"index":2280}],"decl_id":null,"docs":" Iterator over the node indices of a graph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2304},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":244333,"byte_end":244344,"line_start":1565,"line_end":1565,"column_start":12,"column_end":23},"name":"EdgeIndices","qualname":"::graph_impl::stable_graph::EdgeIndices","value":"EdgeIndices {  }","parent":null,"children":[{"krate":0,"index":2308}],"decl_id":null,"docs":" Iterator over the edge indices of a graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":247799,"byte_end":247802,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<Frozen>::new","value":"fn (gr: &'a mut G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Frozen` from a mutable reference to a graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248677,"byte_end":248692,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"index_twice_mut","qualname":"<Frozen>::index_twice_mut","value":"fn <T, U> (&mut self, i: T, j: U) -> (&mut <Graph<N, E, Ty, Ix> as Index<T>>::Output,\n &mut <Graph<N, E, Ty, Ix> as Index<U>>::Output)","parent":null,"children":[],"decl_id":null,"docs":" Index the `Graph` by two indices, any combination of\n node or edge indices is fine.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2386},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":192354,"byte_end":192360,"line_start":2034,"line_end":2034,"column_start":12,"column_end":18},"name":"Frozen","qualname":"::graph_impl::Frozen","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Frozen` is a graph wrapper.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2391},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dot","qualname":"::dot","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","parent":null,"children":[{"krate":0,"index":2392},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":2403},{"krate":0,"index":2405},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":3866},{"krate":0,"index":3883},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":2413},{"krate":0,"index":2418},{"krate":0,"index":2422},{"krate":0,"index":2430},{"krate":0,"index":2436},{"krate":0,"index":2442},{"krate":0,"index":2446},{"krate":0,"index":2450},{"krate":0,"index":2454},{"krate":0,"index":2457},{"krate":0,"index":2461}],"decl_id":null,"docs":" Simple graphviz dot file format output.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251392,"byte_end":251395,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"Dot","qualname":"::dot::Dot","value":"Dot {  }","parent":null,"children":[{"krate":0,"index":2401},{"krate":0,"index":2402}],"decl_id":null,"docs":" `Dot` implements output to graphviz .dot format for a graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251713,"byte_end":251716,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Dot>::new","value":"fn (graph: G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dot` formatting wrapper with default configuration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251862,"byte_end":251873,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Dot>::with_config","value":"fn (graph: G, config: &'a [Config]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dot` formatting wrapper with custom configuration.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3867},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252195,"byte_end":252209,"line_start":78,"line_end":78,"column_start":5,"column_end":19},"name":"NodeIndexLabel","qualname":"::dot::Config::NodeIndexLabel","value":"Config::NodeIndexLabel","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" Use indices for node labels.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3869},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252252,"byte_end":252266,"line_start":80,"line_end":80,"column_start":5,"column_end":19},"name":"EdgeIndexLabel","qualname":"::dot::Config::EdgeIndexLabel","value":"Config::EdgeIndexLabel","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" Use indices for edge labels.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3871},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252300,"byte_end":252311,"line_start":82,"line_end":82,"column_start":5,"column_end":16},"name":"EdgeNoLabel","qualname":"::dot::Config::EdgeNoLabel","value":"Config::EdgeNoLabel","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" Use no edge labels.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3873},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252336,"byte_end":252347,"line_start":84,"line_end":84,"column_start":5,"column_end":16},"name":"_Incomplete","qualname":"::dot::Config::_Incomplete","value":"Config::_Incomplete(())","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252145,"byte_end":252151,"line_start":76,"line_end":76,"column_start":10,"column_end":16},"name":"Config","qualname":"::dot::Config","value":"Config::{NodeIndexLabel, EdgeIndexLabel, EdgeNoLabel, _Incomplete}","parent":null,"children":[{"krate":0,"index":3867},{"krate":0,"index":3869},{"krate":0,"index":3871},{"krate":0,"index":3873}],"decl_id":null,"docs":" `Dot` configuration.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2464},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unionfind","qualname":"::unionfind","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","parent":null,"children":[{"krate":0,"index":2465},{"krate":0,"index":3887},{"krate":0,"index":3894},{"krate":0,"index":3891},{"krate":0,"index":2466},{"krate":0,"index":2468}],"decl_id":null,"docs":" `UnionFind<K>` is a disjoint-set data structure.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3887},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":256782,"byte_end":256791,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"UnionFind","qualname":"::unionfind::UnionFind","value":"UnionFind {  }","parent":null,"children":[{"krate":0,"index":3889},{"krate":0,"index":3890}],"decl_id":null,"docs":" `UnionFind<K>` is a disjoint-set data structure. It tracks set membership of *n* elements\n indexed from *0* to *n - 1*. The scalar type is `K` which must be an unsigned integer type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":257566,"byte_end":257569,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<UnionFind<K>>::new","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `UnionFind` of `n` disjoint sets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":257846,"byte_end":257850,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"find","qualname":"<UnionFind<K>>::find","value":"fn (&self, x: K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Return the representative for `x`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":258542,"byte_end":258550,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"find_mut","qualname":"<UnionFind<K>>::find_mut","value":"fn (&mut self, x: K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Return the representative for `x`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":259297,"byte_end":259302,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"union","qualname":"<UnionFind<K>>::union","value":"fn (&mut self, x: K, y: K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Unify the two sets containing `x` and `y`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":260178,"byte_end":260191,"line_start":133,"line_end":133,"column_start":12,"column_end":25},"name":"into_labeling","qualname":"<UnionFind<K>>::into_labeling","value":"fn (mut self) -> Vec<K>","parent":null,"children":[],"decl_id":null,"docs":" Return a vector mapping each element to its representative.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":261360,"byte_end":261368,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"dijkstra","qualname":"::dijkstra::dijkstra","value":"fn <G, F, K> (graph: G, start: G::NodeId, goal: Option<G::NodeId>, mut edge_cost: F) -> HashMap<G::NodeId, K>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Dijkstra's shortest path algorithm.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264763,"byte_end":264768,"line_start":67,"line_end":67,"column_start":8,"column_end":13},"name":"astar","qualname":"::astar::astar","value":"fn <G, F, H, K, IsGoal> (graph: G, start: G::NodeId, mut is_goal: IsGoal, mut edge_cost: F, mut estimate_cost: H) -> Option<(K, Vec<G::NodeId>)>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] A* shortest path algorithm.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2525},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"csr","qualname":"::csr","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2542},{"krate":0,"index":2546},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2555},{"krate":0,"index":2559},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":3897},{"krate":0,"index":3908},{"krate":0,"index":2563},{"krate":0,"index":2569},{"krate":0,"index":2575},{"krate":0,"index":3914},{"krate":0,"index":3918},{"krate":0,"index":3916},{"krate":0,"index":2583},{"krate":0,"index":2591},{"krate":0,"index":3920},{"krate":0,"index":3935},{"krate":0,"index":3929},{"krate":0,"index":3941},{"krate":0,"index":3951},{"krate":0,"index":2612},{"krate":0,"index":2618},{"krate":0,"index":2623},{"krate":0,"index":2629},{"krate":0,"index":2641},{"krate":0,"index":2649},{"krate":0,"index":2656},{"krate":0,"index":2665},{"krate":0,"index":2677},{"krate":0,"index":2684},{"krate":0,"index":2692},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2708},{"krate":0,"index":3957},{"krate":0,"index":3965},{"krate":0,"index":3961},{"krate":0,"index":2709},{"krate":0,"index":2715},{"krate":0,"index":2723},{"krate":0,"index":2731},{"krate":0,"index":2736},{"krate":0,"index":2743},{"krate":0,"index":2749},{"krate":0,"index":2753},{"krate":0,"index":2758},{"krate":0,"index":2766},{"krate":0,"index":2772}],"decl_id":null,"docs":" Compressed Sparse Row (CSR) is a sparse adjacency matrix graph.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2559},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268461,"byte_end":268470,"line_start":25,"line_end":25,"column_start":10,"column_end":19},"name":"NodeIndex","qualname":"::csr::NodeIndex","value":"Ix","parent":null,"children":[],"decl_id":null,"docs":" Csr node index type, a plain integer.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2561},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268544,"byte_end":268553,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"EdgeIndex","qualname":"::csr::EdgeIndex","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Csr edge index type, a plain integer.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3897},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269287,"byte_end":269290,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"Csr","qualname":"::csr::Csr","value":"Csr {  }","parent":null,"children":[{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907}],"decl_id":null,"docs":" Compressed Sparse Row ([`CSR`]) is a sparse adjacency matrix graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270332,"byte_end":270335,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<Csr<N, E, Ty, Ix>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `Csr`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271173,"byte_end":271183,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"with_nodes","qualname":"<Csr<N, E, Ty, Ix>>::with_nodes","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Csr`] with `n` nodes. `N` must implement [`Default`] for the weight of each node.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3914},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271576,"byte_end":271590,"line_start":135,"line_end":135,"column_start":12,"column_end":26},"name":"EdgesNotSorted","qualname":"::csr::EdgesNotSorted","value":"EdgesNotSorted {  }","parent":null,"children":[{"krate":0,"index":3915}],"decl_id":null,"docs":" Csr creation error: edges were not in sorted order.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272367,"byte_end":272384,"line_start":164,"line_end":164,"column_start":12,"column_end":29},"name":"from_sorted_edges","qualname":"<Csr<N, E, Directed, Ix>>::from_sorted_edges","value":"fn <Edge> (edges: &[Edge]) -> Result<Self, EdgesNotSorted>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Csr` from a sorted sequence of edges","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275368,"byte_end":275378,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"node_count","qualname":"<Csr<N, E, Ty, Ix>>::node_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275442,"byte_end":275452,"line_start":245,"line_end":245,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<Csr<N, E, Ty, Ix>>::edge_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275606,"byte_end":275617,"line_start":253,"line_end":253,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<Csr<N, E, Ty, Ix>>::is_directed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275704,"byte_end":275715,"line_start":258,"line_end":258,"column_start":12,"column_end":23},"name":"clear_edges","qualname":"<Csr<N, E, Ty, Ix>>::clear_edges","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":276030,"byte_end":276038,"line_start":270,"line_end":270,"column_start":12,"column_end":20},"name":"add_node","qualname":"<Csr<N, E, Ty, Ix>>::add_node","value":"fn (&mut self, weight: N) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new node with the given weight, returning the corresponding node index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":276462,"byte_end":276470,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<Csr<N, E, Ty, Ix>>::add_edge","value":"fn (&mut self, a: NodeIndex<Ix>, b: NodeIndex<Ix>, weight: E) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the edge was added","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":278306,"byte_end":278319,"line_start":338,"line_end":338,"column_start":12,"column_end":25},"name":"contains_edge","qualname":"<Csr<N, E, Ty, Ix>>::contains_edge","value":"fn (&self, a: NodeIndex<Ix>, b: NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(log |V|)** time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":278900,"byte_end":278910,"line_start":356,"line_end":356,"column_start":12,"column_end":22},"name":"out_degree","qualname":"<Csr<N, E, Ty, Ix>>::out_degree","value":"fn (&self, a: NodeIndex<Ix>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279124,"byte_end":279139,"line_start":364,"line_end":364,"column_start":12,"column_end":27},"name":"neighbors_slice","qualname":"<Csr<N, E, Ty, Ix>>::neighbors_slice","value":"fn (&self, a: NodeIndex<Ix>) -> &[NodeIndex<Ix>]","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279330,"byte_end":279341,"line_start":371,"line_end":371,"column_start":12,"column_end":23},"name":"edges_slice","qualname":"<Csr<N, E, Ty, Ix>>::edges_slice","value":"fn (&self, a: NodeIndex<Ix>) -> &[E]","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279719,"byte_end":279724,"line_start":382,"line_end":382,"column_start":12,"column_end":17},"name":"edges","qualname":"<Csr<N, E, Ty, Ix>>::edges","value":"fn (&self, a: NodeIndex<Ix>) -> Edges<E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3920},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280023,"byte_end":280028,"line_start":394,"line_end":394,"column_start":12,"column_end":17},"name":"Edges","qualname":"::csr::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":3925},{"krate":0,"index":3926},{"krate":0,"index":3927},{"krate":0,"index":3928}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3941},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280241,"byte_end":280254,"line_start":402,"line_end":402,"column_start":12,"column_end":25},"name":"EdgeReference","qualname":"::csr::EdgeReference","value":"EdgeReference {  }","parent":null,"children":[{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2628},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280854,"byte_end":280860,"line_start":425,"line_end":425,"column_start":12,"column_end":18},"name":"weight","qualname":"<EdgeReference>::weight","value":"fn (&self) -> &'a E","parent":null,"children":[],"decl_id":null,"docs":" Access the edge’s weight.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2665},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":282544,"byte_end":282558,"line_start":489,"line_end":489,"column_start":12,"column_end":26},"name":"EdgeReferences","qualname":"::csr::EdgeReferences","value":"EdgeReferences {  }","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3957},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284630,"byte_end":284639,"line_start":566,"line_end":566,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::csr::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":3960}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2749},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286481,"byte_end":286496,"line_start":639,"line_end":639,"column_start":12,"column_end":27},"name":"NodeIdentifiers","qualname":"::csr::NodeIdentifiers","value":"NodeIdentifiers {  }","parent":null,"children":[{"krate":0,"index":2751},{"krate":0,"index":2752}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2852},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302207,"byte_end":302220,"line_start":166,"line_end":166,"column_start":8,"column_end":21},"name":"is_isomorphic","qualname":"::isomorphism::is_isomorphic","value":"fn <N, E, Ty, Ix> (g0: &Graph<N, E, Ty, Ix>, g1: &Graph<N, E, Ty, Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [Graph] Return `true` if the graphs `g0` and `g1` are isomorphic.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2857},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302913,"byte_end":302935,"line_start":185,"line_end":185,"column_start":8,"column_end":30},"name":"is_isomorphic_matching","qualname":"::isomorphism::is_isomorphic_matching","value":"fn <N, E, Ty, Ix, F, G> (g0: &Graph<N, E, Ty, Ix>, g1: &Graph<N, E, Ty, Ix>, mut node_match: F, mut edge_match: G) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [Graph] Return `true` if the graphs `g0` and `g1` are isomorphic.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2925},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2932},{"krate":0,"index":2936},{"krate":0,"index":2940},{"krate":0,"index":2944},{"krate":0,"index":2950}],"decl_id":null,"docs":" Commonly used items.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2952},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1705,"byte_end":1710,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"name":"graph","qualname":"::graph","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":2953}],"decl_id":null,"docs":" `Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4013},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2690,"byte_end":2698,"line_start":119,"line_end":119,"column_start":5,"column_end":13},"name":"Outgoing","qualname":"::Direction::Outgoing","value":"Direction::Outgoing","parent":{"krate":0,"index":4012},"children":[],"decl_id":null,"docs":" An `Outgoing` edge is an outward edge *from* the current node.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4016},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2777,"byte_end":2785,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"name":"Incoming","qualname":"::Direction::Incoming","value":"Direction::Incoming","parent":{"krate":0,"index":4012},"children":[],"decl_id":null,"docs":" An `Incoming` edge is an inbound edge *to* the current node.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4012},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2603,"byte_end":2612,"line_start":117,"line_end":117,"column_start":10,"column_end":19},"name":"Direction","qualname":"::Direction","value":"Direction::{Outgoing, Incoming}","parent":null,"children":[{"krate":0,"index":4013},{"krate":0,"index":4016}],"decl_id":null,"docs":" Edge direction.\n","sig":null,"attributes":[{"value":"repr(usize)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2579,"byte_end":2593,"line_start":116,"line_end":116,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2900,"byte_end":2908,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"opposite","qualname":"<Direction>::opposite","value":"fn (&self) -> Direction","parent":null,"children":[],"decl_id":null,"docs":" Return the opposite `Direction`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2879,"byte_end":2888,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2982},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3121,"byte_end":3126,"line_start":138,"line_end":138,"column_start":12,"column_end":17},"name":"index","qualname":"<Direction>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return `0` for `Outgoing` and `1` for `Incoming`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3100,"byte_end":3109,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":4037},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3307,"byte_end":3315,"line_start":148,"line_end":148,"column_start":10,"column_end":18},"name":"Directed","qualname":"::Directed","value":"Directed::{}","parent":null,"children":[],"decl_id":null,"docs":" Marker type for a directed graph.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4043},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3416,"byte_end":3426,"line_start":153,"line_end":153,"column_start":10,"column_end":20},"name":"Undirected","qualname":"::Undirected","value":"Undirected::{}","parent":null,"children":[],"decl_id":null,"docs":" Marker type for an undirected graph.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3539,"byte_end":3547,"line_start":157,"line_end":157,"column_start":11,"column_end":19},"name":"EdgeType","qualname":"::EdgeType","value":"EdgeType","parent":null,"children":[{"krate":0,"index":2985}],"decl_id":null,"docs":" A graph's edge type determines whether is has directed edges or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3557,"byte_end":3568,"line_start":158,"line_end":158,"column_start":8,"column_end":19},"name":"is_directed","qualname":"::EdgeType::is_directed","value":"fn () -> bool","parent":{"krate":0,"index":2984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2990},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3927,"byte_end":3943,"line_start":176,"line_end":176,"column_start":11,"column_end":27},"name":"IntoWeightedEdge","qualname":"::IntoWeightedEdge","value":"IntoWeightedEdge<E>","parent":null,"children":[{"krate":0,"index":2992},{"krate":0,"index":2993}],"decl_id":null,"docs":" Convert an element like `(i, j)` or `(i, j, w)` into\n a triple of source, target, edge weight.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2992},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3958,"byte_end":3964,"line_start":177,"line_end":177,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::IntoWeightedEdge::NodeId","value":"type NodeId;","parent":{"krate":0,"index":2990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3973,"byte_end":3991,"line_start":178,"line_end":178,"column_start":8,"column_end":26},"name":"into_weighted_edge","qualname":"::IntoWeightedEdge::into_weighted_edge","value":"fn (self) -> (Self::NodeId, Self::NodeId, E)","parent":{"krate":0,"index":2990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":5797,"byte_end":5806,"line_start":15,"line_end":15,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":5963,"byte_end":5972,"line_start":22,"line_end":22,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":6021,"byte_end":6030,"line_start":24,"line_end":24,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":6196,"byte_end":6205,"line_start":31,"line_end":31,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30918,"byte_end":30925,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31537,"byte_end":31544,"line_start":71,"line_end":71,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31735,"byte_end":31741,"line_start":78,"line_end":78,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31909,"byte_end":31916,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36689,"byte_end":36692,"line_start":45,"line_end":45,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39019,"byte_end":39031,"line_start":128,"line_end":128,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42137,"byte_end":42140,"line_start":231,"line_end":231,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43519,"byte_end":43523,"line_start":279,"line_end":279,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46908,"byte_end":46918,"line_start":379,"line_end":379,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47206,"byte_end":47216,"line_start":396,"line_end":396,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47424,"byte_end":47427,"line_start":406,"line_end":406,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47637,"byte_end":47649,"line_start":415,"line_end":415,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47859,"byte_end":47862,"line_start":424,"line_end":424,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":48072,"byte_end":48076,"line_start":433,"line_end":433,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9657,"byte_end":9663,"line_start":105,"line_end":105,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15092,"byte_end":15097,"line_start":290,"line_end":290,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15636,"byte_end":15647,"line_start":311,"line_end":311,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18309,"byte_end":18317,"line_start":422,"line_end":422,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18807,"byte_end":18812,"line_start":446,"line_end":446,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18971,"byte_end":18982,"line_start":454,"line_end":454,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19133,"byte_end":19141,"line_start":462,"line_end":462,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20623,"byte_end":20628,"line_start":518,"line_end":518,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20938,"byte_end":20943,"line_start":527,"line_end":527,"column_start":45,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21383,"byte_end":21394,"line_start":543,"line_end":543,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21663,"byte_end":21674,"line_start":554,"line_end":554,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21925,"byte_end":21936,"line_start":565,"line_end":565,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22152,"byte_end":22159,"line_start":576,"line_end":576,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22875,"byte_end":22880,"line_start":603,"line_end":603,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23038,"byte_end":23043,"line_start":610,"line_end":610,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23407,"byte_end":23418,"line_start":624,"line_end":624,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23609,"byte_end":23620,"line_start":632,"line_end":632,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23990,"byte_end":24001,"line_start":647,"line_end":647,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24179,"byte_end":24187,"line_start":657,"line_end":657,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24339,"byte_end":24347,"line_start":665,"line_end":665,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":25442,"byte_end":25450,"line_start":700,"line_end":700,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48889,"byte_end":48890,"line_start":32,"line_end":32,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49084,"byte_end":49095,"line_start":41,"line_end":41,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49309,"byte_end":49316,"line_start":50,"line_end":50,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49566,"byte_end":49578,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49835,"byte_end":49847,"line_start":72,"line_end":72,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":50515,"byte_end":50536,"line_start":99,"line_end":99,"column_start":29,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":52408,"byte_end":52425,"line_start":167,"line_end":167,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":53438,"byte_end":53464,"line_start":206,"line_end":206,"column_start":32,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54435,"byte_end":54452,"line_start":245,"line_end":245,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54849,"byte_end":54861,"line_start":261,"line_end":261,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55755,"byte_end":55756,"line_start":293,"line_end":293,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56263,"byte_end":56275,"line_start":312,"line_end":312,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56542,"byte_end":56554,"line_start":322,"line_end":322,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":57157,"byte_end":57178,"line_start":348,"line_end":348,"column_start":29,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":58495,"byte_end":58512,"line_start":400,"line_end":400,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":59898,"byte_end":59906,"line_start":30,"line_end":30,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60004,"byte_end":60012,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60100,"byte_end":60108,"line_start":39,"line_end":39,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60349,"byte_end":60357,"line_start":49,"line_end":49,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60640,"byte_end":60648,"line_start":60,"line_end":60,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60977,"byte_end":60998,"line_start":77,"line_end":77,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61416,"byte_end":61424,"line_start":97,"line_end":97,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61853,"byte_end":61875,"line_start":114,"line_end":114,"column_start":22,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64668,"byte_end":64673,"line_start":73,"line_end":73,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64798,"byte_end":64803,"line_start":80,"line_end":80,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65125,"byte_end":65130,"line_start":92,"line_end":92,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65514,"byte_end":65525,"line_start":105,"line_end":105,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65880,"byte_end":65891,"line_start":118,"line_end":118,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":66240,"byte_end":66245,"line_start":130,"line_end":130,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":66910,"byte_end":66921,"line_start":154,"line_end":154,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":67578,"byte_end":67586,"line_start":178,"line_end":178,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68382,"byte_end":68387,"line_start":209,"line_end":209,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68626,"byte_end":68637,"line_start":219,"line_end":219,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68868,"byte_end":68876,"line_start":229,"line_end":229,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":70917,"byte_end":70922,"line_start":302,"line_end":302,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71267,"byte_end":71278,"line_start":315,"line_end":315,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71615,"byte_end":71623,"line_start":328,"line_end":328,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72858,"byte_end":72859,"line_start":364,"line_end":364,"column_start":49,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":73209,"byte_end":73223,"line_start":379,"line_end":379,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95136,"byte_end":95146,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96821,"byte_end":96835,"line_start":89,"line_end":89,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80378,"byte_end":80386,"line_start":179,"line_end":179,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80642,"byte_end":80650,"line_start":192,"line_end":192,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":89939,"byte_end":89954,"line_start":488,"line_end":488,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91346,"byte_end":91351,"line_start":531,"line_end":531,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93849,"byte_end":93850,"line_start":607,"line_end":607,"column_start":21,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105392,"byte_end":105400,"line_start":80,"line_end":80,"column_start":77,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105624,"byte_end":105625,"line_start":88,"line_end":88,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105818,"byte_end":105834,"line_start":97,"line_end":97,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106044,"byte_end":106060,"line_start":106,"line_end":106,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106175,"byte_end":106183,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":117088,"byte_end":117096,"line_start":434,"line_end":434,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":117614,"byte_end":117622,"line_start":453,"line_end":453,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":119079,"byte_end":119088,"line_start":511,"line_end":511,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":119697,"byte_end":119714,"line_start":538,"line_end":538,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":120367,"byte_end":120372,"line_start":566,"line_end":566,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":121380,"byte_end":121388,"line_start":603,"line_end":603,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":122125,"byte_end":122133,"line_start":633,"line_end":633,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":122516,"byte_end":122527,"line_start":647,"line_end":647,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":123214,"byte_end":123225,"line_start":673,"line_end":673,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":123767,"byte_end":123775,"line_start":694,"line_end":694,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124145,"byte_end":124153,"line_start":707,"line_end":707,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124481,"byte_end":124489,"line_start":718,"line_end":718,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124981,"byte_end":124984,"line_start":733,"line_end":733,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125017,"byte_end":125020,"line_start":734,"line_end":734,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125161,"byte_end":125164,"line_start":744,"line_end":744,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125367,"byte_end":125370,"line_start":752,"line_end":752,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125507,"byte_end":125510,"line_start":759,"line_end":759,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125777,"byte_end":125780,"line_start":769,"line_end":769,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125882,"byte_end":125885,"line_start":776,"line_end":776,"column_start":20,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125918,"byte_end":125921,"line_start":778,"line_end":778,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126094,"byte_end":126097,"line_start":787,"line_end":787,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126603,"byte_end":126611,"line_start":808,"line_end":808,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126965,"byte_end":126980,"line_start":823,"line_end":823,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":127793,"byte_end":127807,"line_start":855,"line_end":855,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":128052,"byte_end":128060,"line_start":866,"line_end":866,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":128478,"byte_end":128486,"line_start":881,"line_end":881,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130752,"byte_end":130761,"line_start":91,"line_end":91,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131142,"byte_end":131151,"line_start":115,"line_end":115,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131243,"byte_end":131252,"line_start":119,"line_end":119,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131782,"byte_end":131791,"line_start":136,"line_end":136,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132283,"byte_end":132292,"line_start":161,"line_end":161,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133119,"byte_end":133123,"line_start":194,"line_end":194,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3716}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133280,"byte_end":133284,"line_start":202,"line_end":202,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133791,"byte_end":133795,"line_start":223,"line_end":223,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3729}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133975,"byte_end":133979,"line_start":231,"line_end":231,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":138155,"byte_end":138160,"line_start":345,"line_end":345,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":138571,"byte_end":138576,"line_start":363,"line_end":363,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140395,"byte_end":140400,"line_start":421,"line_end":421,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140777,"byte_end":140782,"line_start":434,"line_end":434,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141182,"byte_end":141187,"line_start":447,"line_end":447,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":1529},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1590},{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":174071,"byte_end":174080,"line_start":1367,"line_end":1367,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":175324,"byte_end":175333,"line_start":1410,"line_end":1410,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176206,"byte_end":176215,"line_start":1439,"line_end":1439,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3730}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176402,"byte_end":176411,"line_start":1449,"line_end":1449,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":177275,"byte_end":177289,"line_start":1482,"line_end":1482,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1650},{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":178913,"byte_end":178918,"line_start":1544,"line_end":1544,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":180590,"byte_end":180595,"line_start":1596,"line_end":1596,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":181099,"byte_end":181113,"line_start":1616,"line_end":1616,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":181587,"byte_end":181601,"line_start":1635,"line_end":1635,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":182019,"byte_end":182024,"line_start":1652,"line_end":1652,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":182360,"byte_end":182365,"line_start":1665,"line_end":1665,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":182694,"byte_end":182699,"line_start":1678,"line_end":1678,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183035,"byte_end":183040,"line_start":1691,"line_end":1691,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183280,"byte_end":183285,"line_start":1701,"line_end":1701,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183622,"byte_end":183631,"line_start":1716,"line_end":1716,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1760},{"krate":0,"index":1761}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183801,"byte_end":183810,"line_start":1723,"line_end":1723,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185171,"byte_end":185184,"line_start":1770,"line_end":1770,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185379,"byte_end":185392,"line_start":1781,"line_end":1781,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1776},{"krate":0,"index":1780},{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187172,"byte_end":187183,"line_start":1833,"line_end":1833,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187446,"byte_end":187457,"line_start":1845,"line_end":1845,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187610,"byte_end":187621,"line_start":1851,"line_end":1851,"column_start":43,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187832,"byte_end":187843,"line_start":1860,"line_end":1860,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188106,"byte_end":188117,"line_start":1872,"line_end":1872,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188270,"byte_end":188281,"line_start":1878,"line_end":1878,"column_start":43,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188509,"byte_end":188522,"line_start":1888,"line_end":1888,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188625,"byte_end":188638,"line_start":1894,"line_end":1894,"column_start":37,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188696,"byte_end":188709,"line_start":1896,"line_end":1896,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":189415,"byte_end":189429,"line_start":1922,"line_end":1922,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":189787,"byte_end":189801,"line_start":1938,"line_end":1938,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190036,"byte_end":190050,"line_start":1948,"line_end":1948,"column_start":39,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190107,"byte_end":190120,"line_start":1952,"line_end":1952,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190404,"byte_end":190417,"line_start":1962,"line_end":1962,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190942,"byte_end":190956,"line_start":1981,"line_end":1981,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191425,"byte_end":191439,"line_start":2001,"line_end":2001,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191783,"byte_end":191797,"line_start":2015,"line_end":2015,"column_start":39,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":196007,"byte_end":196018,"line_start":132,"line_end":132,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197618,"byte_end":197629,"line_start":176,"line_end":176,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197993,"byte_end":198004,"line_start":187,"line_end":187,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2027},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2033},{"krate":0,"index":2043},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":227300,"byte_end":227311,"line_start":997,"line_end":997,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":228026,"byte_end":228037,"line_start":1022,"line_end":1022,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2069}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":228378,"byte_end":228389,"line_start":1035,"line_end":1035,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":228723,"byte_end":228734,"line_start":1048,"line_end":1048,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":229075,"byte_end":229086,"line_start":1061,"line_end":1061,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":229331,"byte_end":229342,"line_start":1071,"line_end":1071,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":229691,"byte_end":229702,"line_start":1084,"line_end":1084,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":230883,"byte_end":230888,"line_start":1118,"line_end":1118,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2108}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":232513,"byte_end":232527,"line_start":1165,"line_end":1165,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":232943,"byte_end":232957,"line_start":1182,"line_end":1182,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233403,"byte_end":233416,"line_start":1200,"line_end":1200,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233519,"byte_end":233532,"line_start":1206,"line_end":1206,"column_start":37,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233590,"byte_end":233603,"line_start":1208,"line_end":1208,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233766,"byte_end":233779,"line_start":1216,"line_end":1216,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2157}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":234063,"byte_end":234076,"line_start":1226,"line_end":1226,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":235547,"byte_end":235552,"line_start":1280,"line_end":1280,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2201},{"krate":0,"index":2202}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":238042,"byte_end":238056,"line_start":1357,"line_end":1357,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2225},{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":238509,"byte_end":238523,"line_start":1374,"line_end":1374,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239196,"byte_end":239205,"line_start":1401,"line_end":1401,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239767,"byte_end":239776,"line_start":1419,"line_end":1419,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2253},{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241992,"byte_end":242005,"line_start":1489,"line_end":1489,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3777}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242076,"byte_end":242089,"line_start":1493,"line_end":1493,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2266},{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":243130,"byte_end":243141,"line_start":1523,"line_end":1523,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":243572,"byte_end":243583,"line_start":1540,"line_end":1540,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":243854,"byte_end":243865,"line_start":1550,"line_end":1550,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":244486,"byte_end":244497,"line_start":1569,"line_end":1569,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":244928,"byte_end":244939,"line_start":1586,"line_end":1586,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2321}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":247705,"byte_end":247711,"line_start":17,"line_end":17,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2359}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":247993,"byte_end":247999,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2363},{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248098,"byte_end":248104,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2369},{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248259,"byte_end":248265,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248402,"byte_end":248408,"line_start":44,"line_end":44,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251601,"byte_end":251604,"line_start":57,"line_end":57,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2411},{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252489,"byte_end":252492,"line_start":90,"line_end":90,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2425}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":254330,"byte_end":254333,"line_start":137,"line_end":137,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":254666,"byte_end":254669,"line_start":147,"line_end":147,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2439}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":255109,"byte_end":255116,"line_start":162,"line_end":162,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":255706,"byte_end":255713,"line_start":186,"line_end":186,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2456}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":256060,"byte_end":256068,"line_start":201,"line_end":201,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":257462,"byte_end":257471,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":267215,"byte_end":267226,"line_start":142,"line_end":142,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269710,"byte_end":269713,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269885,"byte_end":269888,"line_start":70,"line_end":70,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2574}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270221,"byte_end":270224,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271644,"byte_end":271647,"line_start":139,"line_end":139,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275287,"byte_end":275290,"line_start":236,"line_end":236,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280451,"byte_end":280464,"line_start":410,"line_end":410,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280570,"byte_end":280583,"line_start":416,"line_end":416,"column_start":36,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280624,"byte_end":280637,"line_start":418,"line_end":418,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2628}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280928,"byte_end":280941,"line_start":428,"line_end":428,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":281325,"byte_end":281330,"line_start":442,"line_end":442,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2646},{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":281845,"byte_end":281848,"line_start":462,"line_end":462,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2654},{"krate":0,"index":2655}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":282860,"byte_end":282874,"line_start":499,"line_end":499,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2682},{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284022,"byte_end":284025,"line_start":539,"line_end":539,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2697},{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284247,"byte_end":284250,"line_start":549,"line_end":549,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284735,"byte_end":284744,"line_start":570,"line_end":570,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":285638,"byte_end":285641,"line_start":604,"line_end":604,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":285941,"byte_end":285944,"line_start":613,"line_end":613,"column_start":45,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286057,"byte_end":286060,"line_start":619,"line_end":619,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2741},{"krate":0,"index":2742}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286290,"byte_end":286293,"line_start":630,"line_end":630,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286586,"byte_end":286601,"line_start":644,"line_end":644,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":287211,"byte_end":287214,"line_start":671,"line_end":671,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":287387,"byte_end":287390,"line_start":680,"line_end":680,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":293844,"byte_end":293852,"line_start":9,"line_end":9,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2791}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":294191,"byte_end":294199,"line_start":25,"line_end":25,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":295006,"byte_end":295007,"line_start":58,"line_end":58,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":295044,"byte_end":295050,"line_start":61,"line_end":61,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_utils.rs","byte_start":296993,"byte_end":296994,"line_start":31,"line_end":31,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":298043,"byte_end":298051,"line_start":37,"line_end":37,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2846},{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":303729,"byte_end":303744,"line_start":209,"line_end":209,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2872},{"krate":0,"index":2873}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":303899,"byte_end":303900,"line_start":216,"line_end":216,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2877},{"krate":0,"index":2878}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/traits_graph.rs","byte_start":312695,"byte_end":312700,"line_start":23,"line_end":23,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/traits_graph.rs","byte_start":313667,"byte_end":313678,"line_start":56,"line_end":56,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2822,"byte_end":2831,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2981},{"krate":0,"index":2982}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3601,"byte_end":3609,"line_start":161,"line_end":161,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2987}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3685,"byte_end":3695,"line_start":166,"line_end":166,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1188,"byte_end":1193,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":28}},{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1216,"byte_end":1220,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":713}},{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1231,"byte_end":1235,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":859}},{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":75495,"byte_end":75505,"line_start":7,"line_end":7,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":860}},{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1321,"byte_end":1329,"line_start":52,"line_end":52,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1013}},{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191878,"byte_end":191890,"line_start":2020,"line_end":2020,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":1895}},{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1355,"byte_end":1358,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2391}},{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1368,"byte_end":1377,"line_start":55,"line_end":55,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2464}},{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1412,"byte_end":1415,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2525}},{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1596,"byte_end":1603,"line_start":69,"line_end":69,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2925}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":5797,"byte_end":5806,"line_start":15,"line_end":15,"column_start":38,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":5963,"byte_end":5972,"line_start":22,"line_end":22,"column_start":31,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":6021,"byte_end":6030,"line_start":24,"line_end":24,"column_start":39,"column_end":48},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":6196,"byte_end":6205,"line_start":31,"line_end":31,"column_start":32,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30918,"byte_end":30925,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31537,"byte_end":31544,"line_start":71,"line_end":71,"column_start":25,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3097},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31735,"byte_end":31741,"line_start":78,"line_end":78,"column_start":25,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":29578},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31909,"byte_end":31916,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3097},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36689,"byte_end":36692,"line_start":45,"line_end":45,"column_start":13,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39019,"byte_end":39031,"line_start":128,"line_end":128,"column_start":13,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42137,"byte_end":42140,"line_start":231,"line_end":231,"column_start":13,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43519,"byte_end":43523,"line_start":279,"line_end":279,"column_start":13,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46908,"byte_end":46918,"line_start":379,"line_end":379,"column_start":12,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47206,"byte_end":47216,"line_start":396,"line_end":396,"column_start":25,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3157},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47424,"byte_end":47427,"line_start":406,"line_end":406,"column_start":23,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3112},"to":{"krate":0,"index":135}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47637,"byte_end":47649,"line_start":415,"line_end":415,"column_start":23,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3125},"to":{"krate":0,"index":135}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47859,"byte_end":47862,"line_start":424,"line_end":424,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3139},"to":{"krate":0,"index":135}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":48072,"byte_end":48076,"line_start":433,"line_end":433,"column_start":23,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3148},"to":{"krate":0,"index":135}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9554,"byte_end":9558,"line_start":101,"line_end":101,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":192}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9561,"byte_end":9570,"line_start":101,"line_end":101,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":192}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9657,"byte_end":9663,"line_start":105,"line_end":105,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2386},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":10640,"byte_end":10648,"line_start":141,"line_end":141,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":192},"to":{"krate":0,"index":3185}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":11314,"byte_end":11327,"line_start":161,"line_end":161,"column_start":35,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":3185},"to":{"krate":0,"index":3194}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13427,"byte_end":13445,"line_start":233,"line_end":233,"column_start":23,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3255},"to":{"krate":0,"index":3198}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13448,"byte_end":13461,"line_start":233,"line_end":233,"column_start":44,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":3185},"to":{"krate":0,"index":3198}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14219,"byte_end":14228,"line_start":258,"line_end":258,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":3198},"to":{"krate":0,"index":3207}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14231,"byte_end":14252,"line_start":258,"line_end":258,"column_start":43,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":3194},"to":{"krate":0,"index":3207}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14578,"byte_end":14586,"line_start":270,"line_end":270,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":192},"to":{"krate":0,"index":3216}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15092,"byte_end":15097,"line_start":290,"line_end":290,"column_start":34,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3285}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15636,"byte_end":15647,"line_start":311,"line_end":311,"column_start":34,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3285}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15908,"byte_end":15917,"line_start":324,"line_end":324,"column_start":18,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":3230}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16186,"byte_end":16190,"line_start":337,"line_end":337,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16885,"byte_end":16889,"line_start":365,"line_end":365,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":294}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17101,"byte_end":17105,"line_start":374,"line_end":374,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":3230},"to":{"krate":0,"index":3244}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17108,"byte_end":17127,"line_start":374,"line_end":374,"column_start":39,"column_end":58},"kind":"SuperTrait","from":{"krate":0,"index":3216},"to":{"krate":0,"index":3244}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17928,"byte_end":17932,"line_start":409,"line_end":409,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":3230},"to":{"krate":0,"index":3255}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17935,"byte_end":17943,"line_start":409,"line_end":409,"column_start":39,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":192},"to":{"krate":0,"index":3255}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18309,"byte_end":18317,"line_start":422,"line_end":422,"column_start":25,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3230}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18536,"byte_end":18545,"line_start":432,"line_end":432,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":3266}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18807,"byte_end":18812,"line_start":446,"line_end":446,"column_start":34,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3266}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18971,"byte_end":18982,"line_start":454,"line_end":454,"column_start":34,"column_end":45},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3266}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19133,"byte_end":19141,"line_start":462,"line_end":462,"column_start":30,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3266}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19664,"byte_end":19673,"line_start":484,"line_end":484,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":3274}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20186,"byte_end":20195,"line_start":500,"line_end":500,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":3285}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20512,"byte_end":20525,"line_start":513,"line_end":513,"column_start":34,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":3274},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20528,"byte_end":20537,"line_start":513,"line_end":513,"column_start":50,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":3285},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20623,"byte_end":20628,"line_start":518,"line_end":518,"column_start":38,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3274}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20938,"byte_end":20943,"line_start":527,"line_end":527,"column_start":45,"column_end":50},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21383,"byte_end":21394,"line_start":543,"line_end":543,"column_start":45,"column_end":56},"kind":{"Impl":{"id":27}},"from":{"krate":15,"index":130},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21663,"byte_end":21674,"line_start":554,"line_end":554,"column_start":45,"column_end":56},"kind":{"Impl":{"id":28}},"from":{"krate":15,"index":130},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21925,"byte_end":21936,"line_start":565,"line_end":565,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":15,"index":130},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22152,"byte_end":22159,"line_start":576,"line_end":576,"column_start":28,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":6273},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22481,"byte_end":22490,"line_start":590,"line_end":590,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":3297}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22875,"byte_end":22880,"line_start":603,"line_end":603,"column_start":34,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23038,"byte_end":23043,"line_start":610,"line_end":610,"column_start":34,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3297}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23407,"byte_end":23418,"line_start":624,"line_end":624,"column_start":34,"column_end":45},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23609,"byte_end":23620,"line_start":632,"line_end":632,"column_start":34,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3297}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23990,"byte_end":24001,"line_start":647,"line_end":647,"column_start":29,"column_end":40},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3230}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24179,"byte_end":24187,"line_start":657,"line_end":657,"column_start":30,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24339,"byte_end":24347,"line_start":665,"line_end":665,"column_start":30,"column_end":38},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3297}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24853,"byte_end":24862,"line_start":681,"line_end":681,"column_start":32,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":3308}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":25442,"byte_end":25450,"line_start":700,"line_end":700,"column_start":39,"column_end":47},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3308}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48889,"byte_end":48890,"line_start":32,"line_end":32,"column_start":30,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":465},"to":{"krate":0,"index":461}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49084,"byte_end":49095,"line_start":41,"line_end":41,"column_start":27,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":15,"index":130},"to":{"krate":0,"index":461}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49309,"byte_end":49316,"line_start":50,"line_end":50,"column_start":30,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":1,"index":6273},"to":{"krate":0,"index":461}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49566,"byte_end":49578,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49835,"byte_end":49847,"line_start":72,"line_end":72,"column_start":26,"column_end":38},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3318},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":50515,"byte_end":50536,"line_start":99,"line_end":99,"column_start":29,"column_end":50},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":52408,"byte_end":52425,"line_start":167,"line_end":167,"column_start":29,"column_end":46},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":523},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":53438,"byte_end":53464,"line_start":206,"line_end":206,"column_start":32,"column_end":58},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":544},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54435,"byte_end":54452,"line_start":245,"line_end":245,"column_start":32,"column_end":49},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54849,"byte_end":54861,"line_start":261,"line_end":261,"column_start":24,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3318},"to":{"krate":0,"index":3465}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55755,"byte_end":55756,"line_start":293,"line_end":293,"column_start":30,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":593},"to":{"krate":0,"index":589}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56263,"byte_end":56275,"line_start":312,"line_end":312,"column_start":12,"column_end":24},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56542,"byte_end":56554,"line_start":322,"line_end":322,"column_start":26,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3356},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":57157,"byte_end":57178,"line_start":348,"line_end":348,"column_start":29,"column_end":50},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":58495,"byte_end":58512,"line_start":400,"line_end":400,"column_start":32,"column_end":49},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":637},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":59898,"byte_end":59906,"line_start":30,"line_end":30,"column_start":34,"column_end":42},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60004,"byte_end":60012,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":192}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60100,"byte_end":60108,"line_start":39,"line_end":39,"column_start":27,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":3185}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60349,"byte_end":60357,"line_start":49,"line_end":49,"column_start":35,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":3194}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60640,"byte_end":60648,"line_start":60,"line_end":60,"column_start":34,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":3297}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60977,"byte_end":60998,"line_start":77,"line_end":77,"column_start":21,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3430},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61416,"byte_end":61424,"line_start":97,"line_end":97,"column_start":32,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":3255}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61853,"byte_end":61875,"line_start":114,"line_end":114,"column_start":22,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":62936,"byte_end":62940,"line_start":22,"line_end":22,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":3230},"to":{"krate":0,"index":3465}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63408,"byte_end":63415,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":3465},"to":{"krate":0,"index":3483}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63828,"byte_end":63832,"line_start":50,"line_end":50,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":3230},"to":{"krate":0,"index":728}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63835,"byte_end":63844,"line_start":50,"line_end":50,"column_start":26,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":3285},"to":{"krate":0,"index":728}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64561,"byte_end":64566,"line_start":69,"line_end":69,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":728},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64569,"byte_end":64576,"line_start":69,"line_end":69,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2206},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64668,"byte_end":64673,"line_start":73,"line_end":73,"column_start":29,"column_end":34},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3230}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64798,"byte_end":64803,"line_start":80,"line_end":80,"column_start":32,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3465}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65125,"byte_end":65130,"line_start":92,"line_end":92,"column_start":35,"column_end":40},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3483}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65514,"byte_end":65525,"line_start":105,"line_end":105,"column_start":32,"column_end":43},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3465}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65880,"byte_end":65891,"line_start":118,"line_end":118,"column_start":35,"column_end":46},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3483}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":66240,"byte_end":66245,"line_start":130,"line_end":130,"column_start":30,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":728}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":66910,"byte_end":66921,"line_start":154,"line_end":154,"column_start":30,"column_end":41},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":728}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":67578,"byte_end":67586,"line_start":178,"line_end":178,"column_start":26,"column_end":34},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":728}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68382,"byte_end":68387,"line_start":209,"line_end":209,"column_start":31,"column_end":36},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68626,"byte_end":68637,"line_start":219,"line_end":219,"column_start":31,"column_end":42},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68868,"byte_end":68876,"line_start":229,"line_end":229,"column_start":27,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69597,"byte_end":69603,"line_start":258,"line_end":258,"column_start":26,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":732},"to":{"krate":0,"index":809}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":70917,"byte_end":70922,"line_start":302,"line_end":302,"column_start":37,"column_end":42},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":809}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71267,"byte_end":71278,"line_start":315,"line_end":315,"column_start":37,"column_end":48},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":809}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71615,"byte_end":71623,"line_start":328,"line_end":328,"column_start":33,"column_end":41},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":809}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71978,"byte_end":71986,"line_start":341,"line_end":341,"column_start":35,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":3653},"to":{"krate":0,"index":836}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72858,"byte_end":72859,"line_start":364,"line_end":364,"column_start":49,"column_end":50},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":844},"to":{"krate":0,"index":836}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":73209,"byte_end":73223,"line_start":379,"line_end":379,"column_start":31,"column_end":45},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":845},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95136,"byte_end":95146,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96821,"byte_end":96835,"line_start":89,"line_end":89,"column_start":26,"column_end":40},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":877},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80378,"byte_end":80386,"line_start":179,"line_end":179,"column_start":13,"column_end":21},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80642,"byte_end":80650,"line_start":192,"line_end":192,"column_start":25,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3538},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":89939,"byte_end":89954,"line_start":488,"line_end":488,"column_start":22,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":983},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91346,"byte_end":91351,"line_start":531,"line_end":531,"column_start":9,"column_end":14},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93762,"byte_end":93767,"line_start":604,"line_end":604,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":7636},"to":{"krate":0,"index":1001}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93770,"byte_end":93780,"line_start":604,"line_end":604,"column_start":29,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2077},"to":{"krate":0,"index":1001}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93783,"byte_end":93786,"line_start":604,"line_end":604,"column_start":42,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":1596},"to":{"krate":0,"index":1001}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93808,"byte_end":93815,"line_start":604,"line_end":604,"column_start":67,"column_end":74},"kind":"SuperTrait","from":{"krate":2,"index":2206},"to":{"krate":0,"index":1001}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93818,"byte_end":93823,"line_start":604,"line_end":604,"column_start":77,"column_end":82},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":1001}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93849,"byte_end":93850,"line_start":607,"line_end":607,"column_start":21,"column_end":22},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1003},"to":{"krate":0,"index":1001}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93981,"byte_end":93988,"line_start":612,"line_end":612,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":1001},"to":{"krate":0,"index":1004}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93991,"byte_end":93995,"line_start":612,"line_end":612,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":1004}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105392,"byte_end":105400,"line_start":80,"line_end":80,"column_start":77,"column_end":85},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105581,"byte_end":105585,"line_start":87,"line_end":87,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105588,"byte_end":105591,"line_start":87,"line_end":87,"column_start":30,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2066},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105594,"byte_end":105598,"line_start":87,"line_end":87,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":7278},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105624,"byte_end":105625,"line_start":88,"line_end":88,"column_start":23,"column_end":24},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1067},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105818,"byte_end":105834,"line_start":97,"line_end":97,"column_start":26,"column_end":42},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3609},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106044,"byte_end":106060,"line_start":106,"line_end":106,"column_start":31,"column_end":47},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3609},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106175,"byte_end":106183,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":117088,"byte_end":117096,"line_start":434,"line_end":434,"column_start":45,"column_end":53},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":3947}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":117614,"byte_end":117622,"line_start":453,"line_end":453,"column_start":39,"column_end":47},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":3960}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":119079,"byte_end":119088,"line_start":511,"line_end":511,"column_start":30,"column_end":39},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1122},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":119697,"byte_end":119714,"line_start":538,"line_end":538,"column_start":30,"column_end":47},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":120367,"byte_end":120372,"line_start":566,"line_end":566,"column_start":33,"column_end":38},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1151},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":121380,"byte_end":121388,"line_start":603,"line_end":603,"column_start":33,"column_end":41},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1174},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":122125,"byte_end":122133,"line_start":633,"line_end":633,"column_start":44,"column_end":52},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1174},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":122516,"byte_end":122527,"line_start":647,"line_end":647,"column_start":33,"column_end":44},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":123214,"byte_end":123225,"line_start":673,"line_end":673,"column_start":44,"column_end":55},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":123767,"byte_end":123775,"line_start":694,"line_end":694,"column_start":34,"column_end":42},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124145,"byte_end":124153,"line_start":707,"line_end":707,"column_start":37,"column_end":45},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":1784}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124481,"byte_end":124489,"line_start":718,"line_end":718,"column_start":28,"column_end":36},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124981,"byte_end":124984,"line_start":733,"line_end":733,"column_start":22,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":1543}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125017,"byte_end":125020,"line_start":734,"line_end":734,"column_start":23,"column_end":26},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125161,"byte_end":125164,"line_start":744,"line_end":744,"column_start":27,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125367,"byte_end":125370,"line_start":752,"line_end":752,"column_start":28,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125507,"byte_end":125510,"line_start":759,"line_end":759,"column_start":21,"column_end":24},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125777,"byte_end":125780,"line_start":769,"line_end":769,"column_start":23,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125882,"byte_end":125885,"line_start":776,"line_end":776,"column_start":20,"column_end":23},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125918,"byte_end":125921,"line_start":778,"line_end":778,"column_start":22,"column_end":25},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":7278}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126094,"byte_end":126097,"line_start":787,"line_end":787,"column_start":40,"column_end":43},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126603,"byte_end":126611,"line_start":808,"line_end":808,"column_start":30,"column_end":38},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3285}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126965,"byte_end":126980,"line_start":823,"line_end":823,"column_start":33,"column_end":48},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1307},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":127793,"byte_end":127807,"line_start":855,"line_end":855,"column_start":33,"column_end":47},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":128052,"byte_end":128060,"line_start":866,"line_end":866,"column_start":34,"column_end":42},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3274}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":128478,"byte_end":128486,"line_start":881,"line_end":881,"column_start":41,"column_end":49},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129550,"byte_end":129554,"line_start":44,"line_end":44,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129557,"byte_end":129564,"line_start":44,"line_end":44,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2206},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129567,"byte_end":129571,"line_start":44,"line_end":44,"column_start":47,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":7278},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129574,"byte_end":129577,"line_start":44,"line_end":44,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2066},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129585,"byte_end":129590,"line_start":44,"line_end":44,"column_start":65,"column_end":70},"kind":"SuperTrait","from":{"krate":2,"index":7636},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130752,"byte_end":130761,"line_start":91,"line_end":91,"column_start":21,"column_end":30},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131142,"byte_end":131151,"line_start":115,"line_end":115,"column_start":34,"column_end":43},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3632},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131243,"byte_end":131252,"line_start":119,"line_end":119,"column_start":37,"column_end":46},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3632},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131782,"byte_end":131791,"line_start":136,"line_end":136,"column_start":21,"column_end":30},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132283,"byte_end":132292,"line_start":161,"line_end":161,"column_start":37,"column_end":46},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3669},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133119,"byte_end":133123,"line_start":194,"line_end":194,"column_start":23,"column_end":27},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3706},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133280,"byte_end":133284,"line_start":202,"line_end":202,"column_start":24,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133791,"byte_end":133795,"line_start":223,"line_end":223,"column_start":23,"column_end":27},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3717},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133975,"byte_end":133979,"line_start":231,"line_end":231,"column_start":24,"column_end":28},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":138155,"byte_end":138160,"line_start":345,"line_end":345,"column_start":41,"column_end":46},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":138571,"byte_end":138576,"line_start":363,"line_end":363,"column_start":35,"column_end":40},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140395,"byte_end":140400,"line_start":421,"line_end":421,"column_start":12,"column_end":17},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140777,"byte_end":140782,"line_start":434,"line_end":434,"column_start":12,"column_end":17},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141182,"byte_end":141187,"line_start":447,"line_end":447,"column_start":20,"column_end":25},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":174071,"byte_end":174080,"line_start":1367,"line_end":1367,"column_start":38,"column_end":47},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1598},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":175324,"byte_end":175333,"line_start":1410,"line_end":1410,"column_start":30,"column_end":39},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1613},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176206,"byte_end":176215,"line_start":1439,"line_end":1439,"column_start":27,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1613},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176402,"byte_end":176411,"line_start":1449,"line_end":1449,"column_start":17,"column_end":26},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":177275,"byte_end":177289,"line_start":1482,"line_end":1482,"column_start":17,"column_end":31},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":178913,"byte_end":178918,"line_start":1544,"line_end":1544,"column_start":34,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1669},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":180590,"byte_end":180595,"line_start":1596,"line_end":1596,"column_start":31,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1669},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":181099,"byte_end":181113,"line_start":1616,"line_end":1616,"column_start":30,"column_end":44},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1697},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":181587,"byte_end":181601,"line_start":1635,"line_end":1635,"column_start":30,"column_end":44},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1710},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":182019,"byte_end":182024,"line_start":1652,"line_end":1652,"column_start":45,"column_end":50},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":182360,"byte_end":182365,"line_start":1665,"line_end":1665,"column_start":48,"column_end":53},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":1784}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":182694,"byte_end":182699,"line_start":1678,"line_end":1678,"column_start":45,"column_end":50},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183035,"byte_end":183040,"line_start":1691,"line_end":1691,"column_start":48,"column_end":53},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":1784}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183280,"byte_end":183285,"line_start":1701,"line_end":1701,"column_start":32,"column_end":37},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183477,"byte_end":183481,"line_start":1709,"line_end":1709,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":1755}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183622,"byte_end":183631,"line_start":1716,"line_end":1716,"column_start":36,"column_end":45},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3632},"to":{"krate":0,"index":1755}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183801,"byte_end":183810,"line_start":1723,"line_end":1723,"column_start":36,"column_end":45},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3669},"to":{"krate":0,"index":1755}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185171,"byte_end":185184,"line_start":1770,"line_end":1770,"column_start":20,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1766},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185379,"byte_end":185392,"line_start":1781,"line_end":1781,"column_start":21,"column_end":34},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187172,"byte_end":187183,"line_start":1833,"line_end":1833,"column_start":34,"column_end":45},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3731},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187446,"byte_end":187457,"line_start":1845,"line_end":1845,"column_start":45,"column_end":56},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3731},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187610,"byte_end":187621,"line_start":1851,"line_end":1851,"column_start":43,"column_end":54},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3731},"to":{"krate":2,"index":3939}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187832,"byte_end":187843,"line_start":1860,"line_end":1860,"column_start":34,"column_end":45},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3741},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188106,"byte_end":188117,"line_start":1872,"line_end":1872,"column_start":45,"column_end":56},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3741},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188270,"byte_end":188281,"line_start":1878,"line_end":1878,"column_start":43,"column_end":54},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3741},"to":{"krate":2,"index":3939}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188509,"byte_end":188522,"line_start":1888,"line_end":1888,"column_start":38,"column_end":51},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3751},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188625,"byte_end":188638,"line_start":1894,"line_end":1894,"column_start":37,"column_end":50},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3751},"to":{"krate":2,"index":1543}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188696,"byte_end":188709,"line_start":1896,"line_end":1896,"column_start":42,"column_end":55},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3751},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":189415,"byte_end":189429,"line_start":1922,"line_end":1922,"column_start":30,"column_end":44},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1833},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":189787,"byte_end":189801,"line_start":1938,"line_end":1938,"column_start":41,"column_end":55},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1833},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190036,"byte_end":190050,"line_start":1948,"line_end":1948,"column_start":39,"column_end":53},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1833},"to":{"krate":2,"index":3939}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190107,"byte_end":190120,"line_start":1952,"line_end":1952,"column_start":17,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190404,"byte_end":190417,"line_start":1962,"line_end":1962,"column_start":29,"column_end":42},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3751},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190942,"byte_end":190956,"line_start":1981,"line_end":1981,"column_start":30,"column_end":44},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1872},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191425,"byte_end":191439,"line_start":2001,"line_end":2001,"column_start":41,"column_end":55},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1872},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191783,"byte_end":191797,"line_start":2015,"line_end":2015,"column_start":39,"column_end":53},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1872},"to":{"krate":2,"index":3939}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":196007,"byte_end":196018,"line_start":132,"line_end":132,"column_start":35,"column_end":46},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197618,"byte_end":197629,"line_start":176,"line_end":176,"column_start":12,"column_end":23},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197993,"byte_end":198004,"line_start":187,"line_end":187,"column_start":20,"column_end":31},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":227300,"byte_end":227311,"line_start":997,"line_end":997,"column_start":41,"column_end":52},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":228026,"byte_end":228037,"line_start":1022,"line_end":1022,"column_start":45,"column_end":56},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":228378,"byte_end":228389,"line_start":1035,"line_end":1035,"column_start":48,"column_end":59},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":1784}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":228723,"byte_end":228734,"line_start":1048,"line_end":1048,"column_start":45,"column_end":56},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":229075,"byte_end":229086,"line_start":1061,"line_end":1061,"column_start":48,"column_end":59},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":1784}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":229331,"byte_end":229342,"line_start":1071,"line_end":1071,"column_start":32,"column_end":43},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":229691,"byte_end":229702,"line_start":1084,"line_end":1084,"column_start":50,"column_end":61},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":230883,"byte_end":230888,"line_start":1118,"line_end":1118,"column_start":56,"column_end":61},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":232513,"byte_end":232527,"line_start":1165,"line_end":1165,"column_start":30,"column_end":44},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2118},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":232943,"byte_end":232957,"line_start":1182,"line_end":1182,"column_start":41,"column_end":55},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2118},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233403,"byte_end":233416,"line_start":1200,"line_end":1200,"column_start":38,"column_end":51},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3764},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233519,"byte_end":233532,"line_start":1206,"line_end":1206,"column_start":37,"column_end":50},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3764},"to":{"krate":2,"index":1543}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233590,"byte_end":233603,"line_start":1208,"line_end":1208,"column_start":42,"column_end":55},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3764},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233766,"byte_end":233779,"line_start":1216,"line_end":1216,"column_start":17,"column_end":30},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":234063,"byte_end":234076,"line_start":1226,"line_end":1226,"column_start":29,"column_end":42},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3764},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":235547,"byte_end":235552,"line_start":1280,"line_end":1280,"column_start":34,"column_end":39},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2185},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":238042,"byte_end":238056,"line_start":1357,"line_end":1357,"column_start":30,"column_end":44},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2216},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":238509,"byte_end":238523,"line_start":1374,"line_end":1374,"column_start":41,"column_end":55},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2216},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239196,"byte_end":239205,"line_start":1401,"line_end":1401,"column_start":17,"column_end":26},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239767,"byte_end":239776,"line_start":1419,"line_end":1419,"column_start":30,"column_end":39},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2236},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241992,"byte_end":242005,"line_start":1489,"line_end":1489,"column_start":31,"column_end":44},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2255},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242076,"byte_end":242089,"line_start":1493,"line_end":1493,"column_start":21,"column_end":34},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":243130,"byte_end":243141,"line_start":1523,"line_end":1523,"column_start":41,"column_end":52},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2276},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":243572,"byte_end":243583,"line_start":1540,"line_end":1540,"column_start":52,"column_end":63},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2276},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":243854,"byte_end":243865,"line_start":1550,"line_end":1550,"column_start":38,"column_end":49},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3274}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":244486,"byte_end":244497,"line_start":1569,"line_end":1569,"column_start":41,"column_end":52},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2304},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":244928,"byte_end":244939,"line_start":1586,"line_end":1586,"column_start":52,"column_end":63},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2304},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":247705,"byte_end":247711,"line_start":17,"line_end":17,"column_start":13,"column_end":19},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":247993,"byte_end":247999,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2386},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248098,"byte_end":248104,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2386},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248259,"byte_end":248265,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2386},"to":{"krate":2,"index":1784}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248402,"byte_end":248408,"line_start":44,"line_end":44,"column_start":24,"column_end":30},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251601,"byte_end":251604,"line_start":57,"line_end":57,"column_start":13,"column_end":16},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252489,"byte_end":252492,"line_start":90,"line_end":90,"column_start":13,"column_end":16},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":254330,"byte_end":254333,"line_start":137,"line_end":137,"column_start":30,"column_end":33},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2398},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":254666,"byte_end":254669,"line_start":147,"line_end":147,"column_start":28,"column_end":31},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2398},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":255109,"byte_end":255116,"line_start":162,"line_end":162,"column_start":24,"column_end":31},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2442},"to":{"krate":2,"index":7595}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":255706,"byte_end":255713,"line_start":186,"line_end":186,"column_start":26,"column_end":33},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":256060,"byte_end":256068,"line_start":201,"line_end":201,"column_start":26,"column_end":34},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2457},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":257462,"byte_end":257471,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":267215,"byte_end":267226,"line_start":142,"line_end":142,"column_start":9,"column_end":20},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269710,"byte_end":269713,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269885,"byte_end":269888,"line_start":70,"line_end":70,"column_start":51,"column_end":54},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270221,"byte_end":270224,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271644,"byte_end":271647,"line_start":139,"line_end":139,"column_start":16,"column_end":19},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275287,"byte_end":275290,"line_start":236,"line_end":236,"column_start":20,"column_end":23},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280451,"byte_end":280464,"line_start":410,"line_end":410,"column_start":37,"column_end":50},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3941},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280570,"byte_end":280583,"line_start":416,"line_end":416,"column_start":36,"column_end":49},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3941},"to":{"krate":2,"index":1543}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280624,"byte_end":280637,"line_start":418,"line_end":418,"column_start":21,"column_end":34},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280928,"byte_end":280941,"line_start":428,"line_end":428,"column_start":33,"column_end":46},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3941},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":281325,"byte_end":281330,"line_start":442,"line_end":442,"column_start":34,"column_end":39},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3920},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":281845,"byte_end":281848,"line_start":462,"line_end":462,"column_start":29,"column_end":32},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3230}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":282860,"byte_end":282874,"line_start":499,"line_end":499,"column_start":34,"column_end":48},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2665},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284022,"byte_end":284025,"line_start":539,"line_end":539,"column_start":34,"column_end":37},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284247,"byte_end":284250,"line_start":549,"line_end":549,"column_start":34,"column_end":37},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3297}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284735,"byte_end":284744,"line_start":570,"line_end":570,"column_start":27,"column_end":36},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":285638,"byte_end":285641,"line_start":604,"line_end":604,"column_start":38,"column_end":41},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3274}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":285941,"byte_end":285944,"line_start":613,"line_end":613,"column_start":45,"column_end":48},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286057,"byte_end":286060,"line_start":619,"line_end":619,"column_start":45,"column_end":48},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286290,"byte_end":286293,"line_start":630,"line_end":630,"column_start":48,"column_end":51},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":1784}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286586,"byte_end":286601,"line_start":644,"line_end":644,"column_start":23,"column_end":38},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":287211,"byte_end":287214,"line_start":671,"line_end":671,"column_start":34,"column_end":37},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3285}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":287387,"byte_end":287390,"line_start":680,"line_end":680,"column_start":34,"column_end":37},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3266}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":293844,"byte_end":293852,"line_start":9,"line_end":9,"column_start":37,"column_end":45},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2781},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":294191,"byte_end":294199,"line_start":25,"line_end":25,"column_start":24,"column_end":32},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2792},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":294775,"byte_end":294783,"line_start":47,"line_end":47,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3653},"to":{"krate":0,"index":2799}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":295006,"byte_end":295007,"line_start":58,"line_end":58,"column_start":27,"column_end":28},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2802},"to":{"krate":0,"index":2799}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":295044,"byte_end":295050,"line_start":61,"line_end":61,"column_start":13,"column_end":19},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_utils.rs","byte_start":296146,"byte_end":296154,"line_start":2,"line_end":2,"column_start":26,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3653},"to":{"krate":0,"index":2810}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_utils.rs","byte_start":296993,"byte_end":296994,"line_start":31,"line_end":31,"column_start":26,"column_end":27},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2818},"to":{"krate":0,"index":2810}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":298043,"byte_end":298051,"line_start":37,"line_end":37,"column_start":14,"column_end":22},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":303729,"byte_end":303744,"line_start":209,"line_end":209,"column_start":32,"column_end":47},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2868},"to":{"krate":0,"index":2864}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":303899,"byte_end":303900,"line_start":216,"line_end":216,"column_start":35,"column_end":36},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2876},"to":{"krate":0,"index":2864}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/traits_graph.rs","byte_start":312695,"byte_end":312700,"line_start":23,"line_end":23,"column_start":43,"column_end":48},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3308}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/traits_graph.rs","byte_start":313667,"byte_end":313678,"line_start":56,"line_end":56,"column_start":43,"column_end":54},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3308}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2822,"byte_end":2831,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3601,"byte_end":3609,"line_start":161,"line_end":161,"column_start":19,"column_end":27},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":2984}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3685,"byte_end":3695,"line_start":166,"line_end":166,"column_start":19,"column_end":29},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4043},"to":{"krate":0,"index":2984}}]}