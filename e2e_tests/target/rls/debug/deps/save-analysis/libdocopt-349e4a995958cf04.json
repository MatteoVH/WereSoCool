{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0","program":"/Users/danny/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","docopt","/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=349e4a995958cf04","-C","extra-filename=-349e4a995958cf04","--out-dir","/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps","-L","dependency=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps","--extern","lazy_static=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/liblazy_static-bbf544f678d4d4f5.rmeta","--extern","regex=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/libregex-97c45fae677ca319.rmeta","--extern","serde=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/libserde-c84dd7e843efc5fc.rmeta","--extern","strsim=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/libstrsim-de594e382063bd70.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/danny/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/libdocopt-349e4a995958cf04.rmeta"},"prelude":{"crate_id":{"name":"docopt","disambiguator":[15016336136769294922,4577595899027667281]},"crate_root":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src","external_crates":[{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15786589783347927115,14932276094748675792]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10298575208133357036,8040858178392247411]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12346914022686079705,4940267238012603511]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18114786932049689441,12972308710781110595]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3450676385096259377,17670937522874515785]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17577124700929205618,18199936732272738370]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12559880231068804868,15252340553816167694]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1187771448540952860,5203397268813630476]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[18283159763238190815,6626693072124271590]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[13458662043719537980,9570942752289014475]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11980204761434995587,1127255387257643439]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8467147480215253010,13194617755467267743]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8463084087322079994,16053869174229632260]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16926090732921528503,7551031884587596916]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","num":15,"id":{"name":"lazy_static","disambiguator":[2426988928949552621,12170792352948202598]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","num":16,"id":{"name":"regex","disambiguator":[14208229783246936682,3175397027101209001]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","num":17,"id":{"name":"aho_corasick","disambiguator":[10242204354046694522,2637701653894922538]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","num":18,"id":{"name":"memchr","disambiguator":[7113729241669223242,3210816797236985663]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","num":19,"id":{"name":"libc","disambiguator":[10767797722191738720,17309972904915843562]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","num":20,"id":{"name":"regex_syntax","disambiguator":[356106253063172402,426513356608688946]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","num":21,"id":{"name":"thread_local","disambiguator":[11822070899482983693,1151057672832971567]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","num":22,"id":{"name":"serde","disambiguator":[4269619027608282619,2126359848566064165]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","num":23,"id":{"name":"serde_derive","disambiguator":[7438561586149915087,9571399425716076769]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","num":24,"id":{"name":"strsim","disambiguator":[18301999681377272817,11584246606837779616]}}],"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","byte_start":0,"byte_end":6874,"line_start":1,"line_end":209,"column_start":1,"column_end":10}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":461},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","byte_start":6412,"byte_end":6419,"line_start":187,"line_end":187,"column_start":23,"column_end":30},"alias_span":null,"name":"ArgvMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","byte_start":6421,"byte_end":6433,"line_start":187,"line_end":187,"column_start":32,"column_end":44},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":451},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","byte_start":6435,"byte_end":6441,"line_start":187,"line_end":187,"column_start":46,"column_end":52},"alias_span":null,"name":"Docopt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":425},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","byte_start":6443,"byte_end":6448,"line_start":187,"line_end":187,"column_start":54,"column_end":59},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":520},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","byte_start":6450,"byte_end":6455,"line_start":187,"line_end":187,"column_start":61,"column_end":66},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","byte_start":0,"byte_end":6874,"line_start":1,"line_end":209,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":207},{"krate":0,"index":378}],"decl_id":null,"docs":" Docopt for Rust. This implementation conforms to the\n [official description of Docopt](http://docopt.org/) and\n [passes its test suite](https://github.com/docopt/docopt/pull/201).","sig":null,"attributes":[{"value":"crate_name = \"docopt\"","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","byte_start":6276,"byte_end":6301,"line_start":183,"line_end":183,"column_start":1,"column_end":26}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","byte_start":6366,"byte_end":6388,"line_start":185,"line_end":185,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":426},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":8586,"byte_end":8591,"line_start":54,"line_end":54,"column_start":5,"column_end":10},"name":"Usage","qualname":"::dopt::Error::Usage","value":"Error::Usage(String)","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Parsing the usage string failed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":429},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":8899,"byte_end":8903,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"Argv","qualname":"::dopt::Error::Argv","value":"Error::Argv(String)","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Parsing the argv specified failed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":432},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":9165,"byte_end":9172,"line_start":70,"line_end":70,"column_start":5,"column_end":12},"name":"NoMatch","qualname":"::dopt::Error::NoMatch","value":"Error::NoMatch","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" The given argv parsed successfully, but it did not match any example\n usage of the program.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":434},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":9287,"byte_end":9298,"line_start":74,"line_end":74,"column_start":5,"column_end":16},"name":"Deserialize","qualname":"::dopt::Error::Deserialize","value":"Error::Deserialize(String)","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" This indicates a problem deserializing a successful argv match into a\n deserializable value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":437},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":9464,"byte_end":9480,"line_start":78,"line_end":78,"column_start":5,"column_end":21},"name":"WithProgramUsage","qualname":"::dopt::Error::WithProgramUsage","value":"Error::WithProgramUsage(Box<Error>, String)","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Parsing failed, and the program usage should be printed next to the\n failure message. Typically this wraps `Argv` and `NoMatch` errors.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":441},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":9626,"byte_end":9630,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"Help","qualname":"::dopt::Error::Help","value":"Error::Help","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Decoding or parsing failed because the command line specified that the\n help message should be printed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":443},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":9820,"byte_end":9827,"line_start":88,"line_end":88,"column_start":5,"column_end":12},"name":"Version","qualname":"::dopt::Error::Version","value":"Error::Version(String)","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Decoding or parsing failed because the command line specified that the\n version should be printed","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":425},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":8345,"byte_end":8350,"line_start":48,"line_end":48,"column_start":10,"column_end":15},"name":"Error","qualname":"::dopt::Error","value":"Error::{Usage, Argv, NoMatch, Deserialize, WithProgramUsage, Help, Version}","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":443}],"decl_id":null,"docs":" Represents the different types of Docopt errors.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":10108,"byte_end":10113,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"fatal","qualname":"<Error>::fatal","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether this was a fatal error or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":10668,"byte_end":10672,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"exit","qualname":"<Error>::exit","value":"fn (&self) -> !","parent":null,"children":[],"decl_id":null,"docs":" Print this error and immediately exit the program.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":451},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":12149,"byte_end":12155,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"Docopt","qualname":"::dopt::Docopt","value":"Docopt {  }","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"decl_id":null,"docs":" The main Docopt type, which is constructed with a Docopt usage string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":12587,"byte_end":12590,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"new","qualname":"<Docopt>::new","value":"fn <S> (usage: S) -> Result<Docopt>","parent":null,"children":[],"decl_id":null,"docs":" Parse the Docopt usage string given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":13226,"byte_end":13237,"line_start":200,"line_end":200,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Docopt>::deserialize","value":"fn <'a, 'de, D> (&'a self) -> Result<D>","parent":null,"children":[],"decl_id":null,"docs":" Parse and deserialize the given argv.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":14127,"byte_end":14132,"line_start":220,"line_end":220,"column_start":12,"column_end":17},"name":"parse","qualname":"<Docopt>::parse","value":"fn (&self) -> Result<ArgvMap>","parent":null,"children":[],"decl_id":null,"docs":" Parse command line arguments and try to match them against a usage\n pattern specified in the Docopt string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":15271,"byte_end":15275,"line_start":250,"line_end":250,"column_start":12,"column_end":16},"name":"argv","qualname":"<Docopt>::argv","value":"fn <I, S> (mut self, argv: I) -> Docopt","parent":null,"children":[],"decl_id":null,"docs":" Set the argv to be used for Docopt parsing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":15835,"byte_end":15848,"line_start":264,"line_end":264,"column_start":12,"column_end":25},"name":"options_first","qualname":"<Docopt>::options_first","value":"fn (mut self, yes: bool) -> Docopt","parent":null,"children":[],"decl_id":null,"docs":" Enables the \"options first\" Docopt behavior.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":16432,"byte_end":16436,"line_start":279,"line_end":279,"column_start":12,"column_end":16},"name":"help","qualname":"<Docopt>::help","value":"fn (mut self, yes: bool) -> Docopt","parent":null,"children":[],"decl_id":null,"docs":" Enables automatic handling of `--help`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":16997,"byte_end":17004,"line_start":293,"line_end":293,"column_start":12,"column_end":19},"name":"version","qualname":"<Docopt>::version","value":"fn (mut self, version: Option<String>) -> Docopt","parent":null,"children":[],"decl_id":null,"docs":" Enables automatic handling of `--version`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":17134,"byte_end":17140,"line_start":299,"line_end":299,"column_start":12,"column_end":18},"name":"parser","qualname":"<Docopt>::parser","value":"fn (&self) -> &Parser","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":461},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":17978,"byte_end":17985,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"ArgvMap","qualname":"::dopt::ArgvMap","value":"ArgvMap { map }","parent":null,"children":[{"krate":0,"index":462}],"decl_id":null,"docs":" A map containing matched values from command line arguments.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":462},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":18015,"byte_end":18018,"line_start":328,"line_end":328,"column_start":9,"column_end":12},"name":"map","qualname":"::dopt::ArgvMap::map","value":"synonym::SynonymMap<std::string::String, dopt::Value>","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":19832,"byte_end":19843,"line_start":381,"line_end":381,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<ArgvMap>::deserialize","value":"fn <'de, T> (self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to deserialize the map of values into a struct.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":20266,"byte_end":20274,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"get_bool","qualname":"<ArgvMap>::get_bool","value":"fn (&self, key: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Finds the value corresponding to `key` and calls `as_bool()` on it.\n If the key does not exist, `false` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":20504,"byte_end":20513,"line_start":396,"line_end":396,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ArgvMap>::get_count","value":"fn (&self, key: &str) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Finds the value corresponding to `key` and calls `as_count()` on it.\n If the key does not exist, `0` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":20738,"byte_end":20745,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"get_str","qualname":"<ArgvMap>::get_str","value":"fn (&self, key: &str) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Finds the value corresponding to `key` and calls `as_str()` on it.\n If the key does not exist, `\"\"` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":20974,"byte_end":20981,"line_start":408,"line_end":408,"column_start":12,"column_end":19},"name":"get_vec","qualname":"<ArgvMap>::get_vec","value":"fn (&self, key: &str) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Finds the value corresponding to `key` and calls `as_vec()` on it.\n If the key does not exist, `vec!()` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":21262,"byte_end":21266,"line_start":416,"line_end":416,"column_start":12,"column_end":16},"name":"find","qualname":"<ArgvMap>::find","value":"fn (&self, key: &str) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw value corresponding to some `key`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":21419,"byte_end":21422,"line_start":421,"line_end":421,"column_start":12,"column_end":15},"name":"len","qualname":"<ArgvMap>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of values, not including synonyms.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":21770,"byte_end":21789,"line_start":430,"line_end":430,"column_start":12,"column_end":31},"name":"key_to_struct_field","qualname":"<ArgvMap>::key_to_struct_field","value":"fn (name: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts a Docopt key to a struct field name.\n This makes a half-hearted attempt at making the key a valid struct\n field name (like replacing `-` with `_`), but it does not otherwise\n guarantee that the result is a valid struct field name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":23083,"byte_end":23102,"line_start":469,"line_end":469,"column_start":12,"column_end":31},"name":"struct_field_to_key","qualname":"<ArgvMap>::struct_field_to_key","value":"fn (field: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts a struct field name to a Docopt key.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":521},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":25844,"byte_end":25850,"line_start":546,"line_end":546,"column_start":5,"column_end":11},"name":"Switch","qualname":"::dopt::Value::Switch","value":"Value::Switch(bool)","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" A boolean value from a flag that has no argument.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":524},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":25917,"byte_end":25924,"line_start":549,"line_end":549,"column_start":5,"column_end":12},"name":"Counted","qualname":"::dopt::Value::Counted","value":"Value::Counted(u64)","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" The number of occurrences of a repeated flag.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":527},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":26153,"byte_end":26158,"line_start":556,"line_end":556,"column_start":5,"column_end":10},"name":"Plain","qualname":"::dopt::Value::Plain","value":"Value::Plain(Option<String>)","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" A positional or flag argument.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":530},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":26308,"byte_end":26312,"line_start":561,"line_end":561,"column_start":5,"column_end":9},"name":"List","qualname":"::dopt::Value::List","value":"Value::List(Vec<String>)","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" A List of positional or flag arguments.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":520},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":25673,"byte_end":25678,"line_start":541,"line_end":541,"column_start":10,"column_end":15},"name":"Value","qualname":"::dopt::Value","value":"Value::{Switch, Counted, Plain, List}","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530}],"decl_id":null,"docs":" A matched command line value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":26596,"byte_end":26603,"line_start":570,"line_end":570,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<Value>::as_bool","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the value as a bool.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":27081,"byte_end":27089,"line_start":585,"line_end":585,"column_start":12,"column_end":20},"name":"as_count","qualname":"<Value>::as_count","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the value as a count of the number of times it occurred.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":27467,"byte_end":27473,"line_start":598,"line_end":598,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the value as a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":27838,"byte_end":27844,"line_start":609,"line_end":609,"column_start":12,"column_end":18},"name":"as_vec","qualname":"<Value>::as_vec","value":"fn (&self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value as a list of strings.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":110},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":28817,"byte_end":28829,"line_start":638,"line_end":638,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::dopt::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"decl_id":null,"docs":" Deserializer for `ArgvMap` into your own `Deserialize`able types.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":207},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parse","qualname":"::parse","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":237},{"krate":0,"index":243},{"krate":0,"index":573},{"krate":0,"index":580},{"krate":0,"index":244},{"krate":0,"index":248},{"krate":0,"index":259},{"krate":0,"index":263},{"krate":0,"index":269},{"krate":0,"index":659},{"krate":0,"index":677},{"krate":0,"index":675},{"krate":0,"index":679},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":699},{"krate":0,"index":696},{"krate":0,"index":694},{"krate":0,"index":692},{"krate":0,"index":708},{"krate":0,"index":714},{"krate":0,"index":712},{"krate":0,"index":716},{"krate":0,"index":728},{"krate":0,"index":726},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":288},{"krate":0,"index":296},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":785},{"krate":0,"index":790},{"krate":0,"index":788},{"krate":0,"index":322},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":792},{"krate":0,"index":803},{"krate":0,"index":801},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":340},{"krate":0,"index":346},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":573},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":41947,"byte_end":41953,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parse::Parser","value":"Parser { program, full_doc, usage, descs }","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":574},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":41964,"byte_end":41971,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"name":"program","qualname":"::parse::Parser::program","value":"std::string::String","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":575},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":41989,"byte_end":41997,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"name":"full_doc","qualname":"::parse::Parser::full_doc","value":"std::string::String","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":576},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":42015,"byte_end":42020,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"name":"usage","qualname":"::parse::Parser::usage","value":"std::string::String","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":577},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":42038,"byte_end":42043,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"name":"descs","qualname":"::parse::Parser::descs","value":"synonym::SynonymMap<parse::Atom, parse::Options>","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":42191,"byte_end":42194,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"fn (doc: &str) -> Result<Parser, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":42534,"byte_end":42541,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"matches","qualname":"<Parser>::matches","value":"fn (&self, argv: &Argv<'_>) -> Option<SynonymMap<String, Value>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":42829,"byte_end":42839,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"parse_argv","qualname":"<Parser>::parse_argv","value":"fn (&self, argv: Vec<String>, options_first: bool) -> Result<Argv<'_>, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":680},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63038,"byte_end":63043,"line_start":644,"line_end":644,"column_start":5,"column_end":10},"name":"Short","qualname":"::parse::Atom::Short","value":"Atom::Short(char)","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":683},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63055,"byte_end":63059,"line_start":645,"line_end":645,"column_start":5,"column_end":9},"name":"Long","qualname":"::parse::Atom::Long","value":"Atom::Long(String)","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":686},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63073,"byte_end":63080,"line_start":646,"line_end":646,"column_start":5,"column_end":12},"name":"Command","qualname":"::parse::Atom::Command","value":"Atom::Command(String)","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":689},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63094,"byte_end":63104,"line_start":647,"line_end":647,"column_start":5,"column_end":15},"name":"Positional","qualname":"::parse::Atom::Positional","value":"Atom::Positional(String)","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":679},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63027,"byte_end":63031,"line_start":643,"line_end":643,"column_start":10,"column_end":14},"name":"Atom","qualname":"::parse::Atom","value":"Atom::{Short, Long, Command, Positional}","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":689}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":708},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63152,"byte_end":63159,"line_start":651,"line_end":651,"column_start":12,"column_end":19},"name":"Options","qualname":"::parse::Options","value":"Options { repeats, arg, is_desc }","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":709},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63489,"byte_end":63496,"line_start":657,"line_end":657,"column_start":9,"column_end":16},"name":"repeats","qualname":"::parse::Options::repeats","value":"bool","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" Set to true if this atom is ever repeated in any context.\n For positional arguments, non-argument flags and commands, repetition\n means that they become countable.\n For flags with arguments, repetition means multiple distinct values\n can be specified (and are represented as a Vec).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":710},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63720,"byte_end":63723,"line_start":662,"line_end":662,"column_start":9,"column_end":12},"name":"arg","qualname":"::parse::Options::arg","value":"parse::Argument","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" This specifies whether this atom has any arguments.\n For commands and positional arguments, this is always Zero.\n Flags can have zero or one argument, with an optionally default value.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":711},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63809,"byte_end":63816,"line_start":665,"line_end":665,"column_start":9,"column_end":16},"name":"is_desc","qualname":"::parse::Options::is_desc","value":"bool","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" Whether it shows up in the \"options description\" second.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":717},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63886,"byte_end":63890,"line_start":670,"line_end":670,"column_start":5,"column_end":9},"name":"Zero","qualname":"::parse::Argument::Zero","value":"Argument::Zero","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":719},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63896,"byte_end":63899,"line_start":671,"line_end":671,"column_start":5,"column_end":8},"name":"One","qualname":"::parse::Argument::One","value":"Argument::One(Option<String>)","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":716},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63871,"byte_end":63879,"line_start":669,"line_end":669,"column_start":10,"column_end":18},"name":"Argument","qualname":"::parse::Argument","value":"Argument::{Zero, One}","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":719}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":67612,"byte_end":67615,"line_start":771,"line_end":771,"column_start":12,"column_end":15},"name":"new","qualname":"<Atom>::new","value":"fn (s: &str) -> Atom","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":70527,"byte_end":70531,"line_start":881,"line_end":881,"column_start":12,"column_end":16},"name":"Argv","qualname":"::parse::Argv","value":"Argv {  }","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":860},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":93183,"byte_end":93193,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"SynonymMap","qualname":"::synonym::SynonymMap","value":"SynonymMap {  }","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":93307,"byte_end":93310,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<SynonymMap<K, V>>::new","value":"fn () -> SynonymMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":93452,"byte_end":93466,"line_start":22,"line_end":22,"column_start":12,"column_end":26},"name":"insert_synonym","qualname":"<SynonymMap<K, V>>::insert_synonym","value":"fn (&mut self, from: K, to: K) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":93613,"byte_end":93617,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"keys","qualname":"<SynonymMap<K, V>>::keys","value":"fn (&self) -> Keys<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":93688,"byte_end":93692,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"iter","qualname":"<SynonymMap<K, V>>::iter","value":"fn (&self) -> Iter<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":93763,"byte_end":93771,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"synonyms","qualname":"<SynonymMap<K, V>>::synonyms","value":"fn (&self) -> Iter<'_, K, K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":93842,"byte_end":93846,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"find","qualname":"<SynonymMap<K, V>>::find","value":"fn (&self, k: &K) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":93942,"byte_end":93954,"line_start":43,"line_end":43,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<SynonymMap<K, V>>::contains_key","value":"fn (&self, k: &K) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":94053,"byte_end":94056,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<SynonymMap<K, V>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":94370,"byte_end":94377,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"resolve","qualname":"<SynonymMap<K, V>>::resolve","value":"fn (&self, k: &K) -> K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":94457,"byte_end":94460,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"get","qualname":"<SynonymMap<K, V>>::get","value":"fn <'a> (&'a self, k: &K) -> &'a V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":94541,"byte_end":94549,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"find_mut","qualname":"<SynonymMap<K, V>>::find_mut","value":"fn <'a> (&'a mut self, k: &K) -> Option<&'a mut V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":94760,"byte_end":94764,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"swap","qualname":"<SynonymMap<K, V>>::swap","value":"fn (&mut self, k: K, mut new: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":95045,"byte_end":95051,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"insert","qualname":"<SynonymMap<K, V>>::insert","value":"fn (&mut self, k: K, v: V) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":9845,"byte_end":9850,"line_start":91,"line_end":91,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":10981,"byte_end":10986,"line_start":124,"line_end":124,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":11635,"byte_end":11640,"line_start":145,"line_end":145,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":11848,"byte_end":11853,"line_start":154,"line_end":154,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":12282,"byte_end":12288,"line_start":172,"line_end":172,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":18055,"byte_end":18062,"line_start":331,"line_end":331,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":24444,"byte_end":24451,"line_start":505,"line_end":505,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":26335,"byte_end":26340,"line_start":564,"line_end":564,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":29117,"byte_end":29129,"line_start":654,"line_end":654,"column_start":11,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":37972,"byte_end":37987,"line_start":937,"line_end":937,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":38154,"byte_end":38169,"line_start":943,"line_end":943,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":38689,"byte_end":38707,"line_start":966,"line_end":966,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":38937,"byte_end":38955,"line_start":975,"line_end":975,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":42171,"byte_end":42177,"line_start":74,"line_end":74,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":43001,"byte_end":43007,"line_start":104,"line_end":104,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":51982,"byte_end":51988,"line_start":333,"line_end":333,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":53065,"byte_end":53074,"line_start":370,"line_end":370,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63951,"byte_end":63958,"line_start":674,"line_end":674,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":67594,"byte_end":67598,"line_start":770,"line_end":770,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":69244,"byte_end":69248,"line_start":835,"line_end":835,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":69738,"byte_end":69742,"line_start":847,"line_end":847,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":70228,"byte_end":70235,"line_start":865,"line_end":865,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":70362,"byte_end":70370,"line_start":871,"line_end":871,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":71142,"byte_end":71146,"line_start":904,"line_end":904,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":76658,"byte_end":76662,"line_start":1055,"line_end":1055,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":77264,"byte_end":77270,"line_start":1076,"line_end":1076,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":80785,"byte_end":80792,"line_start":1180,"line_end":1180,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":93277,"byte_end":93287,"line_start":14,"line_end":14,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":94340,"byte_end":94350,"line_start":60,"line_end":60,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":95183,"byte_end":95193,"line_start":92,"line_end":92,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":95458,"byte_end":95468,"line_start":102,"line_end":102,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/lib.rs","byte_start":6832,"byte_end":6837,"line_start":206,"line_end":206,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":207}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":9845,"byte_end":9850,"line_start":91,"line_end":91,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":10981,"byte_end":10986,"line_start":124,"line_end":124,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":425},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":11635,"byte_end":11640,"line_start":145,"line_end":145,"column_start":19,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":425},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":11848,"byte_end":11853,"line_start":154,"line_end":154,"column_start":20,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":425},"to":{"krate":22,"index":8045}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":12282,"byte_end":12288,"line_start":172,"line_end":172,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":18055,"byte_end":18062,"line_start":331,"line_end":331,"column_start":6,"column_end":13},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":24444,"byte_end":24451,"line_start":505,"line_end":505,"column_start":21,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":26335,"byte_end":26340,"line_start":564,"line_end":564,"column_start":6,"column_end":11},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":29117,"byte_end":29129,"line_start":654,"line_end":654,"column_start":11,"column_end":23},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":37972,"byte_end":37987,"line_start":937,"line_end":937,"column_start":15,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":38154,"byte_end":38169,"line_start":943,"line_end":943,"column_start":38,"column_end":53},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":175},"to":{"krate":22,"index":1331}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":38689,"byte_end":38707,"line_start":966,"line_end":966,"column_start":15,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/dopt.rs","byte_start":38937,"byte_end":38955,"line_start":975,"line_end":975,"column_start":38,"column_end":56},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":191},"to":{"krate":22,"index":1331}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":42171,"byte_end":42177,"line_start":74,"line_end":74,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":43001,"byte_end":43007,"line_start":104,"line_end":104,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":51982,"byte_end":51988,"line_start":333,"line_end":333,"column_start":21,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":573},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":53065,"byte_end":53074,"line_start":370,"line_end":370,"column_start":10,"column_end":19},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":63951,"byte_end":63958,"line_start":674,"line_end":674,"column_start":6,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":67594,"byte_end":67598,"line_start":770,"line_end":770,"column_start":6,"column_end":10},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":69244,"byte_end":69248,"line_start":835,"line_end":835,"column_start":21,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":679},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":69738,"byte_end":69742,"line_start":847,"line_end":847,"column_start":23,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":679},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":70228,"byte_end":70235,"line_start":865,"line_end":865,"column_start":6,"column_end":13},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":70362,"byte_end":70370,"line_start":871,"line_end":871,"column_start":6,"column_end":14},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":71142,"byte_end":71146,"line_start":904,"line_end":904,"column_start":10,"column_end":14},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":76658,"byte_end":76662,"line_start":1055,"line_end":1055,"column_start":25,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":77264,"byte_end":77270,"line_start":1076,"line_end":1076,"column_start":6,"column_end":12},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/parse.rs","byte_start":80785,"byte_end":80792,"line_start":1180,"line_end":1180,"column_start":14,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":93277,"byte_end":93287,"line_start":14,"line_end":14,"column_start":23,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":94340,"byte_end":94350,"line_start":60,"line_end":60,"column_start":31,"column_end":41},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":95183,"byte_end":95193,"line_start":92,"line_end":92,"column_start":56,"column_end":66},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":3947}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.0/src/synonym.rs","byte_start":95458,"byte_end":95468,"line_start":102,"line_end":102,"column_start":48,"column_end":58},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":7636}}]}