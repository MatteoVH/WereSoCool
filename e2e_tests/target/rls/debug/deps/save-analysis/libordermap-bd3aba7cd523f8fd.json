{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5","program":"/Users/danny/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ordermap","/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=bd3aba7cd523f8fd","-C","extra-filename=-bd3aba7cd523f8fd","--out-dir","/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps","-L","dependency=/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/danny/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/danny/Documents/dev/WereSoCool/sound/e2e_tests/target/rls/debug/deps/libordermap-bd3aba7cd523f8fd.rmeta"},"prelude":{"crate_id":{"name":"ordermap","disambiguator":[13784030297862274924,5993692251054135313]},"crate_root":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src","external_crates":[{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15786589783347927115,14932276094748675792]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10298575208133357036,8040858178392247411]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12346914022686079705,4940267238012603511]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18114786932049689441,12972308710781110595]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3450676385096259377,17670937522874515785]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17577124700929205618,18199936732272738370]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12559880231068804868,15252340553816167694]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1187771448540952860,5203397268813630476]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[18283159763238190815,6626693072124271590]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[13458662043719537980,9570942752289014475]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11980204761434995587,1127255387257643439]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8467147480215253010,13194617755467267743]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8463084087322079994,16053869174229632260]}},{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16926090732921528503,7551031884587596916]}}],"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1,"byte_end":57365,"line_start":2,"line_end":1877,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":21},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":717,"byte_end":727,"line_start":33,"line_end":33,"column_start":21,"column_end":31},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":751,"byte_end":762,"line_start":34,"line_end":34,"column_start":23,"column_end":34},"alias_span":null,"name":"MutableKeys","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":865},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":777,"byte_end":785,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"alias_span":null,"name":"OrderSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1,"byte_end":57365,"line_start":2,"line_end":1877,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":8},{"krate":0,"index":19},{"krate":0,"index":28},{"krate":0,"index":54},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":905},{"krate":0,"index":910},{"krate":0,"index":908},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":911},{"krate":0,"index":916},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":433},{"krate":0,"index":922},{"krate":0,"index":930},{"krate":0,"index":935},{"krate":0,"index":949},{"krate":0,"index":945},{"krate":0,"index":941},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":450},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":463},{"krate":0,"index":475},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":495},{"krate":0,"index":505},{"krate":0,"index":514},{"krate":0,"index":527},{"krate":0,"index":536},{"krate":0,"index":547},{"krate":0,"index":613},{"krate":0,"index":623},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":654},{"krate":0,"index":659},{"krate":0,"index":665},{"krate":0,"index":670},{"krate":0,"index":675},{"krate":0,"index":680},{"krate":0,"index":686},{"krate":0,"index":691},{"krate":0,"index":696},{"krate":0,"index":701},{"krate":0,"index":707},{"krate":0,"index":712},{"krate":0,"index":717},{"krate":0,"index":722},{"krate":0,"index":728},{"krate":0,"index":733},{"krate":0,"index":738},{"krate":0,"index":743},{"krate":0,"index":749},{"krate":0,"index":754},{"krate":0,"index":758},{"krate":0,"index":762},{"krate":0,"index":768},{"krate":0,"index":772},{"krate":0,"index":777},{"krate":0,"index":782},{"krate":0,"index":786},{"krate":0,"index":794},{"krate":0,"index":802},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":820},{"krate":0,"index":827},{"krate":0,"index":833},{"krate":0,"index":839},{"krate":0,"index":847},{"krate":0,"index":852},{"krate":0,"index":861}],"decl_id":null,"docs":" [`OrderMap`] is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1,"byte_end":22,"line_start":2,"line_end":2,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":21},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61407,"byte_end":61417,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"name":"Equivalent","qualname":"::equivalent::Equivalent","value":"Equivalent<K: ?Sized>","parent":null,"children":[{"krate":0,"index":23}],"decl_id":null,"docs":" Key equivalence trait.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61505,"byte_end":61515,"line_start":16,"line_end":16,"column_start":8,"column_end":18},"name":"equivalent","qualname":"::equivalent::Equivalent::equivalent","value":"fn (&self, key: &K) -> bool","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Compare self to `key` and return `true` if they are equal.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":61830,"byte_end":61843,"line_start":7,"line_end":7,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::mutable_keys::PrivateMarker","value":"PrivateMarker {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":35},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62392,"byte_end":62403,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"MutableKeys","qualname":"::mutable_keys::MutableKeys","value":"MutableKeys","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42}],"decl_id":null,"docs":" Opt-in mutable access to keys.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62415,"byte_end":62418,"line_start":22,"line_end":22,"column_start":10,"column_end":13},"name":"Key","qualname":"::mutable_keys::MutableKeys::Key","value":"type Key;","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":37},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62429,"byte_end":62434,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Value","qualname":"::mutable_keys::MutableKeys::Value","value":"type Value;","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62510,"byte_end":62523,"line_start":26,"line_end":26,"column_start":8,"column_end":21},"name":"get_full_mut2","qualname":"::mutable_keys::MutableKeys::get_full_mut2","value":"fn <Q> (&mut self, key: &Q) -> Option<(usize, &mut Self::Key, &mut Self::Value)>","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Return item index, mutable reference to key and value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62940,"byte_end":62947,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"retain2","qualname":"::mutable_keys::MutableKeys::retain2","value":"fn <F> (&mut self, keep: F) -> ()","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":63235,"byte_end":63251,"line_start":43,"line_end":43,"column_start":8,"column_end":24},"name":"__private_marker","qualname":"::mutable_keys::MutableKeys::__private_marker","value":"fn (&self) -> PrivateMarker","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" This method is not useful in itself – it is there to “seal” the trait\n for external implementation, so that we can add methods without\n causing breaking changes.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":54},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":865},{"krate":0,"index":869},{"krate":0,"index":78},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":95},{"krate":0,"index":149},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":182},{"krate":0,"index":186},{"krate":0,"index":190},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":204},{"krate":0,"index":210},{"krate":0,"index":216},{"krate":0,"index":222},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":253},{"krate":0,"index":259},{"krate":0,"index":266},{"krate":0,"index":271},{"krate":0,"index":277},{"krate":0,"index":284},{"krate":0,"index":289},{"krate":0,"index":295},{"krate":0,"index":306},{"krate":0,"index":312},{"krate":0,"index":317},{"krate":0,"index":327},{"krate":0,"index":332},{"krate":0,"index":340},{"krate":0,"index":348},{"krate":0,"index":356}],"decl_id":null,"docs":" A hash set implemented using `OrderMap`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":865},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65880,"byte_end":65888,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"OrderSet","qualname":"::set::OrderSet","value":"OrderSet {  }","parent":null,"children":[{"krate":0,"index":868}],"decl_id":null,"docs":" A hash set where the iteration order of the values is independent of their\n hash values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66464,"byte_end":66467,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<OrderSet<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set. (Does not allocate.)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66684,"byte_end":66697,"line_start":84,"line_end":84,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<OrderSet<T>>::with_capacity","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66963,"byte_end":66987,"line_start":94,"line_end":94,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<OrderSet<T, S>>::with_capacity_and_hasher","value":"fn (n: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67247,"byte_end":67250,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"len","qualname":"<OrderSet<T, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements in the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67407,"byte_end":67415,"line_start":110,"line_end":110,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<OrderSet<T, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67524,"byte_end":67535,"line_start":115,"line_end":115,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<OrderSet<T, S>>::with_hasher","value":"fn (hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with `hash_builder`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67731,"byte_end":67737,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"hasher","qualname":"<OrderSet<T, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the set's `BuildHasher`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67865,"byte_end":67873,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"capacity","qualname":"<OrderSet<T, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68132,"byte_end":68137,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"clear","qualname":"<OrderSet<T, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements in the set, while preserving its capacity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68235,"byte_end":68242,"line_start":146,"line_end":146,"column_start":12,"column_end":19},"name":"reserve","qualname":"<OrderSet<T, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" FIXME Not implemented fully yet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68676,"byte_end":68682,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"insert","qualname":"<OrderSet<T, S>>::insert","value":"fn (&mut self, value: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68847,"byte_end":68851,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"iter","qualname":"<OrderSet<T, S>>::iter","value":"fn (&self) -> Iter<T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69115,"byte_end":69125,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"difference","qualname":"<OrderSet<T, S>>::difference","value":"fn <'a, S2> (&'a self, other: &'a OrderSet<T, S2>) -> Difference<'a, T, S2>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69576,"byte_end":69596,"line_start":186,"line_end":186,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<OrderSet<T, S>>::symmetric_difference","value":"fn <'a, S2> (&'a self, other: &'a OrderSet<T, S2>) -> SymmetricDifference<'a, T, S, S2>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70016,"byte_end":70028,"line_start":198,"line_end":198,"column_start":12,"column_end":24},"name":"intersection","qualname":"<OrderSet<T, S>>::intersection","value":"fn <'a, S2> (&'a self, other: &'a OrderSet<T, S2>) -> Intersection<'a, T, S2>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70472,"byte_end":70477,"line_start":211,"line_end":211,"column_start":12,"column_end":17},"name":"union","qualname":"<OrderSet<T, S>>::union","value":"fn <'a, S2> (&'a self, other: &'a OrderSet<T, S2>) -> Union<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all values that are in `self` or `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70806,"byte_end":70814,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"contains","qualname":"<OrderSet<T, S>>::contains","value":"fn <Q> (&self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `value` exists in the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71103,"byte_end":71106,"line_start":232,"line_end":232,"column_start":12,"column_end":15},"name":"get","qualname":"<OrderSet<T, S>>::get","value":"fn <Q> (&self, value: &Q) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored in the set, if it is present,\n else `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71303,"byte_end":71311,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"get_full","qualname":"<OrderSet<T, S>>::get_full","value":"fn <Q> (&self, value: &Q) -> Option<(usize, &T)>","parent":null,"children":[],"decl_id":null,"docs":" Return item index and value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71678,"byte_end":71685,"line_start":249,"line_end":249,"column_start":12,"column_end":19},"name":"replace","qualname":"<OrderSet<T, S>>::replace","value":"fn (&mut self, value: T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one. Returns the replaced value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72157,"byte_end":72163,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"remove","qualname":"<OrderSet<T, S>>::remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" FIXME Same as .swap_remove","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72704,"byte_end":72715,"line_start":281,"line_end":281,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<OrderSet<T, S>>::swap_remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72952,"byte_end":72956,"line_start":290,"line_end":290,"column_start":12,"column_end":16},"name":"take","qualname":"<OrderSet<T, S>>::take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" FIXME Same as .swap_take","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73521,"byte_end":73530,"line_start":306,"line_end":306,"column_start":12,"column_end":21},"name":"swap_take","qualname":"<OrderSet<T, S>>::swap_take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74045,"byte_end":74061,"line_start":319,"line_end":319,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<OrderSet<T, S>>::swap_remove_full","value":"fn <Q> (&mut self, value: &Q) -> Option<(usize, T)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74329,"byte_end":74332,"line_start":328,"line_end":328,"column_start":12,"column_end":15},"name":"pop","qualname":"<OrderSet<T, S>>::pop","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74677,"byte_end":74683,"line_start":339,"line_end":339,"column_start":12,"column_end":18},"name":"retain","qualname":"<OrderSet<T, S>>::retain","value":"fn <F> (&mut self, mut keep: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scan through each value in the set and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74924,"byte_end":74928,"line_start":348,"line_end":348,"column_start":12,"column_end":16},"name":"sort","qualname":"<OrderSet<T, S>>::sort","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values by their default ordering.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75185,"byte_end":75192,"line_start":357,"line_end":357,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<OrderSet<T, S>>::sort_by","value":"fn <F> (&mut self, mut compare: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place using the comparison function `compare`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75491,"byte_end":75500,"line_start":367,"line_end":367,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<OrderSet<T, S>>::sorted_by","value":"fn <F> (self, mut cmp: F) -> IntoIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by value iterator of\n the values with the result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75828,"byte_end":75833,"line_start":377,"line_end":377,"column_start":12,"column_end":17},"name":"drain","qualname":"<OrderSet<T, S>>::drain","value":"fn (&mut self, range: RangeFull) -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `OrderSet`, returning all values as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76129,"byte_end":76138,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"get_index","qualname":"<OrderSet<T, S>>::get_index","value":"fn (&self, index: usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value by index","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76402,"byte_end":76419,"line_start":399,"line_end":399,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<OrderSet<T, S>>::swap_remove_index","value":"fn (&mut self, index: usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76540,"byte_end":76548,"line_start":405,"line_end":405,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":158}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":169},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76971,"byte_end":76975,"line_start":428,"line_end":428,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":172}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":186},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77425,"byte_end":77430,"line_start":450,"line_end":450,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":189}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79724,"byte_end":79735,"line_start":551,"line_end":551,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<OrderSet<T, S>>::is_disjoint","value":"fn <S2> (&self, other: &OrderSet<T, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":80105,"byte_end":80114,"line_start":562,"line_end":562,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<OrderSet<T, S>>::is_subset","value":"fn <S2> (&self, other: &OrderSet<T, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":80377,"byte_end":80388,"line_start":569,"line_end":569,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<OrderSet<T, S>>::is_superset","value":"fn <S2> (&self, other: &OrderSet<T, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":253},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":80520,"byte_end":80530,"line_start":577,"line_end":577,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":271},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81405,"byte_end":81417,"line_start":617,"line_end":617,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":289},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":82294,"byte_end":82313,"line_start":657,"line_end":657,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":294}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":83145,"byte_end":83150,"line_start":694,"line_end":694,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":316}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":922},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7951,"byte_end":7959,"line_start":292,"line_end":292,"column_start":12,"column_end":20},"name":"OrderMap","qualname":"::OrderMap","value":"OrderMap {  }","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"decl_id":null,"docs":" A hash table where the iteration order of the key-value pairs is independent\n of the hash values of the keys.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10514,"byte_end":10517,"line_start":386,"line_end":386,"column_start":12,"column_end":15},"name":"new","qualname":"<OrderMap<K, V>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map. (Does not allocate.)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10730,"byte_end":10743,"line_start":394,"line_end":394,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<OrderMap<K, V>>::with_capacity","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":11027,"byte_end":11051,"line_start":405,"line_end":405,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<OrderMap<K, V, S>>::with_capacity_and_hasher","value":"fn (n: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":11841,"byte_end":11844,"line_start":430,"line_end":430,"column_start":12,"column_end":15},"name":"len","qualname":"<OrderMap<K, V, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":11993,"byte_end":12001,"line_start":435,"line_end":435,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<OrderMap<K, V, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":12094,"byte_end":12105,"line_start":438,"line_end":438,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<OrderMap<K, V, S>>::with_hasher","value":"fn (hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with `hash_builder`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":12295,"byte_end":12301,"line_start":445,"line_end":445,"column_start":12,"column_end":18},"name":"hasher","qualname":"<OrderMap<K, V, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the map's `BuildHasher`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":12982,"byte_end":12990,"line_start":470,"line_end":470,"column_start":12,"column_end":20},"name":"capacity","qualname":"<OrderMap<K, V, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":489},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14411,"byte_end":14419,"line_start":522,"line_end":522,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry<'a, K, V, S>)","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Existing slot with equivalent key.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":492},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14505,"byte_end":14511,"line_start":524,"line_end":524,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::Entry::Vacant","value":"Entry::Vacant(VacantEntry<'a, K, V, S>)","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Vacant slot (no equivalent key in the map).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":484},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14317,"byte_end":14322,"line_start":520,"line_end":520,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entry","value":"Entry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":492}],"decl_id":null,"docs":" Entry for an existing key-value pair or a vacant location to\n insert one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14647,"byte_end":14656,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14909,"byte_end":14923,"line_start":537,"line_end":537,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, call: F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15156,"byte_end":15159,"line_start":546,"line_end":546,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15411,"byte_end":15416,"line_start":554,"line_end":554,"column_start":12,"column_end":17},"name":"index","qualname":"<Entry>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair exists or will be inserted.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":505},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15599,"byte_end":15612,"line_start":562,"line_end":562,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15799,"byte_end":15802,"line_start":570,"line_end":570,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15841,"byte_end":15844,"line_start":571,"line_end":571,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15921,"byte_end":15928,"line_start":574,"line_end":574,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16065,"byte_end":16070,"line_start":579,"line_end":579,"column_start":12,"column_end":17},"name":"index","qualname":"<OccupiedEntry>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the key-value pair\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16125,"byte_end":16133,"line_start":582,"line_end":582,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16221,"byte_end":16227,"line_start":586,"line_end":586,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (self, value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16314,"byte_end":16320,"line_start":590,"line_end":590,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16461,"byte_end":16473,"line_start":595,"line_end":595,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":527},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16567,"byte_end":16578,"line_start":601,"line_end":601,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16766,"byte_end":16769,"line_start":609,"line_end":609,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16808,"byte_end":16816,"line_start":610,"line_end":610,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16920,"byte_end":16925,"line_start":612,"line_end":612,"column_start":12,"column_end":17},"name":"index","qualname":"<VacantEntry>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair will be inserted.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16972,"byte_end":16978,"line_start":613,"line_end":613,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, value: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":19480,"byte_end":19485,"line_start":681,"line_end":681,"column_start":12,"column_end":17},"name":"clear","qualname":"<OrderMap<K, V, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":19879,"byte_end":19886,"line_start":696,"line_end":696,"column_start":12,"column_end":19},"name":"reserve","qualname":"<OrderMap<K, V, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more key-value pairs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25827,"byte_end":25833,"line_start":843,"line_end":843,"column_start":12,"column_end":18},"name":"insert","qualname":"<OrderMap<K, V, S>>::insert","value":"fn (&mut self, key: K, value: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":26867,"byte_end":26872,"line_start":870,"line_end":870,"column_start":12,"column_end":17},"name":"entry","qualname":"<OrderMap<K, V, S>>::entry","value":"fn (&mut self, key: K) -> Entry<K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key’s corresponding entry in the map for insertion and/or\n in-place manipulation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27090,"byte_end":27094,"line_start":877,"line_end":877,"column_start":12,"column_end":16},"name":"iter","qualname":"<OrderMap<K, V, S>>::iter","value":"fn (&self) -> Iter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27278,"byte_end":27286,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<OrderMap<K, V, S>>::iter_mut","value":"fn (&mut self) -> IterMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27473,"byte_end":27477,"line_start":891,"line_end":891,"column_start":12,"column_end":16},"name":"keys","qualname":"<OrderMap<K, V, S>>::keys","value":"fn (&self) -> Keys<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27652,"byte_end":27658,"line_start":898,"line_end":898,"column_start":12,"column_end":18},"name":"values","qualname":"<OrderMap<K, V, S>>::values","value":"fn (&self) -> Values<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27871,"byte_end":27881,"line_start":906,"line_end":906,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<OrderMap<K, V, S>>::values_mut","value":"fn (&mut self) -> ValuesMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the the values of the map,\n in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28125,"byte_end":28137,"line_start":915,"line_end":915,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<OrderMap<K, V, S>>::contains_key","value":"fn <Q> (&self, key: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if and equivalent to `key` exists in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28419,"byte_end":28422,"line_start":925,"line_end":925,"column_start":12,"column_end":15},"name":"get","qualname":"<OrderMap<K, V, S>>::get","value":"fn <Q> (&self, key: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28606,"byte_end":28614,"line_start":932,"line_end":932,"column_start":12,"column_end":20},"name":"get_full","qualname":"<OrderMap<K, V, S>>::get_full","value":"fn <Q> (&self, key: &Q) -> Option<(usize, &K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28925,"byte_end":28932,"line_start":943,"line_end":943,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OrderMap<K, V, S>>::get_mut","value":"fn <Q> (&mut self, key: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":29087,"byte_end":29099,"line_start":949,"line_end":949,"column_start":12,"column_end":24},"name":"get_full_mut","qualname":"<OrderMap<K, V, S>>::get_full_mut","value":"fn <Q> (&mut self, key: &Q) -> Option<(usize, &K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":29731,"byte_end":29737,"line_start":968,"line_end":968,"column_start":12,"column_end":18},"name":"remove","qualname":"<OrderMap<K, V, S>>::remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" NOTE: Same as .swap_remove","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30278,"byte_end":30289,"line_start":984,"line_end":984,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<OrderMap<K, V, S>>::swap_remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30807,"byte_end":30823,"line_start":998,"line_end":998,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<OrderMap<K, V, S>>::swap_remove_full","value":"fn <Q> (&mut self, key: &Q) -> Option<(usize, K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31239,"byte_end":31242,"line_start":1012,"line_end":1012,"column_start":12,"column_end":15},"name":"pop","qualname":"<OrderMap<K, V, S>>::pop","value":"fn (&mut self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last key-value pair","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31585,"byte_end":31591,"line_start":1023,"line_end":1023,"column_start":12,"column_end":18},"name":"retain","qualname":"<OrderMap<K, V, S>>::retain","value":"fn <F> (&mut self, mut keep: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33179,"byte_end":33188,"line_start":1068,"line_end":1068,"column_start":12,"column_end":21},"name":"sort_keys","qualname":"<OrderMap<K, V, S>>::sort_keys","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs by the default ordering of the keys.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33712,"byte_end":33719,"line_start":1082,"line_end":1082,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<OrderMap<K, V, S>>::sort_by","value":"fn <F> (&mut self, mut compare: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place using the comparison\n function `compare`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35169,"byte_end":35178,"line_start":1121,"line_end":1121,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<OrderMap<K, V, S>>::sorted_by","value":"fn <F> (mut self, mut cmp: F) -> IntoIter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35533,"byte_end":35538,"line_start":1130,"line_end":1130,"column_start":12,"column_end":17},"name":"drain","qualname":"<OrderMap<K, V, S>>::drain","value":"fn (&mut self, range: RangeFull) -> Drain<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `OrderMap`, returning all key-value pairs as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35882,"byte_end":35891,"line_start":1145,"line_end":1145,"column_start":12,"column_end":21},"name":"get_index","qualname":"<OrderMap<K, V, S>>::get_index","value":"fn (&self, index: usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36160,"byte_end":36173,"line_start":1154,"line_end":1154,"column_start":12,"column_end":25},"name":"get_index_mut","qualname":"<OrderMap<K, V, S>>::get_index_mut","value":"fn (&mut self, index: usize) -> Option<(&mut K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36481,"byte_end":36498,"line_start":1163,"line_end":1163,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<OrderMap<K, V, S>>::swap_remove_index","value":"fn (&mut self, index: usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":649},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43023,"byte_end":43027,"line_start":1342,"line_end":1342,"column_start":12,"column_end":16},"name":"Keys","qualname":"::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":653}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43494,"byte_end":43500,"line_start":1364,"line_end":1364,"column_start":12,"column_end":18},"name":"Values","qualname":"::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":674}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43978,"byte_end":43987,"line_start":1386,"line_end":1386,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":695}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44489,"byte_end":44493,"line_start":1408,"line_end":1408,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":716}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":733},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44986,"byte_end":44993,"line_start":1430,"line_end":1430,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":737}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":754},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45510,"byte_end":45518,"line_start":1452,"line_end":1452,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":757}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46001,"byte_end":46006,"line_start":1474,"line_end":1474,"column_start":12,"column_end":17},"name":"Drain","qualname":"::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":776}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61589,"byte_end":61590,"line_start":19,"line_end":19,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":63419,"byte_end":63427,"line_start":49,"line_end":49,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65969,"byte_end":65977,"line_start":60,"line_end":60,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66392,"byte_end":66400,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66791,"byte_end":66799,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67940,"byte_end":67948,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75969,"byte_end":75977,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76614,"byte_end":76622,"line_start":409,"line_end":409,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76725,"byte_end":76733,"line_start":415,"line_end":415,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76883,"byte_end":76891,"line_start":421,"line_end":421,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77055,"byte_end":77059,"line_start":432,"line_end":432,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77175,"byte_end":77179,"line_start":438,"line_end":438,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77338,"byte_end":77342,"line_start":444,"line_end":444,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77509,"byte_end":77514,"line_start":454,"line_end":454,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77627,"byte_end":77632,"line_start":460,"line_end":460,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77962,"byte_end":77970,"line_start":476,"line_end":476,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":78239,"byte_end":78247,"line_start":490,"line_end":490,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":78525,"byte_end":78533,"line_start":500,"line_end":500,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":78788,"byte_end":78796,"line_start":510,"line_end":510,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79044,"byte_end":79052,"line_start":521,"line_end":521,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79261,"byte_end":79269,"line_start":530,"line_end":530,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79494,"byte_end":79502,"line_start":540,"line_end":540,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79574,"byte_end":79582,"line_start":546,"line_end":546,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":248},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":80636,"byte_end":80646,"line_start":582,"line_end":582,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81089,"byte_end":81099,"line_start":602,"line_end":602,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81523,"byte_end":81535,"line_start":622,"line_end":622,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81977,"byte_end":81989,"line_start":642,"line_end":642,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":82442,"byte_end":82461,"line_start":661,"line_end":661,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":82927,"byte_end":82946,"line_start":683,"line_end":683,"column_start":45,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":83254,"byte_end":83259,"line_start":698,"line_end":698,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":83687,"byte_end":83692,"line_start":719,"line_end":719,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1139,"byte_end":1148,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1228,"byte_end":1237,"line_start":53,"line_end":53,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1313,"byte_end":1322,"line_start":57,"line_end":57,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1525,"byte_end":1534,"line_start":69,"line_end":69,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1851,"byte_end":1860,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1888,"byte_end":1897,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1982,"byte_end":1991,"line_start":86,"line_end":86,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":2219,"byte_end":2228,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":2487,"byte_end":2496,"line_start":105,"line_end":105,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":3389,"byte_end":3392,"line_start":130,"line_end":130,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":3478,"byte_end":3481,"line_start":135,"line_end":135,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":3705,"byte_end":3708,"line_start":144,"line_end":144,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":6258,"byte_end":6272,"line_start":236,"line_end":236,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":8816,"byte_end":8824,"line_start":328,"line_end":328,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10439,"byte_end":10447,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10845,"byte_end":10853,"line_start":399,"line_end":399,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14560,"byte_end":14565,"line_start":527,"line_end":527,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15759,"byte_end":15772,"line_start":569,"line_end":569,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16728,"byte_end":16739,"line_start":608,"line_end":608,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":17577,"byte_end":17585,"line_start":632,"line_end":632,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35710,"byte_end":35718,"line_start":1139,"line_end":1139,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":37066,"byte_end":37074,"line_start":1180,"line_end":1180,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43118,"byte_end":43122,"line_start":1346,"line_end":1346,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43244,"byte_end":43248,"line_start":1352,"line_end":1352,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43404,"byte_end":43408,"line_start":1358,"line_end":1358,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43591,"byte_end":43597,"line_start":1368,"line_end":1368,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43717,"byte_end":43723,"line_start":1374,"line_end":1374,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43886,"byte_end":43892,"line_start":1380,"line_end":1380,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44081,"byte_end":44090,"line_start":1390,"line_end":1390,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44218,"byte_end":44227,"line_start":1396,"line_end":1396,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44394,"byte_end":44403,"line_start":1402,"line_end":1402,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44584,"byte_end":44588,"line_start":1412,"line_end":1412,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44723,"byte_end":44727,"line_start":1418,"line_end":1418,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44896,"byte_end":44900,"line_start":1424,"line_end":1424,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45087,"byte_end":45094,"line_start":1434,"line_end":1434,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45237,"byte_end":45244,"line_start":1440,"line_end":1440,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45417,"byte_end":45424,"line_start":1446,"line_end":1446,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45591,"byte_end":45599,"line_start":1456,"line_end":1456,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45732,"byte_end":45740,"line_start":1462,"line_end":1462,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45911,"byte_end":45919,"line_start":1468,"line_end":1468,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46115,"byte_end":46120,"line_start":1478,"line_end":1478,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46260,"byte_end":46265,"line_start":1484,"line_end":1484,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46899,"byte_end":46907,"line_start":1511,"line_end":1511,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":47234,"byte_end":47242,"line_start":1526,"line_end":1526,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":47825,"byte_end":47833,"line_start":1547,"line_end":1547,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":48219,"byte_end":48227,"line_start":1562,"line_end":1562,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":48815,"byte_end":48823,"line_start":1580,"line_end":1580,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":49537,"byte_end":49545,"line_start":1598,"line_end":1598,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":49951,"byte_end":49959,"line_start":1611,"line_end":1611,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":50193,"byte_end":50201,"line_start":1620,"line_end":1620,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":50570,"byte_end":50578,"line_start":1635,"line_end":1635,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":375,"byte_end":378,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":54}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61589,"byte_end":61590,"line_start":19,"line_end":19,"column_start":46,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":25},"to":{"krate":0,"index":21}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":63419,"byte_end":63427,"line_start":49,"line_end":49,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":922},"to":{"krate":0,"index":35}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65969,"byte_end":65977,"line_start":60,"line_end":60,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66392,"byte_end":66400,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66791,"byte_end":66799,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67940,"byte_end":67948,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75969,"byte_end":75977,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76614,"byte_end":76622,"line_start":409,"line_end":409,"column_start":22,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":156},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76725,"byte_end":76733,"line_start":415,"line_end":415,"column_start":33,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":156},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76883,"byte_end":76891,"line_start":421,"line_end":421,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":156},"to":{"krate":2,"index":3939}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77055,"byte_end":77059,"line_start":432,"line_end":432,"column_start":26,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77175,"byte_end":77179,"line_start":438,"line_end":438,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77338,"byte_end":77342,"line_start":444,"line_end":444,"column_start":35,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":3939}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77509,"byte_end":77514,"line_start":454,"line_end":454,"column_start":26,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77627,"byte_end":77632,"line_start":460,"line_end":460,"column_start":37,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77962,"byte_end":77970,"line_start":476,"line_end":476,"column_start":29,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":3951}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":78239,"byte_end":78247,"line_start":490,"line_end":490,"column_start":32,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":3947}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":78525,"byte_end":78533,"line_start":500,"line_end":500,"column_start":26,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":3960}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":78788,"byte_end":78796,"line_start":510,"line_end":510,"column_start":34,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":3960}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79044,"byte_end":79052,"line_start":521,"line_end":521,"column_start":24,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79261,"byte_end":79269,"line_start":530,"line_end":530,"column_start":48,"column_end":56},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79494,"byte_end":79502,"line_start":540,"line_end":540,"column_start":19,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79574,"byte_end":79582,"line_start":546,"line_end":546,"column_start":12,"column_end":20},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":80636,"byte_end":80646,"line_start":582,"line_end":582,"column_start":29,"column_end":39},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81089,"byte_end":81099,"line_start":602,"line_end":602,"column_start":40,"column_end":50},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81523,"byte_end":81535,"line_start":622,"line_end":622,"column_start":29,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":271},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81977,"byte_end":81989,"line_start":642,"line_end":642,"column_start":40,"column_end":52},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":271},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":82442,"byte_end":82461,"line_start":661,"line_end":661,"column_start":34,"column_end":53},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":82927,"byte_end":82946,"line_start":683,"line_end":683,"column_start":45,"column_end":64},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":83254,"byte_end":83259,"line_start":698,"line_end":698,"column_start":29,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":83687,"byte_end":83692,"line_start":719,"line_end":719,"column_start":40,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1139,"byte_end":1148,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1228,"byte_end":1237,"line_start":53,"line_end":53,"column_start":16,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1313,"byte_end":1322,"line_start":57,"line_end":57,"column_start":20,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1525,"byte_end":1534,"line_start":69,"line_end":69,"column_start":10,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1851,"byte_end":1860,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":911},"to":{"krate":2,"index":1543}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1888,"byte_end":1897,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":911},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1982,"byte_end":1991,"line_start":86,"line_end":86,"column_start":24,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":911},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":2219,"byte_end":2228,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":911},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":2487,"byte_end":2496,"line_start":105,"line_end":105,"column_start":34,"column_end":43},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":3389,"byte_end":3392,"line_start":130,"line_end":130,"column_start":16,"column_end":19},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":919},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":3478,"byte_end":3481,"line_start":135,"line_end":135,"column_start":21,"column_end":24},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":919},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":3705,"byte_end":3708,"line_start":144,"line_end":144,"column_start":6,"column_end":9},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":6258,"byte_end":6272,"line_start":236,"line_end":236,"column_start":10,"column_end":24},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":8816,"byte_end":8824,"line_start":328,"line_end":328,"column_start":30,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10439,"byte_end":10447,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10845,"byte_end":10853,"line_start":399,"line_end":399,"column_start":15,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14560,"byte_end":14565,"line_start":527,"line_end":527,"column_start":19,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15759,"byte_end":15772,"line_start":569,"line_end":569,"column_start":19,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16728,"byte_end":16739,"line_start":608,"line_end":608,"column_start":19,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":17577,"byte_end":17585,"line_start":632,"line_end":632,"column_start":15,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35710,"byte_end":35718,"line_start":1139,"line_end":1139,"column_start":15,"column_end":23},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":37066,"byte_end":37074,"line_start":1180,"line_end":1180,"column_start":15,"column_end":23},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43118,"byte_end":43122,"line_start":1346,"line_end":1346,"column_start":29,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43244,"byte_end":43248,"line_start":1352,"line_end":1352,"column_start":40,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43404,"byte_end":43408,"line_start":1358,"line_end":1358,"column_start":38,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":3939}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43591,"byte_end":43597,"line_start":1368,"line_end":1368,"column_start":29,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43717,"byte_end":43723,"line_start":1374,"line_end":1374,"column_start":40,"column_end":46},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43886,"byte_end":43892,"line_start":1380,"line_end":1380,"column_start":38,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":3939}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44081,"byte_end":44090,"line_start":1390,"line_end":1390,"column_start":29,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44218,"byte_end":44227,"line_start":1396,"line_end":1396,"column_start":40,"column_end":49},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44394,"byte_end":44403,"line_start":1402,"line_end":1402,"column_start":38,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":3939}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44584,"byte_end":44588,"line_start":1412,"line_end":1412,"column_start":29,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44723,"byte_end":44727,"line_start":1418,"line_end":1418,"column_start":40,"column_end":44},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44896,"byte_end":44900,"line_start":1424,"line_end":1424,"column_start":38,"column_end":42},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":3939}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45087,"byte_end":45094,"line_start":1434,"line_end":1434,"column_start":29,"column_end":36},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":733},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45237,"byte_end":45244,"line_start":1440,"line_end":1440,"column_start":40,"column_end":47},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":733},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45417,"byte_end":45424,"line_start":1446,"line_end":1446,"column_start":38,"column_end":45},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":733},"to":{"krate":2,"index":3939}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45591,"byte_end":45599,"line_start":1456,"line_end":1456,"column_start":25,"column_end":33},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":754},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45732,"byte_end":45740,"line_start":1462,"line_end":1462,"column_start":40,"column_end":48},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":754},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45911,"byte_end":45919,"line_start":1468,"line_end":1468,"column_start":34,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":754},"to":{"krate":2,"index":3939}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46115,"byte_end":46120,"line_start":1478,"line_end":1478,"column_start":29,"column_end":34},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46260,"byte_end":46265,"line_start":1484,"line_end":1484,"column_start":40,"column_end":45},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46899,"byte_end":46907,"line_start":1511,"line_end":1511,"column_start":32,"column_end":40},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":3951}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":47234,"byte_end":47242,"line_start":1526,"line_end":1526,"column_start":47,"column_end":55},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":47825,"byte_end":47833,"line_start":1547,"line_end":1547,"column_start":50,"column_end":58},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":1784}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":48219,"byte_end":48227,"line_start":1562,"line_end":1562,"column_start":40,"column_end":48},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":3947}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":48815,"byte_end":48823,"line_start":1580,"line_end":1580,"column_start":34,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":3960}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":49537,"byte_end":49545,"line_start":1598,"line_end":1598,"column_start":46,"column_end":54},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":3960}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":49951,"byte_end":49959,"line_start":1611,"line_end":1611,"column_start":27,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":50193,"byte_end":50201,"line_start":1620,"line_end":1620,"column_start":60,"column_end":68},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":50570,"byte_end":50578,"line_start":1635,"line_end":1635,"column_start":22,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":2045}}]}