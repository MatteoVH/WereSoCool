pub mod violas {
    use operations::Op;

    pub fn violas1() -> Op {
        fn phrase() -> Op {
            Op::Sequence {
                operations: vec![
                    Op::Compose {
                        operations: vec![
                            Op::Sequence {
                                operations: vec![
                                    r![(3, 2, 0.0, 0.3, -0.5), (6, 5, 0.0, 0.3, 0.5)],
                                    r![(2, 1, 0.0, 0.3, -0.6), (3, 2, 0.0, 0.3, 0.7)],
                                    r![(12, 5, 0.0, 0.3, -0.7), (2, 1, 0.0, 0.3, 0.8)],
                                    r![(3, 1, 0.0, 0.3, -0.8), (12, 5, 0.0, 0.3, 0.9)],
                                ],
                            },
                            Op::Length { m: 0.5 },
                        ],
                    },
                    r![(2, 1, 0.0, 0.3, 0.0), (4, 3, 0.0, 0.3, 0.0)],
                    Op::Silence { m: 1.0 },
                    //
                    Op::Compose {
                        operations: vec![
                            Op::Sequence {
                                operations: vec![
                                    r![(8, 5, 0.0, 0.3, -0.5), (4, 3, 0.0, 0.3, 0.5)],
                                    r![(2, 1, 0.0, 0.3, -0.7), (8, 5, 0.0, 0.3, 0.8)],
                                    r![(8, 3, 0.0, 0.3, -0.8), (2, 1, 0.0, 0.3, 0.9)],
                                    r![(16, 5, 0.0, 0.3, 1.0), (8, 3, 0.0, 0.3, 1.0)],
                                ],
                            },
                            Op::Length { m: 0.5 },
                        ],
                    },
                    r![(15, 8, 0.0, 0.3, 0.0), (4, 3, 0.0, 0.3, 0.0)],
                    Op::Silence { m: 1.0 },
                    //
                    Op::Compose {
                        operations: vec![
                            Op::Sequence {
                                operations: vec![
                                    r![(4, 3, 0.0, 0.3, -0.5), (9, 8, 0.0, 0.3, 0.5)],
                                    r![(15, 8, 0.0, 0.3, -0.6), (4, 3, 0.0, 0.3, 0.6)],
                                    r![(9, 4, 0.0, 0.3, -0.7), (15, 8, 0.0, 0.3, 0.7)],
                                    r![(8, 3, 0.0, 0.3, -0.9), (9, 4, 0.0, 0.3, 0.8)],
                                ],
                            },
                            Op::Length { m: 0.5 },
                        ],
                    },
                    r![(3, 2, 0.0, 0.3, 0.0), (6, 5, 0.0, 0.3, 0.0)],
                    Op::Silence { m: 1.0 },
                    //
                    Op::Compose {
                        operations: vec![
                            Op::Sequence {
                                operations: vec![
                                    r![(6, 5, 0.0, 0.3, -0.5), (1, 1, 0.0, 0.3, 0.6)],
                                    r![(3, 2, 0.0, 0.3, -0.7), (6, 5, 0.0, 0.3, 0.8)],
                                    r![(2, 1, 0.0, 0.3, -0.9), (3, 2, 0.0, 0.3, 0.9)],
                                    r![(12, 5, 0.0, 0.3, -1.0), (2, 1, 0.0, 0.3, 1.0)],
                                ],
                            },
                            Op::Length { m: 0.5 },
                        ],
                    },
                    r![(16, 5, 0.0, 0.3, 0.0), (2, 1, 0.0, 0.3, 0.0)],
                    Op::Silence { m: 1.0 },
                    //5
                    Op::Compose {
                        operations: vec![
                            Op::Sequence {
                                operations: vec![
                                    r![(8, 5, 0.0, 0.3, -0.6), (1, 1, 0.0, 0.3, 0.5)],
                                    r![(2, 1, 0.0, 0.3, -0.7), (6, 5, 0.0, 0.3, 0.6)],
                                    r![(12, 5, 0.0, 0.3, -0.8), (8, 5, 0.0, 0.3, 0.7)],
                                    r![(16, 5, 0.0, 0.3, -0.9), (2, 1, 0.0, 0.3, 0.9)],
                                ],
                            },
                            Op::Length { m: 0.5 },
                        ],
                    },
                    r![(3, 1, 0.0, 0.3, 0.0), (9, 5, 0.0, 0.3, 0.0)],
                    Op::Silence { m: 1.0 },
                ],
            }
        }

        fn result() -> Op {
            Op::Sequence {
                operations: vec![
                    Op::Silence { m: 3.0 },
                    Op::Compose {
                        operations: vec![phrase(), Op::Gain { m: 0.25 }],
                    },
                ],
            }
        }

        result()
    }
}
