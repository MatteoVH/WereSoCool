index,
total samples, 
attack,
decay,


if total_samples < attack + decay:
  attack, decay = total_samples/2
if index < attack:
  gain = gain * attack_gain(index, distance)
if index > decay:
  gain = gain * decay_gain
else:
  gain



vec![
  RenderOp {
      f: 220.0,
      p: 0.0,
      g: (0.5, 0.5),
      l: 1.0,
      t: 0.0,
      attack: 44_100.0,
      decay: 44_100.0,
      decay_length: 2,
      samples: 44100,
      total_samples: 44100,
      index: 0,
      voice: 0,
      event: 0,
      portamento: 1024.0,
      osc_type: OscType::Sine,
      next_l_silent: false,
      next_r_silent: false,
  },
  RenderOp {
      f: 330.0,
      p: 0.4,
      l: 1.0,
      g: (0.7, 0.3),
      t: 0.0,
      attack: 44_100.0,
      decay: 44_100.0,
      decay_length: 2,
      samples: 44100,
      total_samples: 44100,
      index: 0,
      voice: 1,
      event: 0,
      portamento: 1024.0,
      osc_type: OscType::Sine,
      next_l_silent: false,
      next_r_silent: false,
  }
]

Oscillator => 
* (Voice, Voice)
- fn generate(past_freq, past_gain, present: &RenderOp, next_silent: (bool, bool), n_samples: usize);

Voice =>
* past_freq, past_gain, past_osc_type,
- fn generate(op: &RenderOp, n_samples: usize);

